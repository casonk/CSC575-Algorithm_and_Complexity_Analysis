(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    655281,      11576]
NotebookOptionsPosition[    653520,      11538]
NotebookOutlinePosition[    653971,      11555]
CellTagsIndexPosition[    653928,      11552]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["sum_{i=1}^{r} sum_{j=1}^{c} [ (r + 1 - i) * (c + 1 - j) ]", \
"WolframAlphaLong",
 CellChangeTimes->{{3.8857457548933096`*^9, 3.8857457592353086`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"830cb9be-4eed-4266-8b4d-8a13d1b7d837"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "sum_{i=1}^{r} sum_{j=1}^{c} [ (r + 1 - i) * (c + 1 - j) ]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Sum", "scanner" -> "Sum", "id" -> "Result", "position" -> 
     "100", "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Sum[Sum[(r + 1 - i) (c + 1 - j), {j, 1, c}], {i, 1, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"i", "=", "1"}], "r"], 
                RowBox[{"(", 
                  FormBox[
                   TagBox[
                    StyleBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "c"], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"r", "+", "1", "-", "i"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"c", "+", "1", "-", "j"}], ")"}]}]}], ScriptLevel -> 
                    0, StripOnInput -> False], HoldForm], TraditionalForm], 
                  ")"}]}], "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox["1", "4"], " ", "c", " ", 
                 RowBox[{"(", 
                   RowBox[{"c", "+", "1"}], ")"}], " ", "r", " ", 
                 RowBox[{"(", 
                   RowBox[{"r", "+", "1"}], ")"}]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot3D[(c (1 + c) r (1 + r))/4, {c, -1.7, 0.7}, {r, -1.7, 0.7}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            Graphics3DBox[{
              GraphicsComplex3DBox[CompressedData["
1:eJy1nXm4zuXWx2lATim9hepokgpdxK6U0lYaJDqOyrBJkdBAxigStqKEItJg
KmRKmkzhkepQlKkiyZzqMUQyi/d9z/P9rH09330913udP97+2df+dFv7/q21
fvew1rrv30UtHq//0AkFChQ4XqhAgRP/5+emmRVPzso6kuBnx9orvz5432fZ
RZ88sVzhLgfz8axqa+r8OGNf8KyP7ri/UJeF2U2PTG3/3sE/gq85rUvOXV9M
z352bu9XcqvtDv70e3POLzGxg9ong3fpVbzBR1eMS0x7usGshj1+Dp7IalPn
lq+nJwr8+7+NwYe/V+WE6kU/TIw76e7B9Qp/l6/9S2fWqX5z6c/zye918/oa
X900MNv7s3Ft62e7f7Eo2/u/9NcHstr++H22P+9ZfxSqXyy5Mdv18+nj9xVt
1WpbPs7v6NX17Bw9w4e0eO6cimfMDj3DS+b2aLLniwmhZ/iTRz6/cOuh1qFn
+L5J/apUe+iN0DP8eLLTjAXLJ4Se4ff+kTts6dpJoWdvj55dPnr2/qBn7z96
9udFz64f9Ow87CT9YS/awZEf7fRz/zeVe55/5rTQM/zFdRXmLaj/RugZfkOL
S/pV+7xp6Bl+Z9kvb6r2+EuhZ/inDz1XcPb9b4Se4dW7fzH82pNHh569PXp2
+ejZ+4Oevf/o2Z8XPbt+0DO8ivSJntET7wt6hmNf/j2c/vA7Pw90/uHghFX9
Q8/wqcc7vdqsTO3QM3zukpGt3/7p6dAz/JWjB9c/vqF/6Ble9qTCI8ZVejH0
7O3Rs8tHz94f9Oz9R8/+vOjZ9YOe4aulT/SMPhiv0DOc9ws9w9P984/g9J/f
+XngQOPfVvT9W+gZ/vdZ42b17JAdeob/9UfNH/5VqXboGV6nbHajL6fWDT17
e/Ts8tGz9wc9e//Rsz8venb9oGd4D+kz3Z+TMV+k+3Myxrd0f07G+5juz8nw
n3R/TsbzpvtzMtF3+9ltZ+/vkJ3uz8nEPT/c/Nby7U9np/tzMnHgxmM/lPiz
V3a6P+e1T/fnPPnp/pzXn3R/zut/uj/nPW+6P+fpJ92fk4nO0id65vmYr9Ez
nPkFPcMZD9EznPcXPcPxN/oBRz/8zs9DhS6/78bt/UPP8PmDn5lxcvUXQ8/e
Hj27fPTs/UHP3n/07M+Lnl0/6Dn6KX2iZ56D9RJ6hjO/o2c48xF6hjN+omc4
7zt6huOf9A+OPvk9/edLoWdvj55dPnr2/qBn7z969udFz64f9AwfJn2iZ/rr
/gx3f4a7P8Pdn+Huz3D3Z7j7M9z92dujZ5ePnr0/6Nn7j579edGz6wc9Rz/N
n+mXj89wH5/hPj7DfXyG+/gM9/EZ7uMz3Mdnb8/vLh89e3/Qs/cfPfvzomfX
D3qG+/jM3/f1BtzXG3Bfb8B9vQH39Qbc1xtwX2/Afb3h7XlOl8/v3h/07P1H
z/686Nn1g57hvt7g7/j6Ge7rZ7ivn+G+fob7+hnu62e4r5/hvn729ujZ5fP8
3h9+9/6jZ39e9Oz6Qc9wXz/Hvsf2g3DfD8J9Pwj3/SDc94Nw3w/CfT8I9/2g
t0fPLh89e3/Qi/ef3/150bPrBz3DfT/Iv/P4hnP0DPf4BtzjG3CPb8A9vgH3
+Abc4xveHj27fPTs/UHP3n/05c/L764f9OwcPfP/Xc/OI44gXsXidfDVFq+D
97B4Hbyzxevg8y1eBx9m8Tpvj55dPnr2/qBn73+8J/a86NH1w+/Onyh1TsnS
3x5K8NP17zx5ZZWK1SZuyXaOXOf8zr9z+c75PRPP1H+PQ9LeOe0z6cf/7hW/
lik2Mfdwgp/wBstv/3u9wj9nO+d3/r+3d07/Msn3/tMuU/9dPu0zxW/979Iu
U//9747++eTvFyb35ZP/58Pnv3LBvgP54r09h5ds9Lcpq/M918p3nqzX89sN
+eKc/I487yd/H47/e3v6PcbaI5+/7/Lprz+Xj1f87nL4PdO494zJp3+uZ9o5
L3FG7s7T5+9P7Lxr2pfX98h770rsOr9i2f1rswdd80yhZ6/Isy/t+HfwkRP+
uvDssgcT/ISf1/bYqUUbb81+7pN+dz4/L689cvk78Gp1j9xUvvbG+AlfO7Lp
0K4HN2fn1Dh1RvbBvPbI5e/Aace/+7/8LZMeMvlhpuf9T/0tkz4z+Xkmu2Ty
///UnzPZK5M/Z7Jjpvcik/9n8ttM9s3k/5n8JNP7lcnfMr13md6jTP52dODc
RWfffyif/5RsWfuFgy8cyOeHcNq3/u3jsn3OXZhdxfKJlTRf1z2j1enzN+8N
Xr/3t92v7TEz2iNnoNZRtIcXe23qwbO2vpfdZtveFWOK5eUlP/hhy+z5pd4J
HvvaQSdOKHDf6Oxcy1cenpZab1Qve8G0pUt3BG+/qN+tr7V9LZFrebfFh1Pr
QNrDf912tPa8mi8nOq+oljXkkt9CToVuEz4dP2FicNo3XHf3wYlzxySmWD50
gdZLm8t1rF76203B//HcLe2z7/wg2iOn4PbUOpb28Gq3lruz0+qJicpTz3v2
i4brQk5dyYHTvqraj7J86yfqT4k5Z2XNbLsk+Ll6rlGWNzysdTXt4XX0vJu+
KzT49ddmh5yq0jOc9gulz3o10/O5Z05P2Ssna/TgQl0WBF8tu9MeOTWPpuxF
e/j78odefa7svvvsZSHnYfkhnPZXyN9WWb74evnz0fOeHFxh/uZ84x7c3yPe
L9bvq2e/UK/bifPiPYL/NOjUS5+c9XG8F/Dd2sfxXsC7Deo8f/RFb4f/w3Mm
j/jbq8uHhP/DWzdP7R/xZ/jpJy64YcmMvuG38G+qFVk9+6xXwg/hn2nfih/C
z+48/fRi34wMf4OfKT7K8qGfSA7+E/sb/V38JOoUTkj1E7vDKz6Yei7sHvqR
HrAv/AXpbZXlT09cltJzq5fKldtcYX3wbbIL9o34jeyIfdmHjXpgf5nvmk4O
+8Kf+ufa9x+d+3bYF95P+3fsC1/2RcEhF7d4OewLT55W7I7epXqHfeHbj6Xi
MNgXfvN9nx+rtbJj2Bf+xM51jxXK7hP2hQ9X/Af7wutMbZjz61kDwr7wWuKj
LA87WHKwL/wR/V3sCy+lfmJfeP8Cnf/9XNgXfnKxlB6wL3yD9LbK8rYjpGfs
C+8ju2Bf+ATZEfuynz7YYfIz//z00bAvvNFpH/Wus6hl2Bd+jeI22Bd+25Iq
RbPq1g/7wq974dtzph2/KewLv0LxTOwb8dczis5dsjwr7AtvOajuj59eXTPs
Cz+uOCr2hT9/1vA1pXPrhH0jnyw+yvK/ByQH+4Ye9HexL/we9RP7wtcfTD0X
9oU3kB6wL7yh9LbK8sW1pGfsC28uu2DfyHd1TNkx/f1NJl7v8MnJo2eMTqS/
v8lEy8trbd4679VE+vubTNRSvC79/U0m5jd96K77fuubSH9/k4mb999041cv
dU6kv7/JRNbMVBw7/f1NJi64r8ToG8a1yk5/f5OJS19a1rPE3i7ZUyy/3ED5
iPT3N/k/ej6lYeHavbLT399kYp34KMs715Wc9Pc3mSilv5v+/iYTO5qm+pn+
/iYTl8xOPVf6+5tMPCg9pL+/ycQK6W2V5anrS8/p728y0U52SX9/k4lxsiP2
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
Wr132HWn5LxdMD2PhpxPFeeJPCn7YMWFsO8uyfnE9r/o5xvFnbBvb8nZqjgV
9r1f/87zLCNuuHXaO7lr4zwp9l2uv7/X4lctJedD+QP2fVNyzlf8Dft+Kzm/
PJAev+I52N9hX+SMUDwQ+64kv2bxK/qzXutD7PuG5LRVfBL7IudTi189JDnM
d9iX/jRSvBT7IudHy6MhZ5feO+yKnKOK32KX9bduX1pryNZ8+ZQSyr8Mtjjw
BrUvrvgz+sf+9TQ+o/9SktPD8lwbJedGxcPRP3L6aZ2G/ktKTmHLc9GfGxSf
R/9HJKeV1oHoHznHLA5Mf/YrX4D+6c8ezUfoHzmTLM+FnMeVv0D/yNmi9yLy
0aZ/7LJbcX4/Z7EzAz+eIf5/QP/f2x/NwNd4f8Qz5X38PEjsv4wznnBOZKTF
veFtlW+lPXlAbw+nPeOJ9xM58GrKQ9F+l+mT9uRlrrbzL8TzvT0/S1k+mp/D
lWdBzii9jyfWSM/LHDa7IDf8TXqI/M15bR774ZuD+fRfs+UbD35a9FA+P2lW
eMrRiv84kI/X63TgnaJ9fsxn3+/X/TWpz8b9+fzq6dJT//jkhp/yjecvLr5m
UZ+z8/pPf86ounzNByM35Wvv/c/0d//j5/oP+5lJD5n6j7963hO/d875GTj1
JJy7gFNHRL0+nPox6rzh1A1SHwynXpS60hhXVF9KPaK3p47N5VP/5P2hbsb7
T72FPy/vbSb9YB/qauKeQXHqqdAPnDo69AOnfhL9wKmbRT9w6qXRj7dHPy4f
/Xh/4p4X6z/68edlnCpp4wz+xvxM/Qmc+Zn6E/yQ9pXsnhPaUxeRZXlD6pfg
tKd+CbvQvp/d50N76tmwF+2pb4RHHlB1etiR9rXS7r9KRnvqXadZnpG4K5z2
1D9jd9pTDw+nPfXw4yz/iHy4y8dPvP9R52r9x39cP3DXD37l+oe7/uO+G7Mv
3O3Le+r+Bnd/i/tKOJ8of4O7v+G3sT9TXRD+Cee8M34YeTrVieFvcOok8Ss4
9bH4D5y6aPwETj08/gDnHAR29/bY1+VjR+8P9vL+Yxd/XvTveot6HXHqmtAz
63HqzeCsx6k3Q/+05/w4POJbqi/CLrSnXjHuBVZ76hWxF+2pX4XTnvrVZy2P
ST0zPOqaVSeMfeMc8Mz0e/BoT307dqc95x3gce5Q5wjwB9pz/gVOe86/4Ccu
H+7y8R/vP9z7j1+5fuCuH/zN9Q93/S+1PCn2jXu+zL74p/sb3P0Nv6U9dXdw
2lN3h99G3pC6RPknnHsJ8EM49bH4G5y6aPwKTj183AMrzjkI/ATO+Zc45yPO
uSfs7u3jHkOTjx29P9jL+49d/HnRv+st7qsSp44RPbP/pr4Uzv6b+lL0T/sF
du8l7bnnAbvQnvpkOO2pT8ZetKdeHU576tWxI+05vwCnPecXsC/tOc8Cpz3n
WaZZXpXzTXDac74Jfwj92P2xtOe82zjLtyIf7vLxH+8/3PuPX7l+4K4f/M31
D3f944duX7jbF/90f4O7v+G3tKfOFk576mzxW+JDVc1v4XXNP+Fnmh/Ca5m/
xTly8yv4OvMfeFnzE/hQ8wdvj31dPnb0/mAv7z928edF/6439AyvY3qOfHIy
fdwg3lbHxm3af2LjBu3PtfE82tu4EfXRNs7TfrCNG7R/xMZ/2h+wcYP2jWxe
oH1dGzdoX8rmC9r/aeNG9MfmEdrPsnEj7hGx+cXlw10+/uP9h3v/8SvXD9z1
E+ejTP9w1z9+6PaFu33xT/c3uPsbfkv7OTZuuL/Fd2QUD15o62R4VVsPR371
hPR1L7yUrW/h99g6Fs45x/i+jHiOrUvh42396e3j+zImP74vY/2J78tY/+Oc
jz1vfF/G9BbflxG/xtZ1xNc5PwInvv6+7RNpz71JcNqvtv0j7Tl/FPcHqX03
21fSnvNocNpzHg070p7ziXDaN7B9KO05rwqn/YO2P6U955fjngLOQdq+lfac
Z4fT/hbbz7r8OEdt8vEf7z/c+49fuX7grh/8zfUPd/3jh27fOF9n9sU/3d/g
7m/4Le05RwOn/Xe27yb/c4XF5eAPW/wN/oLF2eAbLJ4Gb2hxM/gKi4/Bu1sc
LPLAFu/y9nEPucmPc8XWn7iH3Pof95Db88Z5OdNb3ENOntriSFFPZHFR4vfk
idB/K8tHo3/kcK4QTvttFpem/QiLf9K+j8WraV/L4p+0b25xbNrXt/gn7dtZ
fJv2X1v8k/YTLO5N+9oW/6R9Z4uHu3y4y8dPvP9w7z/+4/qBu37wK9c/3PW/
1PJ02Bfu9sUP3a/g7lf4J+2r2T3tnm+NfBDnjz0fJD7B80HcF9LR8kHcM+H5
IPErPR8kftjzQdY+8kEmP/JB1p/IB1n/Ix9kzxv5INMP+nTOeTbyR5xr4/wM
nHM01OXDqc+n3hdO3e9Y1aXBJ6mekPokOHVK1E94Povze8S9v1Ten3Ni8G9V
j8G5FPgw1VlR7w6PcwHqP5x6497qP5w6RuqQ4NRHUX8Ap66DPDfx5DmqJ+Gc
IXG5UjrPwnPBOd/HOSh4a9UpcX4GvkDnjKjLh3+tulPqueG7VPdIHTC8reql
z9Q6Hv6y6i2pO4RTn0k9E5y6r03SD7yG6lXQD3Ez6naoP4ZTp40/EJfgnCl6
g3OeEX+Az1cdIP4Q9d2q78Ufor32ifgDvITqSPEHOPVp+AOcuhqel/3+KtU7
8Vzsmzj3ynPF+S3VU+FncM7r8bxwznnxvPB7rD4WPlJ6pr4cTr36k9IDvLjq
YKmHg9+q+jr0AKcuCD2wf+F8KPXrcOrh0U+sn1UfhX7g16tuDf3AO6teEf3A
qVNFP3DOxaAfeFXVl6IfOHX4XaUf+Gmq70U/cV5cdYPoB95O9U7oh3Ua517R
D5w6f8YTX4/F+V5x6gPj3Kk45ysZT+DdVQ/MeALnvA/jSdRhyZ8ZT+CcL6Ae
Hc77zngCn6N6Zupf4X9o/GScgS9T/ST6dD0wnjAPcq6B+jCfd2LeNE7dmM+n
1I05jzoW49SHOY/vocr+rW297fUM8X2RDO1ZR11veWTXD/VbLn+DyaGOC//0
/lOPBT9JdVnUIbk+qStyTh2Sy6euyDn1T97/gapPck79k+uB+iTnnBunn5wf
v0nzGfwEzeOcc4Nz3u18+T+8m8b5+vJzeHuNb83UD9cP59V5Ls6tc84ZvkTv
C+dj4Q10TpZzlXDeR87jxT3Ten+v1nsE5zwX53/gnAPao3E87mPTOP+M6tfh
4zXOUKcOp159uPwKzji20epzqJc4xep8uIeB895wzn1znhbOeeFs2TfOPWjd
xblT2nP+lPNsUX+i/WB/q2PhvMyvVq/STn/3V6tLYZ1JPTf8T9WftJCf0M+P
pbcSVn9CHTLjGOtS7gnhXD18rOYpzuvCx+h8NOcA4Z00D3JOCV5D8ynnKODM
v6/LvnEOW/P4Bquj4N6SIlaPwf0Yla2OgvsWcqxegnP6jazOgfO/k6yeYdee
VByPc4Zwzhu+bvUJLYjnWx0C6+TdVj/AuYlSlven3ht7sR7mPhbsBb9B6y7s
BW+idRr2gnO+FXvBWR9yzgReUedxqIOHU+e/0fLX3A9TxPLg3ENSxfLXnBPM
sTw19xj0tXw05+g59856bavWjY0tH825bM5Vwlnn97X8L+fIdljelvMpKyw/
SzyH8wyRL9Y4WdLys9ThY1/2BdyTg33h3OPBewI/V+tS7A5/XfsU7ATnvDn+
AEcPnHuEc/7xZ43n8IXS80D5CXyH9lmcz4FzTodzHXDOd3DeAM65g42W35xj
fhV5NPMr+AzzK7j7FXyM+RX7F+5VaGz5ynvMr+Azza/gNc2v4JxXWmn5O865
cC6F/jBfl7T8Hecy8Cv2U9ybhF/BudclvpNi5zTxK7ifx4Rz/wB+Bb9Z8QTG
mcivKS7BuTh4e52zi+9uiHM+i/En8nGKk8T3NcR367zJBstzrbd5BL7D5hF4
3G9j+Sw/5wjnPg38h/0d92k0trwV9zNMsfzUQeWP8Cs458FHWb6Jc8S5llfi
/OlOywdxrm2l5X04D4W/0f/ftZ4saXkfzu/gb9iN+7XwNzjrGfwKPlxxNvwH
zn0F+A98l+J4+A98meJ++An8COe2uI9UnPNERSwPwjqzsuU1uKcox/IX3G+T
a3kK7kVpZPkI7tOYbHmH5XrfObcP5/z+SMsjMD70sXwB54Xb10zPC5zXMtWf
XRb/53wi9kJP3LOEveC/K66LveDcC4G94Jw3Z10B5xzrfs5V2X6H8zy+jytp
+QXO9WTa92Xa32XaP2baJ/5/72fpR6b7AGMfqvh/nB8UXzSu+3ktb307/BB+
u86bxDlB8fILdjZv8vNbMf4EV/6C+Ri+av6X576bzDsPCC+j9nHuT7zNtCvP
v3jYsBiP4AuV74jzfcT5rh/6QI9574dd4Vu4dzSDn6Af9LdWeSj0EOfVTk3l
v+JcpPho5d3inKP4G+JxbpH78ZRHi/Nl7KO5N9XyF0vs3jl4+9ZF/zF47dTo
f9xDZvfcRp7ikms7X3DKgHgu+M9fpfLF2Bd+b8tOhYdc1z/s6+csom6P+xt6
PvbG9opD8+qZxFurPfaFr6m9J+uBRT1DP/CPlL/GvvEdqhXD3+mQMzz0Bn9G
z4t94XfJH9Cb51PQG7yx3QMMv0J1EegB3lr1GDyvc54r9suSQ//jOy36u9g9
6sztvrL4jsdXT+1bdu2AWK/GfSeaL+Bxnl714XUtH9TW7jGLfM3pKyZvKPpg
yIUPPz393nL4gxOeX7j/zXahn6gn1/4XHvkp1UFttrzSTrvHDD6m+5mzLyra
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
A9rn4+TdyT9oX4PcqEux73XCiTP8NyXvnLM=
               "], {{{
                  EdgeForm[], 
                  Directive[
                   Specularity[
                    GrayLevel[1], 3], 
                   RGBColor[0.880722, 0.611041, 0.142051], Lighting -> 
                   "Neutral"], 
                  GraphicsGroup3DBox[
                   TagBox[{
                    Polygon3DBox[CompressedData["
1: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
weMujfQn/+Ne+Gvs5wezNEJ5zs1ou9Jnj2h9ob7N6HNnybqrXvB8k8aT7p4P
V02trxfD1eFb6TOz5Nrbqtx1iuNpuwT/xtvg6ly/apHj1IjWIMpzpN9foE8l
zukRPI5D6HM0faoX2l65ka6/D32uDX5Wg+S/M9c0pDWWp/bVL/Ibl6b2t7MS
/49Z8L7Yvsqdr56uNZW5jiGtoTxMY72H4mLuekpN+fDc+WEr2kO4n4OK3K1V
sPa7Ga6N/aQiN1GOshR7Dc4ZEPx/VZusQ5/6RQ4yKPj33gmfiL1RkbMMDq6F
joYPxL5fka8pd1mG/Rj5YPpMlzbD3jF4bgyA2wWPe9/cOY3W3UH0r8p1KmfO
MS+jz4PYb4XbwPeXrP93KXRyR/j86JqLcq768OmZY07l4JxXWmhZobuk6eZk
rjspf3yhGAvVfp/IXEtRjevxzPUQ5bBzC7+hWubSzLUg5YmL4FNKzpHnZa4L
KZ/V/NY83z312p0B7wpPzVx7US6svOQJeBfFoNx1q/K0E1L7+WHMgbdy18WO
o30ycw1HufOszPU05bnPZq6bKf9dl7mWIk3yQRFnpUk+LXyX4snKQpdq7r2X
uSYjPfNmoY3lG1/LrKWlqQ8tNHkJ/iRzzUQ67fPM9RlpqpmZa3qqf6/IrM+l
0zcUcVYxZ1Pmmow055bMdRvp0m1FrJcO3Ji5ViMNpjX3CPxvYt/2FFwmtV/T
nC+r2JK6xng5fbqlrn1dCt+Yup7TEe6cumbYNrHvkA/5JrFPGgN/BZ+Vue59
SGotfA/8JfZr9fvhNolr3KrbXJS4Nv46fAK2aZntquuoBl4Vbkmf/4KcJHNA
cTzzPah++Xzm+1Stbkbm61ejz+rMNTFpTvnFsfC3idfTJPiXxGtSa7Mi59aG
n4X3Th0TnoPLpV6vs+H9Uq9R5RcHpo4Dz8h/Kg7zPw7lemVy+/W7sX+e2A/K
X5VP7TOUf/2VOI6Nh3ck9rXK6dYm9h/PwxVSx5Mh8IbEvnkUvC1xDjES3po4
PoyGt8OrMudK8mOq/WyEm2mNBGtF6eXWwWtEOU6H4DmgHKdt8JpSTtS+iCnK
a44J/r/Khf/MnBtKo44K9v+qP/yduV6nfOHK4GeifKonx4sl5z4tgue85st1
RYyQL78q+Jkrx7km+Jkrr+la+Ez57O7Bz1/5Uefg56M86LgiNimH2pm51qf8
bpfg2p1ymarBz1aaqnxwHU+5T9lCX0nPliv0knR7meD6pHKZ/Tj6lpw37RVc
J1SulBT6TTr9yOCxUP71Y+b8Vxr498y5rbRNFlxXVA71c+bcWTnUr5lzXmny
7zLXWpUT7VboQOn9HZnzbmn7rwo/rP24+kXsVoxuWORH0h3nROdIqlOpXrUO
++nYHwleX1pnjaNr5ap9nRK9VlXvGhscx1VHujtY26h2dGZ0DV31LtVvtmA/
n2u2iK6hq55zbnQOplpZ8+i6vGqPjwfX8FXLVw1vE3yu4kJwLV01ddXYNsBn
YX+18Hvyk6cEr1nVAB8Ijn3K5e8Ljq33wY2D15FqhnWC151qOGdy3FdyLatm
8BpRTn1isC9SvfHkYH+lOuR5wb5ROXuz6JqWaltNg32FcvYxmevPqqN+mTlf
UN4wKnONWjWur+F2Jee/U7m/SqzLf3RfmevbqomNzbyXp7rr6Mw1cNXBvuT/
npZZJ++SOUb/wfmXRPtN7TGNDM5zv6VdED3m8hNjonWP8s3O0fVb7Z8OL8b9
G62z6FxL2n5ocB79Ne2SaA0t7b0sWjtKB9aK9olf6plFaynppXnR805+a0X0
vUqj3hBdf9ZeZF24YebrT+P4iP/1q9Zr4YukJaYH76VqbrwWrXGlhx+KXovK
padG58nKwR8N3p+VH5sencdKj10aHau0VzgtOudUfrG5qL1IQw6OrkUoj2tQ
1E6/0/WK2ot06cZCZ2q/8unonEq556TgvaGfaSdH+wzVFCZFr1Hl51OC93a1
viZG11JUZ+jP58OUT/D5yeicTXncjOh8THlZV/pE+gylvSt4P0v31jN6z1F7
KPWKuaFxvz261qT8tFf0noL2Ga+K3iPQ3mK/6HxG2nVcsQZ/oO0XvEemMb0t
Wkcop+0bvdcoXXRZtA7QXm2f6L1S7YfeGp0HKmfsGxzfpR2uiNYH2l/uGr1f
oD36W6K1l/T/NdH7FNrr7xi9f6E95UHRNR/lxQOia0HKlwdG13+UR/eOrvdp
v3VG8L68/MasooamvPUx5VSJ9/fPi97/03zrEf2egPZMu0fvceg9hHuC9we/
p20XrWm09z0nug4iDTwweE9HGmFC8F7hj7T9o2tZqlHcX/ixn+RPovcdtNb6
B+85Kv7Pjd7jUC33juganWoR0znKc8+B9uboPWztQd8ZXUNRTena6HcMpGdG
RtfWVAMZFb23pLpBh+g9de2b3xS956196ncKza969fjoOp5y4dHRdSLVdu6K
ru+oJjOFI+d+JnPvQ6LrnKpv3BtdD1T9qn30fr/26y+I3jfV/U+IrqepPnxl
9PsHesdgbVGrVG4yPLpmqPpMp+h3QfTuxNXR+YH03tDouqVqMp9Fv3ei/Oj9
6DqtcpYm0fsveuYjon2wakBromu2yn3ejq7xKi+7P7puolrfluh3TZQ3tY5+
p0H7+22j33vQuwTjomO76oFjo+vGqvXdHV1TU62sKXxeZp/QKnr/Xu8kXBT9
Do3epTkjel9Gc6ZbdD4kjfpjca7i1+eFn1Sud3r0npTW6bDo3EI1rPXRtV/l
uY2i93T03s7l0e9w6B2MltHvoOh9kouj30VQ7nNh9Psoer+lYfTeluZ8l+jc
Qvr5f2M3k10=
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
                    "]], 
                    
                    Polygon3DBox[{{1284, 885, 874, 875, 901, 1446}, {1179, 
                    1178, 1438, 883, 889, 1440}}]}, 
                    Annotation[#, "Charting`Private`Tag$6682906#1"]& ]]}, {}, {
                  EdgeForm[], 
                  Opacity[0.25], 
                  GraphicsGroup3DBox[{
                    Polygon3DBox[CompressedData["
1:eJwtkskuRFEQhuvc7r4hMfYaYYmEJxAWNjaChSXatMRCRCJiIzyALTsi7MQr
8ACGB6BNbZ6a7jbFV6la/Peve6rq1PCfptHpgalIRLpBAqzwqYX7OaxIiSzz
/xWLtASRI85b4c+kSA32Kr5v7GPsXbgAGrD34CRxh9gR3EvcKXYXd5bwXWMX
4RnOG/HPw8+cvYNq9YEXcALewBO4ACPEVcF9wfx5j7nwmKzn3YjV6KHvWXIS
zDGInaF+Gnsd1ONfw/cnNm8ld/76XAF/Cszh34YnYd3RMDwBzrDH4Vf4FuTA
h9j/I/jingOfUWfS2e7Bp/dJKRlL2D47I8vT/HP3a9yd5xXAFWj2/bf47EWf
U3NL3seQ99YX2T1vXquMGRbxFWLTLuv6Ssq0y3PWgb+a4AV4J2m1tMeC96G6
/MSm2QZ5m6Au2D4ffO+683L+l/RdxJanvV+K7TzD+T5ciq3ebdLewyh2MTZ9
NTbj7yrnPZR8znP/z/n+64Pp2BBMP9Xx2zV4dV22qJcO9gZ05qzrmPeetfcp
17c9WIze0xZsh3f+rtoie8/a673vRHv9B/REgFE=
                    "], VertexColors -> None], 
                    Polygon3DBox[CompressedData["
1:eJwtkrsuRFEUhvex95kgIhOdwiQqGuMJhFYjMwql+6URFFNIFCQjPIDWZBIh
QidegRcQDyDu107MjcT3Z+3iP2et/a/bXv/un1+fXGtzzuVBAN98BhPnBoBL
nStCznjnFLPH/w1+hP8WOIKvZ5ybx76GrwSD7BJn43AFEjuoNQSmOauQ0wdf
xP/NWL8b/FHimvjDnDfxO/mvEX/gLX4Ofgp+AX8R3HF2FmwmzabYU2onIKv7
kN8i/jK1XqpxGPku/F7wR34VPxd5zdYgJ0/BK/wyfAHuA/sRzMb5N/hvesut
E/MM9wKawXpue+uhXppJs+k+KfY5MV/EvoJWsDvvetu5dtGT2l13ODvGvgjW
+wnUgu1M98nhV73tQ7u7ifX28R+w78FPMH0mvM3YCKandpONfC1jukif9tS0
Vu47WI56S0/tRLuR5m2JnYnzqWldBiepabSC3e1MuzHyPp311xyl+FZCYjl6
L7eR06y6u7ToS2wH0lhaa0bNKu21uzewFN/YqrcaqiW957ztTLsTcvG9ifsH
/OZlIA==
                    "], VertexColors -> None], 
                    
                    Polygon3DBox[{{1298, 284, 283, 871, 1622}, {1283, 274, 
                    293, 876, 1609}, {915, 14, 864, 865, 1436}, {927, 257, 
                    288, 880, 1788}, {1447, 886, 251, 17, 902}, {1272, 196, 
                    558, 866, 1273}, {1786, 575, 209, 297, 1292}, {1783, 893, 
                    299, 209, 1193}, {1155, 259, 271, 829, 1785}, {1787, 302, 
                    17, 254, 1289}}, VertexColors -> None]}]}, {}, {}}, {{
                  GrayLevel[0], 
                  
                  Line3DBox[{246, 1, 242, 227, 903, 16, 1277, 281, 268, 895, 
                   1289, 254, 269, 251, 886, 1285, 266, 250, 303, 2, 870, 234,
                    246}, VertexColors -> None], 
                  Line3DBox[CompressedData["
1:eJwl0l1L02EYx/F7tbnaLIpqS09kJoJRQUEU2ISaT3MzwSDBzjor6IkOahFR
gdQr0JMOstFeQZ4ZHXgq6Elpjx4rvoFgY35uPPjy/V03//2v67r/K9x9NP0w
EUJYwEXhIJ/kU6inQnjlICfncRqLzl4465bbnu3BJ3UdF+RvXOQ1XkdV3uU7
3OQW7stdyRBqPMBn8V4eTe7PcZtn0JCf8hK3uaBnL956R9YcZ+Q+vFSn1f3y
IXz3/PUDIdzAD7nEGzzMI9iMvfgnj/E4fsll/s0TXMEfucp/eZJv4p88xVv8
QN9z+p1AQ/85dYd8DCl8dFZzdlxO44MdVvzuNX/hJ/wYn+VbPB9n5BLeyf38
nPOcwz35v/fN8g5voyKv8jX+yss4H7+LfkfxRp0xR5Bb9CzOqM6qm3EXPhL3
4864O5eRjXfDmTgTl3A43mu8Yx7iYtxLHuQOvspX4u7yZTZyuJTY/1/tAdki
PJE=
                   "], VertexColors -> None], 
                  
                  Line3DBox[{336, 14, 871, 283, 284, 1444, 896, 285, 286, 
                   1439, 888, 288, 257, 927, 30, 1271, 229, 247, 15, 243, 235,
                    336}, VertexColors -> None], 
                  
                  Line3DBox[{1155, 196, 1274, 231, 248, 211, 244, 236, 576, 
                   212, 876, 293, 274, 1445, 899, 260, 258, 1442, 891, 271, 
                   259, 1155}, VertexColors -> None], 
                  
                  Line3DBox[{592, 224, 869, 233, 249, 225, 245, 237, 1194, 
                   210, 1280, 295, 296, 900, 1292, 297, 298, 299, 893, 1288, 
                   301, 265, 592}, VertexColors -> None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{931, 1466, 1202, 929, 1467, 1203, 933, 1468, 632,
                    935, 1469, 1204, 937, 1470, 1314, 1640, 939, 1471, 1205, 
                   941, 1472, 638, 943, 1473, 1206, 945, 1474, 641, 947, 1475,
                    1207, 949, 1476, 644, 951, 1477, 1208, 953, 1478, 1321, 
                   1651, 955, 1479, 1209, 957}, VertexColors -> None], 
                  
                  Line3DBox[{956, 1652, 1322, 954, 1650, 1649, 1320, 952, 
                   1648, 1319, 950, 1647, 1646, 1318, 948, 1645, 1317, 946, 
                   1644, 640, 944, 1643, 1316, 942, 1642, 637, 940, 1641, 
                   1315, 938, 1639, 1638, 1313, 936, 1637, 1312, 934, 1636, 
                   631, 932, 1635, 1311, 928, 1634, 1310, 930}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{959, 1323, 1653, 958, 1480, 1210, 960, 1481, 
                   1324, 1654, 961, 653, 962, 1482, 1325, 1655, 963, 656, 964,
                    1483, 1326, 1656, 965, 659, 966, 1484, 1327, 1657, 967, 
                   662, 968, 1485, 1328, 1658, 969, 665, 970, 1486, 1329, 
                   1659, 971, 668, 972}, VertexColors -> None], 
                  
                  Line3DBox[{976, 1487, 1211, 974, 1488, 1212, 978, 1490, 
                   1491, 1213, 980, 1492, 1214, 982, 1493, 675, 984, 1494, 
                   1215, 986, 1496, 1497, 1216, 988, 1498, 1217, 990, 1500, 
                   1501, 1218, 992, 1502, 1219, 994, 1503, 684, 996, 1504, 
                   1220, 998, 1505, 687, 1000, 1506, 1221, 1002}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1001, 1673, 1340, 999, 1672, 686, 997, 1671, 
                   1339, 995, 1670, 683, 993, 1669, 1338, 991, 1668, 1337, 
                   1499, 989, 1667, 1336, 987, 1666, 1335, 1495, 985, 1665, 
                   1334, 983, 1664, 674, 981, 1663, 1333, 979, 1662, 1332, 
                   1489, 977, 1661, 1331, 973, 1660, 1330, 975}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1004, 1341, 1674, 1003, 1507, 1222, 1005, 1508, 
                   1342, 1675, 1006, 693, 1007, 1509, 1343, 1676, 1008, 696, 
                   1009, 1510, 1344, 1677, 1010, 1511, 1223, 1011, 1512, 1345,
                    1678, 1012, 702, 1013, 1513, 1346, 1679, 1014, 705, 1015, 
                   1514, 1347, 1680, 1016, 708, 1017}, VertexColors -> None], 
                  
                  Line3DBox[{1021, 1515, 1224, 1019, 1516, 1225, 1023, 1518, 
                   712, 1025, 1519, 1226, 1027, 1520, 1353, 1687, 1029, 1521, 
                   1227, 1031, 1522, 718, 1033, 1523, 1228, 1035, 1524, 721, 
                   1037, 1525, 1229, 1039, 1526, 724, 1041, 1527, 1230, 1043, 
                   1528, 1359, 1697, 1045, 1529, 1231, 1047}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1046, 1698, 1360, 1044, 1696, 1695, 1358, 1042, 
                   1694, 1357, 1040, 1693, 723, 1038, 1692, 1356, 1036, 1691, 
                   720, 1034, 1690, 1355, 1032, 1689, 717, 1030, 1688, 1354, 
                   1028, 1686, 1685, 1352, 1026, 1684, 1351, 1024, 1683, 1350,
                    1517, 1022, 1682, 1349, 1018, 1681, 1348, 1020}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1049, 1361, 1699, 1048, 1530, 1232, 1050, 1531, 
                   1362, 1700, 1051, 1363, 1701, 1052, 1532, 1364, 1702, 1053,
                    1365, 1703, 1054, 1533, 1366, 1704, 1055, 739, 1056, 1534,
                    1367, 1705, 1057, 1368, 1706, 1058, 1535, 1369, 1707, 
                   1059, 1370, 1708, 1060, 1536, 1371, 1709, 1061, 1372, 1710,
                    1062}, VertexColors -> None], 
                  
                  Line3DBox[{1066, 1537, 1233, 1064, 1538, 1234, 1068, 1540, 
                   1541, 1235, 1070, 1542, 1236, 1072, 1543, 1378, 1717, 1074,
                    1544, 1237, 1076, 1545, 1546, 1238, 1078, 1547, 1239, 
                   1080, 1548, 761, 1082, 1549, 1240, 1084, 1550, 764, 1086, 
                   1551, 1241, 1088, 1552, 1384, 1727, 1090, 1553, 1242, 
                   1092}, VertexColors -> None], 
                  
                  Line3DBox[{1091, 1728, 1385, 1089, 1726, 1725, 1383, 1087, 
                   1724, 1382, 1085, 1723, 763, 1083, 1722, 1381, 1081, 1721, 
                   760, 1079, 1720, 1380, 1077, 1719, 757, 1075, 1718, 1379, 
                   1073, 1716, 1715, 1377, 1071, 1714, 1376, 1069, 1713, 1375,
                    1539, 1067, 1712, 1374, 1063, 1711, 1373, 1065}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1094, 1386, 1729, 1093, 1554, 1243, 1095, 1555, 
                   1387, 1730, 1096, 1388, 1731, 1097, 1556, 1389, 1732, 1098,
                    1390, 1733, 1099, 1557, 1391, 1734, 1100, 1558, 1244, 
                   1101, 1559, 1392, 1735, 1102, 782, 1103, 1560, 1393, 1736, 
                   1104, 1394, 1737, 1105, 1561, 1395, 1738, 1106, 1396, 1739,
                    1107}, VertexColors -> None], 
                  
                  Line3DBox[{1111, 1562, 1245, 1109, 1563, 1246, 1113, 1565, 
                   1566, 1247, 1115, 1567, 1248, 1117, 1568, 1402, 1746, 1119,
                    1569, 1249, 1121, 1571, 1572, 1250, 1123, 1573, 1251, 
                   1125, 1575, 801, 1127, 1576, 1252, 1129, 1577, 804, 1131, 
                   1578, 1253, 1133, 1579, 1410, 1756, 1135, 1580, 1254, 
                   1137}, VertexColors -> None], 
                  
                  Line3DBox[{1136, 1757, 1411, 1134, 1755, 1754, 1409, 1132, 
                   1753, 1408, 1130, 1752, 803, 1128, 1751, 1407, 1126, 1750, 
                   1406, 1574, 1124, 1749, 1405, 1122, 1748, 1404, 1570, 1120,
                    1747, 1403, 1118, 1745, 1744, 1401, 1116, 1743, 1400, 
                   1114, 1742, 1399, 1564, 1112, 1741, 1398, 1108, 1740, 1397,
                    1110}, VertexColors -> None], 
                  
                  Line3DBox[{1139, 1412, 1758, 1138, 1581, 1255, 1140, 1582, 
                   1413, 1759, 1141, 813, 1142, 1583, 1414, 1760, 1143, 816, 
                   1144, 1584, 1415, 1761, 1145, 1585, 1256, 1146, 1586, 1416,
                    1762, 1147, 822, 1148, 1587, 1417, 1763, 1149, 825, 1150, 
                   1588, 1418, 1764, 1151, 1419, 1765, 1152}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1180, 1791, 1438, 1178, 1790, 881, 1176, 1777, 
                   1430, 1174, 1776, 1429, 1604, 1172, 1775, 1428, 1170, 1774,
                    1427, 1600, 1168, 1773, 1426, 1166, 1772, 1425, 1596, 
                   1164, 1771, 1424, 1162, 1770, 1769, 1423, 1160, 1768, 1422,
                    1158, 1767, 1421, 1590, 1156, 1766, 1420, 1153, 1789, 
                   1282, 1279}, VertexColors -> None], 
                  
                  Line3DBox[{1286, 1458, 914, 1200, 1457, 913, 1621, 1297, 
                   1456, 912, 1199, 1455, 911, 1620, 1296, 1454, 910, 1198, 
                   1453, 909, 1619, 1295, 1452, 908, 1197, 1451, 907, 1618, 
                   1294, 1450, 906, 1196, 1449, 905, 1617, 1293, 1448, 904, 
                   1195, 1443}, VertexColors -> None], 
                  
                  Line3DBox[{1287, 1182, 1610, 1431, 1778, 1183, 849, 1184, 
                   1611, 1432, 1779, 1185, 852, 1186, 1612, 1433, 1780, 1187, 
                   1613, 1269, 1188, 1614, 1434, 1781, 1189, 858, 1190, 1615, 
                   1435, 1782, 1191, 861, 1192, 1616, 1284, 1446}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1290, 1278, 1633, 1309, 1465, 926, 1632, 1308, 
                   925, 1631, 1307, 1464, 924, 1630, 1306, 923, 1629, 1305, 
                   1463, 922, 1628, 1304, 921, 1627, 1303, 1462, 920, 1626, 
                   1302, 919, 1625, 1301, 1461, 918, 1624, 1300, 917, 1623, 
                   1299, 1460, 916, 611, 1276, 1441}, VertexColors -> None], 
                  
                  Line3DBox[{1291, 1154, 1589, 1258, 1157, 1591, 1592, 1259, 
                   1159, 1593, 1260, 1161, 1594, 835, 1163, 1595, 1261, 1165, 
                   1597, 1598, 1262, 1167, 1599, 1263, 1169, 1601, 1602, 1264,
                    1171, 1603, 1265, 1173, 1605, 1606, 1266, 1175, 1607, 
                   1267, 1177, 1608, 882, 1179, 1440}, VertexColors -> 
                   None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{305, 594, 1448, 307, 612, 1460, 340, 631, 1468, 
                   360, 651, 1481, 380, 671, 1489, 1490, 400, 691, 1508, 420, 
                   711, 1517, 1518, 440, 731, 1531, 460, 751, 1539, 1540, 480,
                    771, 1555, 500, 791, 1564, 1565, 520, 811, 1582, 540, 831,
                    1590, 1591, 560, 847, 1610, 577}, VertexColors -> None], 
                  
                  Line3DBox[{309, 596, 1449, 310, 1624, 614, 342, 1637, 633, 
                   1469, 362, 653, 382, 1663, 673, 1492, 402, 693, 422, 1684, 
                   713, 1519, 442, 1701, 733, 462, 1714, 753, 1542, 482, 1731,
                    773, 502, 1743, 793, 1567, 522, 813, 542, 1768, 833, 1593,
                    562, 849, 579}, VertexColors -> None], 
                  
                  Line3DBox[{311, 597, 1450, 313, 615, 1461, 343, 1638, 634, 
                   1470, 363, 654, 1482, 383, 674, 1493, 403, 694, 1509, 423, 
                   1685, 714, 1520, 443, 734, 1532, 463, 1715, 754, 1543, 483,
                    774, 1556, 503, 1744, 794, 1568, 523, 814, 1583, 543, 
                   1769, 834, 1594, 563, 850, 1611, 580}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{315, 599, 1451, 316, 1626, 617, 345, 1641, 636, 
                   1471, 365, 656, 385, 1665, 676, 1494, 405, 696, 425, 1688, 
                   716, 1521, 445, 1703, 736, 465, 1718, 756, 1544, 485, 1733,
                    776, 505, 1747, 796, 1569, 525, 816, 545, 1771, 836, 1595,
                    565, 852, 582}, VertexColors -> None], 
                  
                  Line3DBox[{317, 600, 1452, 319, 618, 1462, 346, 637, 1472, 
                   366, 657, 1483, 386, 677, 1495, 1496, 406, 697, 1510, 426, 
                   717, 1522, 446, 737, 1533, 466, 757, 1545, 486, 777, 1557, 
                   506, 797, 1570, 1571, 526, 817, 1584, 546, 837, 1596, 1597,
                    566, 853, 1612, 583}, VertexColors -> None], 
                  
                  Line3DBox[{321, 602, 1453, 322, 1628, 620, 348, 1643, 639, 
                   1473, 368, 659, 388, 1667, 679, 1498, 408, 699, 1511, 428, 
                   1690, 719, 1523, 448, 739, 468, 1720, 759, 1547, 488, 779, 
                   1558, 508, 1749, 799, 1573, 528, 819, 1585, 548, 1773, 839,
                    1599, 568, 855, 1613, 585}, VertexColors -> None], 
                  
                  Line3DBox[{323, 603, 1454, 325, 621, 1463, 349, 640, 1474, 
                   369, 660, 1484, 389, 680, 1499, 1500, 409, 700, 1512, 429, 
                   720, 1524, 449, 740, 1534, 469, 760, 1548, 489, 780, 1559, 
                   509, 800, 1574, 1575, 529, 820, 1586, 549, 840, 1600, 1601,
                    569, 856, 1614, 586}, VertexColors -> None], 
                  
                  Line3DBox[{327, 605, 1455, 328, 1630, 623, 351, 1645, 642, 
                   1475, 371, 662, 391, 1669, 682, 1502, 411, 702, 431, 1692, 
                   722, 1525, 451, 1706, 742, 471, 1722, 762, 1549, 491, 782, 
                   511, 1751, 802, 1576, 531, 822, 551, 1775, 842, 1603, 571, 
                   858, 588}, VertexColors -> None], 
                  
                  Line3DBox[{329, 606, 1456, 331, 624, 1464, 352, 1646, 643, 
                   1476, 372, 663, 1485, 392, 683, 1503, 412, 703, 1513, 432, 
                   723, 1526, 452, 743, 1535, 472, 763, 1550, 492, 783, 1560, 
                   512, 803, 1577, 532, 823, 1587, 552, 843, 1604, 1605, 572, 
                   859, 1615, 589}, VertexColors -> None], 
                  
                  Line3DBox[{333, 608, 1457, 334, 1632, 626, 354, 1648, 645, 
                   1477, 374, 665, 394, 1671, 685, 1504, 414, 705, 434, 1694, 
                   725, 1527, 454, 1708, 745, 474, 1724, 765, 1551, 494, 1737,
                    785, 514, 1753, 805, 1578, 534, 825, 554, 1777, 845, 1607,
                    574, 861, 591}, VertexColors -> None], 
                  
                  Line3DBox[{335, 879, 1458, 872, 627, 1465, 355, 1649, 646, 
                   1478, 375, 666, 1486, 395, 686, 1505, 415, 706, 1514, 435, 
                   1695, 726, 1528, 455, 746, 1536, 475, 1725, 766, 1552, 495,
                    786, 1561, 515, 1754, 806, 1579, 535, 826, 1588, 555, 881,
                    1608, 874, 885, 1616, 877}, VertexColors -> None], 
                  
                  Line3DBox[{578, 848, 1778, 561, 1592, 832, 1767, 541, 812, 
                   1759, 521, 1566, 792, 1742, 501, 772, 1730, 481, 1541, 752,
                    1713, 461, 732, 1700, 441, 712, 1683, 421, 692, 1675, 401,
                    1491, 672, 1662, 381, 652, 1654, 361, 632, 1636, 341, 613,
                    1623, 308, 595, 1617, 306}, VertexColors -> None], 
                  
                  Line3DBox[{581, 851, 1779, 564, 835, 1770, 544, 815, 1760, 
                   524, 795, 1746, 1745, 504, 775, 1732, 484, 755, 1717, 1716,
                    464, 735, 1702, 444, 715, 1687, 1686, 424, 695, 1676, 404,
                    675, 1664, 384, 655, 1655, 364, 635, 1640, 1639, 344, 616,
                    1625, 314, 598, 1618, 312}, VertexColors -> None], 
                  
                  Line3DBox[{584, 854, 1780, 567, 1598, 838, 1772, 547, 818, 
                   1761, 527, 1572, 798, 1748, 507, 778, 1734, 487, 1546, 758,
                    1719, 467, 738, 1704, 447, 718, 1689, 427, 698, 1677, 407,
                    1497, 678, 1666, 387, 658, 1656, 367, 638, 1642, 347, 619,
                    1627, 320, 601, 1619, 318}, VertexColors -> None], 
                  
                  Line3DBox[{587, 857, 1781, 570, 1602, 841, 1774, 550, 821, 
                   1762, 530, 801, 1750, 510, 781, 1735, 490, 761, 1721, 470, 
                   741, 1705, 450, 721, 1691, 430, 701, 1678, 410, 1501, 681, 
                   1668, 390, 661, 1657, 370, 641, 1644, 350, 622, 1629, 326, 
                   604, 1620, 324}, VertexColors -> None], 
                  
                  Line3DBox[{590, 860, 1782, 573, 1606, 844, 1776, 553, 824, 
                   1763, 533, 804, 1752, 513, 784, 1736, 493, 764, 1723, 473, 
                   744, 1707, 453, 724, 1693, 433, 704, 1679, 413, 684, 1670, 
                   393, 664, 1658, 373, 644, 1647, 353, 625, 1631, 332, 607, 
                   1621, 330}, VertexColors -> None], 
                  
                  Line3DBox[{889, 883, 1791, 557, 828, 1765, 537, 1580, 808, 
                   1757, 517, 788, 1739, 497, 1553, 768, 1728, 477, 748, 1710,
                    457, 1529, 728, 1698, 437, 708, 417, 1506, 688, 1673, 397,
                    668, 377, 1479, 648, 1652, 357, 897}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{890, 610, 338, 1634, 629, 1466, 358, 1653, 649, 
                   378, 1660, 669, 1487, 398, 1674, 689, 418, 1681, 709, 1515,
                    438, 1699, 729, 458, 1711, 749, 1537, 478, 1729, 769, 498,
                    1740, 789, 1562, 518, 1758, 809, 538, 1789, 898}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{894, 304, 611, 339, 1635, 630, 1467, 359, 650, 
                   1480, 379, 1661, 670, 1488, 399, 690, 1507, 419, 1682, 710,
                    1516, 439, 730, 1530, 459, 1712, 750, 1538, 479, 770, 
                   1554, 499, 1741, 790, 1563, 519, 810, 1581, 539, 1766, 830,
                    1589, 559, 892}, VertexColors -> None], 
                  
                  Line3DBox[{901, 875, 882, 1790, 556, 827, 1764, 536, 807, 
                   1756, 1755, 516, 787, 1738, 496, 767, 1727, 1726, 476, 747,
                    1709, 456, 727, 1697, 1696, 436, 707, 1680, 416, 687, 
                   1672, 396, 667, 1659, 376, 647, 1651, 1650, 356, 628, 1633,
                    873, 887}, VertexColors -> None]}, {}, {}}}, 
               VertexColors -> CompressedData["
1:eJztXXlYzev2J3OXkDkkGSJzxohVyXxMKVE4jnnOMXYyJXPmyJRZySzDiSgq
tXcUiigNmvZurm0IyaFfz3PXt/2cdX/rfvfXde9zf+dXf67n+7x7vesd1vT5
vLWc5mg9U6tChQolVStUqFRB+HsD+9xk8cmvVBBSDFs+L8kBMXnK3aWrPHeo
IOpDrVYRv2eXyfv0K3hwbVUuDG9v93OD+JQyed6W10HdryqgJKPWzjCzR1A8
cd41Z+9sCF3+sMT6j1iYGut50mh2KCyPsZrkt14JyY03+te3fgR7V5trNdEP
gUKfnTnLDBTwzWjdp116D+D0jUjD+g7B7Pfc+Jw+Yvpz85VqN6nyAdVW6iz1
yIeYMU7BCUpFmfxCROiSPW2yYbbp0g6dTsWXyfvnzGgft0UB1rImgYtHPYRI
f5+Uo165kDzLfqaqRxKMN99Q03Z9GLj7PXWr9yILDtc+U98+4QXMGT94lV7h
A3ihndS4nzITOh6rM7rdnOewsLrJyWuOD9jvufE5fcT05+b7o/YnN77LkoiA
7Ds54Bh6qNhpQXKZfK3+Q4tlHTLh5h+7QyK9YsrkNRuannebpYCNPUZskG0M
h8JBNwc2s82HjTHj3xY+TYFtQfZVmiyWQbGvT/0V3rnwqc3yX4x6J4H2lykf
Ikvt4xNTVHl/g1x443Vre8a9BEiePnXQFJMw9ntufE4fMf25+XL2SUZ7PtXw
vHPry+nj3/1L18k7lVDZtEb1emufQuDvxmOjvqog4PaF2Z+HKWD1rhbT0jPl
sPTb7vgivwIwPJ7a79TxNCiyM9y+tLscLj2I/Jz0Lh/CjI62ND2eCivnuS3u
KpfB/CqpV9Zdy4eztvGNg4emwocwO129MzL2e258Th9Of7H5cvbR9P4UO190
P3D6f3LeZnczWQUr/baZexoqYL/NT3pWsXIYnN7X2+SRCgbvGem+uqoCvKvG
H5sRIYdzBQP6jghUQbvBHycd+5AOV73C86xC5dDimEfDb7dV0CJuw8mvqnS4
3rlxNWUw/z03PqePmP25/c/ZR1N/xN1v3Hnk9g83X0Gfn6YWB9leU0B4k56J
V4ep17fa0wEeDpWV8KvPkD2LzCPL5EeP23arbqCE8euLVlTKihT9no7P6cPp
z82Xs49gzzAN/TvnX7j7kDu/3H4Ts88EV+9HXruUkBZoEP1sk/r86t+TdwsM
UIJvWg1951FRot/T8Tl9OP25+XL2WYH2VKI93UXiJc6/c/6Iuz+58y62Pzl7
FjYfuOXzGyU4PEgfcDovSvR7Oj6nD6c/N1/OPoI9K7bTLP4s388/dj+X38//
mfu5PN74z8Qbgrw8fv7f9Rebr9T4uTwf/Of6/6h8sLy+8c/1/1H1Dalyqfk7
lx9RfyEWf9J4Scy/S/VHnP4/an+Wy8vl5fJyebm8XF4u/9flBkVaszwWqcBw
Uazz0AVqv/wa/fVj4q/HrLfvu8w6H0oSFu56bqGOl4Q46hmJo5qn55dUMsiF
yrNk2iNGq+OBxSVZIVt6Z4NL0ohg91h1PObqMtr+nGcmDJevMttc9KJMno3x
RhbGG4Zenk36v8uF5QOcWuaXJIFF2+v3u1xSx4H9MA4ciHFglbiM9/Y98mFx
f5+OLb1T4OOC4ieVpshgRacbYGqVBSO/yvT3TI0BR512wYZeD6Cmzu+LQm/m
wKJC+YnA4HhweLeoW94fobAM46VEUl966PdoZs8DChji1KHPLNcwOPbxWEiD
o8FlcexBjGNnYRxb32pDdqeeWVC80CKjj2kMBK9M3xfj+QAe4TgjyTjC93/g
9yH4vRPqU4D67EN9VuG8HHBeS3Be+1GfoySuroPzXY7znYTzNUY770A7D0Y7
a6M9ndCeRWhPwf5vcL0aZ/45PnTCdT9E1t0c12s6idu34n6wJ/thHO7DGol/
3oetcb/pkP2Whvv55b8Yfy4bGGHSoX8BRG8pSXVxySiTh/Ry/21rtXzQ+fWM
/3S39DL5Oszj5pE87tnuZQ0GO2TBof39X/iaxZXJ7WQDZ7SFDEhJsLC0eRVd
JtfG/NEZ88d2v8dOzrEqgOvzWoxyqZEGzgGXjVcXyuDk3Co9+oblQYX6Tptj
6qXAlPaTbC8YqPPcjyRvbazfXdttUC4ccz61ZqxZIlge0HaJ+0ktP0HkX3Cc
YjLOafzdSvi7P+PvdkA9/VDP1ainMC8dnNdOkhfbox1yiB1eot28id1c0c7L
iZ2FddEl67IC1/ElWcf4N0bpb/KyweBgt2qxfySWyQdlLp6WuDoL2rd5Nnna
afXvCvn7DZK/j4mF1BmNMsBs9taBH6aq9c+PCkupaKiEzb3MvD+/j4S7WIe5
g3WYVViHceu3yC63lQq+nW39oV6ndHhaP/LZIUc5dDX32n1keQFUjGzRvf2w
NFh5Q9Vxcm2+XvTSKl4+TJ4PVd/q/TpgZioYWNfb0vIqL79MxlmB43TD362E
v+uEv7sD9azg83c9o1BPob4UiPNaQ+pLBWiH3WgHQT4W7WZO7OaCdvYndh6K
69KFrIuwjq3IOj7W73Pt434FpKwKsks7pr5n4ooq2NxbrYBp5sYlvf/G11EF
+X7/0dOn2iggY0t8kKxhODh/Kvwqe68Cr2nDq8SbKeBVm1eFE9L4embH+RdS
JkerYPw7v5aJtRXwYbmtfOJTOQTs3bteGaYCM8OEF4kVFHBuT/vblR/yddSR
t50MF94p9d/WJduS3qbDpItfz10N4eXcONzvcnpy81qFdvBGO8SjHTi7idk5
FtdlJlkXuo7dVP3bmhXnwPqGxgUzVybA1SXbswa1CoP4/hXt5D3yYOAzg935
l19DYIOIm7lRfL2uMGjwucoWBZBvf+Px7MppEOPsNsX2nQxmfggP99NVQXyB
fSWPhunw2kzbrMksOQzBOvYQpk9R4Vp73V4bFFBcyd9hmola/5QudSdrPVbA
5ffKEKu34v2LoCtFPk8aKmFquq6xka+4nBuH+90S37/r+Qn1FOrzg8i8pqMd
YtEOiWiHd2i3XLTbM7Tbe7SzK9p5K9o5DtcFcF0CcF264DquwXW8guvYY/6p
qGH+mdDbX8sVPjyDiFoqa0e70jhNe+H0HmHZMGPBgM7DRsfB8bQzoy46hbJ+
qvmcIK1ZnfOh88cxY+2OpcC5I23f+dvLwM5oaO3L2wtgb+KMnlVmpUHymsLD
O5rK4QKel/Z4XnxJv2/ufN8BW28pwPpNtde9HNX2fKL9yx9LTUrjsit9v+y2
e1wmn4h9vQzS1zO5UPfOz5eVIPPrtaOwRZSonOsPcr8r6DkC9RTuASOc1xWc
ly3aYTfa4TXaQQ/tZox280G7fUY7v0c7V0c7V8d1mYLrchTXxQTXsSuu4yNc
x5TsRjfPnMmA5arhN0xK52mcdyfC6F4INBuVETDhQxY0/fCuVmCXl7A/+kDH
3CqhcA7r8++xPp+C9fmXJ/ZFJDzLg8Mx8UY+bVJANbrKk67tZDBu55Lo81MK
IKrDHE/jDmmQknVQ54aWHAywb2WAfasbpG++87xJUVG4AhbvX1njeZx6fZd8
i9psZaOEa5aXbo9r/aRMzvVz7cY5NtiTrAQnpzfdc26Jy4VxrpBxfsXfvUh+
dzvqOQ/11Md5Ncd5XcN5jUE7RKIdXqMdnqPdPNBu+Wi3s2jnPLTza7SzHq5L
fVyXfbguibiOC3Ad2+E6lp/fv/b5Lfe/f23/K+hZHj//NeNnQV6e//6189/y
+tVfu34ltc4vtW7P1ec1rbdzdXWpdXKuHi61vi1Wx5Zal+bqz1LrzEL/JULD
/gvXT9G0b8L1QTg8rdCnGE76FJEoH4vy4ygX+hRvNexTdEA9d5K+gzAvqf0F
rl/wo9ZlacLvTWrfyYMA3bZ7bkSmqeO9Rw36zTXOhtuuRe9fXf3HdSnAdbE3
ddz1bXA+eDrmVXMJTIG9waeqjZpT6qecUj9rTc2Gm+NmX7swOBZq2q3Lfmyu
xvlkEdyOX5FNlxlNMsGz0alx+uOioU2XHfPbl4RAR63PLUquKUG/zYLJnqMi
oB98yAnqE8Kuy/WQzTeLD2VD4+NGtc4kxELQ+UY1LKaGwgvLeusOJ+dC7/j8
eV2eJsGFaO0tylPqdVHhvHTIujT+3TBNdi4TWho+rQEGL8vkzQZVbRhwIQ+q
eWcs7OyTJmp/d7MBmw4dVoGF5ZHOh16o7e9lpB99IaUAHHZpLY2qk/UP91s0
ud/G6w1O9nySDe5nhjtXOKX2j812527ctScTxlTemJT9Un2uzfAeGIb3QMuU
wylXbQrgxbmF41vop0FII7cW3b7KYPMv1kOUXrnQb+x0/0s9k8B9bWTlNaX+
hbuXTj3y6DbXNgdeNq86Y1r4K6ilffnSkPBQ2HXQIGRUm2yIeJRYYnT5JRRV
spg90yAUDuA4J3CceThOx4ZzHJq8yAXzCJv3/jeSwPjYt/VNjoaB7uXWv3q0
zgebkgmtXfekgG9d/fhRtur7DXBek8j9FnTLx9R8eKkfP2566k2x2n8dndCs
15VL2dAgcN3iwX0T/8HOFEfHyZfjeQki58Wk4YPVD34tzUu8tZocGaWWr0X/
OJf4R6+huTd7DckE/ZKe418VqeMivcajLer2ygA/X++xMYFq/f+G/toF/bVR
13khz7qqoOnbVcbv+6dD6IqkDbdXyMEkrG6H69vy4cigB+P96qdC58/3nxvs
lLHxw+Dsx1HRWvmw6P7Tk5NmpIC169XqFy1lcOE3qKilnQfPknrrNxjwGnRn
Lfo2yj8M/sBxvtA4RHHwkOG1fFhwJGbakKGpcCF9+5WM0zLYFZTwTqtPARwy
CG98qigVNtkf/W1Svnoda+G83Egc0mHdnUqNOighcceyzZ+N1fUEDnfKxXue
uO51ybp3PDvAvZFBPuQ4X220SaaOT/bY979u8CoDCq9btt928bm6roXnazw5
X2tQn+sUR133hfkVcyWsf7gi+NZltf4JM80Xv9VTQlztuydNHkZCAMkjBDzz
ovYp3WcnqGDB0EYbvzRTwKHXnj0UMXJIONPCe66OCqJcsgZ/qJMOqbKJ4/2n
y8vifxnJI7xsvtY83rI0jzvWa0Vd43QoPLhv3bhFcnA5Z5vUeGoBPPdO36jd
KQ3cZq7xXVOJH6d+54YLGnZSwZKFuiF1TNPBYs39XeeWyWH4mj6V05qoIHtM
qHthi3ToeGnTTJ15PE5bDL/dHtf9JVl3wc6+xM5/jNncreZcJRSvl5W0O62u
K+rivV0H7+1J6KeOo59yRz9l7bxuzUAbFXRYs/HusAXp8G2Rv+kwNx6f3w7P
XTM8d2F47jwcN4V45qlgf4XU5c7dS/ez3+SI6a/lUIT5shPJl4Xxs+IgymKr
Av72xXXDmzHqe2xotGNJyGIF1AvPDz4fEi5aDzQcMW/sl4cKMO/4fKXqtdp/
nQq93tN3jgL21ag7WrY3HM6TcSgPyCLStWoXl9K8wOxsnVoGD0X5DivIvIbi
fsgk+6FVv0qns/VU4LPA1Hxky3RwKUzKPzFP/btCnrUS7VwT7/+ReP9fwvvf
u0PAT7ebFIBVixq5VaJToSDit4VnEmVw8+AEy+162eDTrcp0rb0v4c7LaSbL
9EJZv8bV8RytHHWH3suHq35dAlZOTIVn3dqcbndBxp47sTpeuzF2w3ffUUDI
Lb32O9ar1+Xs/O6hel8UYPwlrtOs6uo8ujrW35aT+tuCRSrrIeuUUHeW82V5
O3XddXOOXu1Mq9J7MqeKx1C5+rxwdTxOLqz7Flz3QTgvK5yXF84r2emtSfHu
Ajg8PPat1/w0iH/vtS6vuRyO4/0/G+9/H7z/36Gd15M6nn1G06UNS+OHqflf
KrnJX4Hst9PfmpTGD5cwfquC8Vsgxm9CfHgY48PWGB8eCTKZMsCjNE49YGP2
OjoW+vp+rtdtCl+H5/xd+5ozKw1wK4Dd07JHtJmRBj0r1i4K1hOvw3Pn7o5+
o2XRFkoIrZqq73lTvA4/D/yPmUQpYedPzU/P2CbOW+Tq8JtwP8ST/RDz0Em5
yU8B6yZcctSby9fh16JfeIp+YSv6hfP6m786fssDm79Nijs1JQUGzll9C8xl
UIR2fkvq8G4YB97DOPAjxoEOk2bYbhuYCTX2XkodFxwNTx81v7Gw4QOYgvK6
KI9C+U4cJxzH+YTjcH20S6jnBNTTCvXk/J1YH+0F2m0T2k3s3HHrxcnF1p32
0fxxXwWSfWWA+7Av7kOhj6ZPeG1GuM+34z7vgfvcCs/FfDwXY/FcCH20AtJH
O4Tn7jqeO1M8dzfxnO4n59QXz3VdkpdNwXtgHt4D4XgPsPUuJs5MxXvJE++l
RLyXpPo7sXtS6rkT7m0dcm8L46SQcbzQL7QmfsEI/UgA+hHu/L5CP/UY/VQK
+inOr3G8MM5v+qGfPU/87AX0yyPQL79Fv1wH/bg1+vGr6Mc/oF/YTPxvW4wT
LmKc4IpxAhdncvGJGA+X+juxdT+JcdQOjKO4cyc2zhCM67QxrhPkQhxYHeNA
Tn8hzvQgcaYxxqX6GJfKMC79iHbegnZ2QzvbYNzbGePeEox7f8E4+QzGyR4Y
Jwt6NsC4Wo/UQ0owDtd2/XMcLsTPW0TyOy4v+Ihx5nIN40xdzFMcMU8BzFOk
+rszmDfZYt70HvMmqeeOy+M+i+QFiZgnJmOeKMgDMK/cT/LK2mjng8TOhpi3
Tid5qwfmuZVv/DnPFfLifJIXC/UTXZJHc/k4J6f53R1cd3/aR8O6wX6sG2zE
ugEXZ17EvDWE9L/OYR3jEdYx6mIdg/N3XD9OqKscJnUV7tzdx3ndw3mtJXmu
PtZ5gkid5zzWhbqQutBGtGcosacp1p2GkbrTSqxTyUmdSip/VmpdJQDrb7Gk
/qZpftcW64HdsB5ohPVAsTgzmMSZJ7E+GY31yZpYn5Tq79pgvTQB66WhWC/V
9NxNI+fuZ6zfXiL1W7F1eU7WRQ/rz1qk/izUPeqS+7kv1kv7Y730MdbDW2I9
3Bvr4UL+VRXjtHsYp+3B+q076XO1w/p8VazP98H6vBAHHiBx4D6GHx2H/YLb
2C/QwX7BVBF/ZInzWkDqwFnYv3hK+hdOeC5kGp6Lv6rcHPdVHNlXhthvbUP6
rVK/535XKp9FeG/hmYbfb8H7ypXcV2exzzKD9FkOYl9mBOnLcONboh1e/4d5
9+XyHyvn8CQcjkhT3D6HF+Vwwtz33PicPmL6c/Pl7MPhajg8FcXRcfhJDjfL
4aW577nxOX3E9OfmK+aXNcWfSOWlSsUvScWzaYpvlIp3lYp/loqHlzq+VP2l
2ud77S91fb93v2mKw+HwURw+h8PLUZwkh4/lcNEcHp7jQXDfc+Nz+nD6i81X
qt00xZsJ30vlj2uKV5SKX5WKZ5aKb5fKd5DKf5E6vlT9pdpHqv2lru+/e79x
eEgOj8fhYzlcNIdLF/Tk+AgcD4XjPXHf0/E5fTj9uflKtZtUfKnUdx6k4pOl
4tWl8hcE+0vls0jlN0nlu0kdX1P9pdpHqv2lrq/U/SYVZ8vhn7n3Qzg8PDdf
sX3F7R9uHbn9wH1Px+f04fTn5svZjcMtS8WTS32PRSofQSo/RSpfSezccf5C
Kp9RKr9V6via6i/VPlLtL3V9v3e/aYqr5/gO3Ds/HP+F4z1xcZpgf8pzFOSU
3yrIKa9Z7Hs6PqcPpz83X85uYjwFqfwRqbwGTflHUvloUvmJUvmqUvnLUvns
UseXqr9U+3wvH1Aqv+zfvd84fhPHr+H4bhzPkdaFOF4zx2fn3jHgvufG5/QR
05+br1S7/ag+kVReoVSeqaa8Y6k8dKnvEkh9p0Lq+FL1l2qf77W/1PWVuq+k
9hnF3lUTe4+Le3+Ae3eCe2+E+/573zfg9JfKw5XKa6M8Gg6fz+F+OTyhMD6H
U+L05HiOHJ+O8nc4/CSHN+ZwjML4HD6Kw3VQfh/Hu+T4fRxfjMOnCb/L8Rc4
3DuHl9aUV8LhvgS8igHBq3C4HeF3KU6b45lyfEaOPyWMz/EyuPoSxZFy+DQO
VyPwKx8SfiXHe+X4lRyOmuN5Cfpz+SmHf+bw6hQH243wFjshvo7DBYnxQzlc
Lsfn5XijmuJUOV4Mhy/lcPgcvrdsXzG4QQ7vRHmvHO5R7P7k8IEcDpDy8ji+
j4DfCyL4PY5fwJ13Ds9cdl8xONh+iJ8cQfCT1A4cr0HMbv9t72NL/f5HvT8s
Fcd1COOKkRrisv6vyCl/fAr68ROEl8rx3QQejS6554XxOXw+pw/HW6d857EM
T5Y7jwIv7xbh5XF8Lo4HxPFHBD2/4T1TlfAOOLw6d49xeAnuHQaO960pX5jD
pXB4GI4vQ3+X8iyk8uXF7EZxyNw7IfQdA44fzfEuOT6XGH88EP14HPHj9N0S
QU7fxxDk9L0FjqfP4QQEvIExwRtwuAUOn8DFyRxvQtCf4r2591g4XoMwDuWh
C3KO30rjQ46Pw+H8ufdhuP4C16fg3jH4Xj4vx8vm4nxqB46fwtVzOF4Dh8Pn
3snh3vHg+LCC/vTdAEEulffK8R9pfM7xrbh4leN3cLwDrt/EvUvDvXPC7asf
zTPl+oz0e6n/L5Xz1xwvg3s3iXvXRSpPk9qH8jEpb12QUz4sV8fg+Fkcr0eM
b8K9E8W9R0TftxH7f6aavqfBvc/A9Y84Pjj3PbdeYrw2qXwojr/Dva9F4xnu
XRHuvQKujieMz/ErOd4WxyeSyqfj3rehvDnuPQ2OH8fx97n7geMLi60vx0+k
7yx5YV13ENZ187Guy70LwfHNhfE5HqvUvOz/G69nKdb/o0j9/7r39UfVp2dB
pTZ9G3e1UfdrHmF/IQb7C78OHHFzunYO1PY62K5H5Vdws/XKWknHQ6E79i96
Ej6LQat7Gw+8zwCroFXDB76JgrUOC+4PzwmBXvh9P/w+Er9fXGuNafG2PNhn
rJ92e0cyjD2hdbGwRF3XjUJ93pN+h031sYtnZOZC3n7vohZrUsvkUvsdwdiH
qkX6UC+x/zUJ+1/a2HebRvgpAm9lFpEL48TjOI6kjyb0v+qS312G90wguWf8
vx1WjV6ZA5G3codEnHhdJhd4BB6kn7txmfbeGpeU8FXZ0j2rqTqu2If94nTs
F1/Xcph8tiQfnmx9G6q6kgrjXtpVgCcylmdhkbxD4Z2VB0WOTV1aW6ZAk8Qg
yz49+O9rfWvd5tPlAng8/ePmePc0uNi7x1nnzmo/4oH6ZJP+dZbzxr0LTmVA
cbealVK11Oc9Bud7lMx3FO6HdLIfuPcSBZx/MuITOL4Axzvg5GK8A8ovmIhx
yGGMQ/ZgHFJvkvm8TaH5YLjUzeLkL6ngYGm58shl9f0s5K1rRfDhXD9otYnP
oPPrVOD36VhANe/S/PTzjQ0DTsuhE+KR7Bh81H4X8ytpxxWQkjTX8tOrh2z+
K3w/D3FQtgQHxeVf1/xfLLp/XwG/fdwb8PGkdDy/IOfi8JsVJ05vaKsA4wKz
hPpNw6EDztcW51uI89XGfRuO+/Y87lsjtLMv2vk3tPMcvMfW4T02Eu+xTRiH
98E4fC/G4acQX1eR4MbvIa5vAOL6zhPcI4cn5PI1+r2AG+xHcIPHUZ9v9f6u
z2TUR8izDpI8y37Ljp0jBmVDVlgr78cVYiHDfKiBjon6PZ8iEm80QbzrScS7
DkS8673I+TlLlxVAF/m59z5D0kB7+bgNd3TkMArxtK0RTzuZ4HsP6Cz7qj1C
CXe8ZPNX5qnny+F17271PNP2SWm81+lrO5MN4vheX9yHK3Af/oT6GKA+DqjP
ALwPC/E+bIz3YUOc7yGcrwXOtxn6R1P0j6vRP+4i9VKh36fH2E3MPpr+vw9u
Xo3wdw8TfLLQf2xI6tL67jrKAqtcSPh518O7fRMhVO73yvUn9TuimuJLuX5l
q95JayZEF8DdZoeLmwWnweRDsUlalnIIJDhYel6Wlhh9vpKlgD2PD5x/dShC
9Bxx/U0P3G83yX57jOPkknH24T0Zj/ckd+580f8+Rv9rjf5XuB+0yP2wBOOx
+iQe4/qkHF5UDAfL4Ve5fusc/H40fs+NL/ZevdC3bU36Gq2PfhlW+C4Dmt+I
X3T3szoe4N6VnYh+NoPgD42xz5tM3h1ttWjPnrN+CqjTw9EyZe6jMj9+hvjx
lrgPb+E+dMB9yOXXNgyek+sXB+B92Inch9z440kcIoy/Bv37LeLfV+O8zjLx
yRaMG6tm/DlunIT2zCf29Mc8ojHJI45jf6Ep6S+8wPjtJInf3DEOTMY4kMND
cnXCpvh9B/J92fnF8VUkzoxHfa4Qfa6XmPWt7FoAa5ON9HXbZ5bJXTCvd2Tw
bHVIPM/1WQxwP+uS/fwC8wVrzBca4736BO/VILxXuTqAgA90IPhArv8+Ef14
OvHjHJ9IyIOm4vjHcHxabxTinEYYx7bDOHYKiWO5OoOQNy0neRNXXwrB/CiT
5EehuC6NNOT7c+8nCHnxY8xDu2I+2xnz2YeYz3L4ASFf7kXyZWH8aBy/mOS5
TqhPItGH4txoHiHgxLj4jfPj9B421LC/zOWnNP8S8ppWuB8m4X7g4mQuzuTi
JRqHPMDzIoYj4vwLd49x9wNXb+HqDFz+zvHQad7XHv3pDQ3zPi7v4OJzTv69
/49Gqr8W/MUJYh+p9/AxXMdGZB2F8/5cw/oYratweTSX13BxrDA+jUMEeUvc
n/XJ/qT1OkFO61dl55fUf7h6BVcH4PJTLh/h5FzczsWNXDwmzIvGD2X7h/hT
7j7n6pzXmPqYMA6thwhyLj+l+QgXT3J+n6u7cu/n/Oj/Rym1nsPlWVL/H6Wm
/3eSi7e5ePJHxVFcPMDVw7k6qli/ntbHBDlX/+HqHlw+S/O7u3iPdST3GBeH
c/EkFxdxfQFhP8/+N+9nqfXDH7WfuboBzaO5/I7Ld35U3M7Fq1y/hqvzczgB
Yb60HkvtT3ECtC5X5tdIvYXLfzmcAJenCDiB0xhX7yc4Aa4/9Qr9znzid2i/
Q+z/ilKcAFev5vADXN2Jq/txcm4czl+L1Rm4fPxH5YNcPsX1DWm/iav/c/Ve
ro4njM/VVbi8lcMbcH1DoS/mKfH/XQp4A66vwfUFuPo2Vzfm6pli+QJXd4rD
+V4U6QNyfRmhDt+X1OGXYhzYgMSBwvhcveu/re/P9cG5egitM/wPmtdhfA==

                "], VertexNormals -> CompressedData["
1:eJztvXlYjl37NiyUKSKZFZmSZMyYWqZoIFNlFgmZispQKomIRNGAaNKs0qBJ
WIZIpubBUDIPDVepUKJ3netax30/re3ted772d7f98e3vfc/1+a8z85rXcca
jmHf9+NUNLFYuqltmzZtmqXatGnXprX/qlFr180iNQ5nDn+FVjmbDa6RzkbS
ASnjHc+Vo3Eb74w/0VyEDK5lDirshZFmu8J2L8wq0etPgwM/p+ai04a/Ru6U
OoRUBjwYOe58FTqw/1FfCadMtPiSU/OF1wl4eggu3DNbhAanumzXvJOK5vf6
Or9P0m183/ssrj8tanU85VExp8j9+INJDL1/XNEQev8UjUujyPPxoAuiP8Lz
L24pLhCeP++eXCQZD9bRnErH42q7RUkYj8qhsepk/Fij7yN5YfwOv2okhPFL
V7icIL8XDx+9dZDwe3MuSIwTfu8/tds/vV6hv754hEk+2nZk8PbXK54iwwPH
pxWbV6LHSiV7ezRlo2PeV9tOf5CGqs72bOwdXoXknX9Jm3Z6hDQUV06e89Ye
xc5od8jJQITctS0e2znfQV/VU0OK1eOwo0FvncEBIjRjSwzqeDYODYtTqUx7
dAP3sO/3/UyKCGlK1GQWPlW6pZoiiQOX3sbLorxNFG6KkKz7/LXkfuz8pbpC
uN/venG9cP+Jfgefk+djVf899Pm7Zl3QFp7/R7+8HxkPdu2eOEkYz0L15Y7C
eNJ3X7Yn48dbk4slhPFbm41oEMYve/lnCfm9+EDKlG3C7+0vETBV+L3/1G6w
LmGdwvoEO4JdwZ6HzvseziTrED6tXKtnliRUoeVGluEX36ejbI9bmz5cT0aH
ROURG8xFqNE3oEozAqM20cs6b9OwQXIKlaj2tgidblNxuMuoRDTnZ8mve1+j
cJlUUHVBoQiteF1rfn5kCLK+7fnOuWcK7l3XAUXki5C/8VSLDTmDbtlZra29
rZWGxf8WoZ+dkt3J/XhB5WF6f2xijaZw/y33tLPk+XjVl2T6/G2D9tPnN2x9
8YeMB6toDKbj+bYlio7Ha2yPODJ+LKq3oeMPkPGg4/+9SO0k+Z14sMdM+nu3
NjnR37tYd4o1sQ/eHCxF7XNDoiO1z4xSo2HEnnjPlAwnwZ5hB+dSe8I+h30P
+x3WJaxTWJ9gR7Ar2HO91pgzn6Yk/PXZoFlrnkDsoF483K+oJgp91fiklb/Y
Gl2YHbjgyTcRKrhzyXeO3mU0aeY5dH9SGP513/Pn7RpiN6tpjz7OPYvM+5lv
kNZPwOf98mZO/SRCxZu+yGZ/6HLr0TIXleevEvGPc3fWyb4VodIM+a/kfnxt
4nZ6f27+M3r/uM6ykeT5OLHcgz4/UuYkff40Z+VoMh583qeUjsck/Cwdz95o
0QUybqzhoUjHf3xyKR1/7HefneT34k4SG+nvNSzNp7831S+8M7EPrtZ5Ru1z
+NZPuv7PnCpSIvbEv9wjqD1rclKoPeHchHMUzk/Y57DvYb/DuoR1CusT7Ah2
BXv2MC9cet3Z/K/PpW5S7942i5DCro1O44xMUdq1Ex72OwOxS6mb9vRfImQo
P/7qy8UGSFPmzWn/5ihc9GCpVDF5jnpkTpN6zeObOZeebV+5IxYXGKxtGiQS
oaHfhmaR+3FoZ/H9GXfE929U3eBBno9dr4qf365A/HybvHgTMg4cZCwez3gH
8Xg8VT/rk/Hjk/fE47+vIh6/ZfexsuT3YsvD4t9rKyn+vf1FdxGxDz5kJrbP
nP5i+yi7DlUl9sTKeWJ7Gjbcp/YEPwR+CfwRnJtwjsL5Cfsc9j3sd1iXsE5h
fYIdwa5gz6D43KHdNHwwfB5bfzoyg1xvo9v1hJ36MVx2sOr1mJWXcRdVz99+
DeQ8CbwQZ/ezWSNtk0nbqRUhWPxvst/3to8l96Nxeyrp/Uusz9D7NWKfTibP
RbHjs+nzTapc6fNDCoMukPEgE531dDwlX1zoeBQDpumS8aN5/c7T8TvJuNHx
L8J17dO/RiFbt4/09w7JP09/rwJ6EUnsg9LVtlL7rFzThdqnNKG+ve/rBLTo
WFYfwZ6PvW5Re4JfBz8P/h38EPgl8EdwbsI5Cucn7HPY97DfYV3COoX1CXYE
u4I9La3G2mitPovhM2Ng2yOyv0XEj1wuWvWni2Zo4vh7ctVeOHbUwmiFP8Tf
fVf2IfehMYmj6f1TPH8fFu4P6fCxijwfhSdK0ee/UHClz/ezK/Ej40Fd9o2k
44kYrUXHkzD31VYyftR5iCod/52pmI7ft3NeOfm96PTSd/T3Lusmoue/ya7U
OmIf1F/bn9onb/wf6n9/LDmygNgTKc7YSu3Zt83OfxsvgV8HPw/+vaUfGnQL
/BGcm3COwvkJ+xz2Pez3luuyWQPWJ9gR7Ar2FI+ru2bLz2qUmazygdyPQnf4
0fsvLJ9P759nYdSTPB8tkThNny/+FKHLwYusyXjQ2dV36XiMC/XoeIqfTJpE
xo++quTS8ft1DaPjz7/j2UR+L/J40Jf+XvGnCM1SWppO7IPk9bOpfXJkt1P7
HH2mczOn6S76MF42YlXGxFv5ixa/XBsiQhB3QhwK8SfESRA3QbwEfh38PPh3
8EPgl8AfwbkJ5yicn7DPYd/Dfod1CesU1ifYEewK9tSaqkTvg8/QLg30/vqm
93Q9z3j7+6rw/MGbj9Pnd9wvXs8v9AbQ8VxUEq/nn+ue0/VcvacHHX+j+XU6
fsspd+l6HmMfSn/v16xi+nvvhjvQ9Vy9ayq1zwaLm9Q+Pv7adD1XjT1N7ek8
s+mWYE+I4yGuh3ge4k6IQyH+hDgJ4iaIl8Cvg58H/w5+CPwS+CM4N+EchfMT
9jnse9jvsC5brlPRX3YEu4I9tcc+ps+Fz2l2LvT5e3LE53Oo1Do6nhVl4vM5
QG8iPZ8DNnSl4x+78ggd/+bYZ/R8jpRPor83usKC/t4NQd70fL4laUPto6dz
mtqnrHYVPZ+X7z5D7ek0+jG1J+RFkCdBfgRxPMT1EM9D3AlxKMSfECdB3ATx
Evh18PPg38EPgV8CfwTnJpyjcH7CPod9D/sd1iWsU1ifYEewK9iz033xOOBT
xkI8nnnHXovjjV3i8Z/2EI/fP+BXDyHesFoi/r2rFol/7+ZSBRpvrJ8gtk9p
X7F93lqtHy3EGx4xYnsmrhDbE/JMyDsh34S8CPIkyI8gjoe4HuJ5iDshDoX4
E+IkiJsgXgK/Dn4e/Dv4IfBL4I/g3IRzFM5P2Oew72G/w7qEdQrrE+wIdgV7
Lmt4S8cNn/3GZNLxZ61aRuPn+S8k6O+1+mNDf+9FnNNJiJ+/nvWk9ulytgu1
z4FvRcOF+Lk+pg+15/hH+dSekLdDHg/5O+SZkHdCvgl5EeRJkB9BHA9xPcTz
EHdCHArxJ8RJEDdBvAR+Hfw8+HfwQy39kuivcxPOUTg/YZ/Dvof9DusS1ims
T7Aj2BXs6Tv/uavwO+Fz7c5e9PcaO+hbCfmg608/ap+DxxSofaSclw8V8sF+
NrLUnjts3cb+N/UQyDMh74R8E/IiyJMgP4I4HuJ6iOch7oQ4FOJPiJMgboJ4
Cfw6+Hnw7+CHwC+BP4JzE85ROD9hn8O+h/0O6xLWKaxPsCPYFez5T+32T69D
3g55POTvkGdC3gn5JuRFkCdBfgRxPMT1EM9D3AlxKMSfECdB3ATxEvh18PPg
38EPgV8CfwTnJpyjcH7CPod9D/sd1iWs0/92ff6/6//v+v+X1+P6Lb+9YfMr
vLTcYURBdDZSUR5i32RRjmaP2psbe7wQ5/tLLzTfUYAaX+ZN6PWz9fXcRWWK
kvD35heWp5HnIf1ZSxyE58gZOSwlf4/9+vs8Jc9DrhPS/+1z/m9dj8qpWCJ8
7+Y92TnC77CeKkW/F/4N/x+um9ePHUXGj0XFb7Bgj9g3sXbC+L83lKUKv6eb
VlcV4f9fqRlIf9c/Hc9zmQQ5710vsO8qL7PT93JR/4dPd3f3+efPyZ3wzIL8
PT6nKyFNnoe0osMt/91zYi59OLbxdgGGz62GVcaxMhXo93g56ZhNuTiwfPHw
NtbFeNfXprmf+1e0+hy4D/4O7of5hvmHea86ozqQ3I/qzlVKkftR/omc+cL9
tlkzngnrQGOYH11XsoUeEwX7Fz+vPkTG99enrK6GiTBOuA/+Du5vbZzwffD9
8L3/1M7/9DqsD1gv/2mdwH6D/Qf7DtYHrBdYJ7APYV/CfoR9BfvsP+0vWDew
jv7T+vmfvg77DfYf7Lv/W8+fcFDRoky5EI0bNXOM74R8lKZiu2+sVgXazHCa
5Qy36crwGnuZ1ZKKVs9R+FrLMRYK99GP/lfDRG8q/sJvNjE8x4jhOKW3y34/
V8pF7fA8cz+5e+jgm6VG3xdVobiHTyf+1C1EDu5OPUMPJKIX/Su1Fcsq0S71
pIfj12ehHtNlJ+1RSUCuL2Onr6qqQq9Ynb07q7ursnq74WXlZhXXp2h/16vS
fQZH4NWj7tyN6CtCfVn93XiwuB4fx+rwyfId3//YkI6Mc9I71NwJwTPTNbUb
SJzjZ/Ngdtmy+0j72QGPsztScK7O5ALPLSLUJzH+1ieNm2hah+ulo/on4l5j
w9yWxIiQLKuTanJ46My8jqe/Tg1EVzZdcDy+MhSPX9Crn1utCE1k9VMlVk+V
ZXXUPKukvhKWPig6J+NS/nqMo+a2qelO8oK85T6h5Dl4x6g19Dmj73ekz+k5
POUguR93kUqm93c4XFkt3N/A6lxvOLy15NEJA/K78BG9b+7C7wr8tDdf+F0D
Wf3rIIcb6nUyfEl+LzZ8vZ/+3qxhmvT3RnaQ7jHa9SkeN/JXF8HOKq/j7gh2
njokrYbYE88N3kXteWR33HzBnrqsTpHH4blrVftpkHnH0u2Gywrzvk550nxh
3tstEsfth3pwuKSRXCFZD3i/3UE1YT1sW/p8mrAe2hf27EbWIZ5k01dVWIcD
uueFCOtQdvHc9i+UcnGR39WdwnqLLt9oKKy3bizPHMXyzuz/Ei8uM9Gry1/2
DD0eLAp61r4IPSgeWjyLfO/MAxOlSxSeoISRxuNSXucg8+aLUzd+qUSODL+0
Z5/WDMcssZis2H/fA5RbumRV9123UartcK8qdREK39sh1X/aPWQSM2DtszWx
6NCq3D+Dz4jQN4YbaUW1xDf3vxo5NiU6BQVIpyuWzAjCNeurL/qTPLSx59qa
NcFxqGrB9QWRV+LwV9nJi6qLRWgBq9fv5XBPbcOvOGDKSaTscH7j5snX8dim
eZuUyfW0pGezAqecxG8VPOn17S8Rvd6+s7hOOp/DQy9oHpdYGxyHT+SF0e+V
3ixLv/fPHgVExomHv4qi48wQ3aLjbLNNnBf/YfWqWlanUl1sf4fYAU8ur1gj
2KH3Qkdqh6MLCpWJ3XCY5UBqt7VN9zwFuzWzusAoVicwY/WB6oXDepF5wWb1
Pem89MCKdF42Kf1uIvOIR/8+QecxOTmkSJjH3RfGF3aquIFWH1pg2n9VHvK9
otvWTqcKPb60vOLCnuvoc0Z/22chT1FC5uR+CnVVKIvhpwYMP3Vi+Glhu53o
7s1raLj1Ualv964jlc6rIyXJ/rLdajHgdEgcynlx+85Ju0hkuyi44MgbEVJj
+J8Bh6sm/zZacflIKCroGt5zzZxL+LZ6xPbUOhE6rWbT6NEzALUvsg37sCIK
Fzz6cnGjSIQqGe5iweGthp5NZ13ibNBIh/XbX7Ql51g7rdET34tQzNPPHY/H
2eANl4zp9fMn59DrX1i9O5bDYf3m7ux0pmcAbj5nTb9XR+ct/d4cvabNZJx4
5ZoAOk7ncj86zpmszjj3nLjuuJHVG9UDM4YSO2DNK1epHSTee1A72P14O5/Y
Dc/zs6J22zxSi9otgdV3enC47YaL2nVkXvD1+xJ0Xq4oytN5GRygVkrmERee
nU7ncVPVGDqPR0Z1RysWHkQpD2SNbpY+RR7rdx47K0/O1UqT4zNX26F3mzwl
YkIfIIeiGyMOO5B1y/ZbHYfbjq+vTyz5sQelRUi7Lpp8DaUr/ZRa9FGEuo84
UdMUZIkslOqy5lRfRmtWFNonNIhQZ4bjjt3ZEs91ttPQNryxBRl/6mXd8MML
+xSdPyL3R4Rk5s8MeF6zHvVbfeaJqk4I1lFRXP/xJzlXGX42k8N5X6mWeTn3
VkdPZfrsM3W/im9Pyny9rVqElj1o6ny0tzo27Sa+rqYmvj6G4RYBHP7bqHjm
Kvle3M5I/L1jhoq/t6T70eVknPhzmXics5+Ix3kQcOH1LXHhbePHNRI74FP9
xHZQnyu2g4Sy9y1iN3zxgthuSt3FdtvL6nSOrG53gNXrAjx1zpB5wS/1xfNi
kyKel5rVCtpkHnFEiHgeB2qK5/HYDq1T0wfF48Rq25C149PRbLmPp3yPiJDZ
YvfPexfH4rlnz+9bufMWanPkyp+RiSI0m+HFJxle/IbhxTWv1z5cpBCBr2Y2
+h1rjETeP5Oyb34VoayjB3uOJnbxKbpZGXz2Anr5Z0CO0neyTwGPt2iJIx9o
dyq+dqAvjlabM/SVrhvWVlispNskQuWNU5UPrD2Lo7883GVpehFrWlQfMyH3
1+qIcdA3HL6cNnNgnXyjOf5m/ONrYPcQrN1hyyIJcr3HgN8HFBrNkXoP8fXC
w5vp9SCGP43mcOf7a9RmkO9F+04+oN+r6l5Jv3dmrtZ9Mk6kKD+TjvPPiAV0
nOGs7t9VtyUePWqWnzyxA/I7mUztkDm7F7VDoo5dLrEbWvynltotrsNVajcD
Vm89wuqvQ1nddenng5VkXpBr7Gk6L6sOBdJ5ia08dJbMI/oTMYTO44gzJXQe
X83oZ9tj+S189LW7/oeF19DRzovfaUWJ0LDa+vFjpqXhkxsTXo23j0E2VZKX
Ku+KkCXzcwYcTv3h1wD/5A/XcFlmjOWyugtojI53l2xy/szMWH9t4bU43Gdh
Kd5y4gSa23vs+vhyEZrC9hse2BK//nBOVfuPeyiuEaltl9CxxzqD0jbm/xCh
6PwHGeMGB+A7lle/FZqexJ59z5QPJ3bbwvBsKw7X9r5vckgvywafNxps30HO
C5esdGzfn+yvyw1t68h1lL5vEL0u/9mBXvdiOOIoDu/uZ3m7kHwviZ8i6Pd+
dj1Bv/dX44jlZJwo5e1oOs7NbrF0nKEMv0lmeM4VhuNsHHvwBrEDGun3lNph
gJw8tcOxDbZhxG7o2RFfarfZaxyp3fxY3fwch4+PSbw1jcwLec55Oi+9lpdf
FOalykzNicwjGrXTjs6jx9jxdB5XWi/qF/I0EdfMG7Dz4+NBt8brubab8VaE
ltTvaqP08hbuXFaoZzp6+K07qQtT5qUTf8rw8XMcPr50RM6uzMhk3LPrLcem
Tz1vZUZbBX19JUIaOVPLqqWv4V5frmw4MKbdLau1E5IKyPnzlOHmOyJa4ua1
CoerE90jcKf0D99cRtRp+E9p6Piwnpz/w+f2S9MKwgtvH1Ob9Lud5k7b510f
NoqQL8PT1zI8PY7h6QvWG+rZz7THr1f1zDwS2U1zxLhOzo/IOemS3/CUXEe2
13vQ65ZLO9DrhQwPDmD4sC/DhReZqo8i34saRzvR733yMIt+78hudhJJ7hGo
JqyUjlM6uJyOM4zhcG5rxLjcBobHfTR2+kLsgAZOuUjtoNJ+ALWDif5yW2I3
9CntCrXbzQ3Lqd2KGP7hy+HyJvqencm8oMJvaXRevhuOoPMy0xrv05x8B/3c
42Tl0E31lorD+9Pnyb7evuexjbB/10dJmpN5x5Nd29B5r579mO7fEi0LmQn2
MXjW0wK6TnRZfFnH4fJj1/ei+/dCt71+ZB3iG/3c6DpcsMaY7t9Ne66Xk3WL
K3NG03Xrz/ycW01LvF5vunj/vt+k4kv2BXpkcZ3ui9Lb9+n+Xfjp16Ai05Mo
yOs03UdD2X5z5XD8Z4ON6f59cuz+JbJPkUmDLd2nLw2aa4X9+yM8nV4PPGZD
ry9huP5s9hnG8H2ddZju3+Kr9fR7f3R0od9rclG8fyNWDKXj/FJylY6zG8NT
nRe0xP0t0u3p/t37IILa4X5Wf2qH7PtWdP+6ZJpQu2WN3kfttpfhWFMZrlXO
8KzG9p50/x5wNKTz8mpSGp0X+8CPh4T92356zU5hHmfFvnkrzGOO4Rc3wf96
Pcu6Rs5tXHtLh57bJauMqf9NnhVympzzeMfFRfScX8H4ANc5PsDHIYuo/x3j
o5JA/AgeVBtC/cjPHXbU/56/HCIRcvYCvlDSh/qdY4wn8HR0S57ApEFu1P9m
7limTvwaKrupT/3aPtPJ1P9699p+jPhBFLW1nPpBX8YfCOX4AxGHe1L/O0hi
9i/iZ9FRvTXUz/5eW0f975b4WfS63MPV9LoO4xXUcLyCJQ/GU/+7IcWMfu/F
E5/p9zZWzqX+d7rhYjpOrwe6dJz7GS6+pENLvsEyJV/qfwNX+FM7uCj2oHa4
cnIn9b85j4dRu01v60ftto3hkQkcDyH9mz71v03rfOm8PDivRedlHR5K/e+3
kQ/pPA7toEnn0dpDSVOInzc+u2ZK4i6cFXTyqBB3qVp+cRHi59XpVdIkTsNG
atNpnDaK5XV1jIcA+d30mjc0ft502NaLxIHYILWExoEHPzvT+NkzYuELEjdi
rfdZNG70ZfwEn9yW/IThxjNo/Kyod+ogiUvRodc+NC71bppB4+chaYFFJI5F
85/1o3GsBPNzQczvgb+bE5dP4+c1YTuOkTgZafVIpXFysk4NjZ9rQ8TXU2XE
1z8wPkNbjs9wqOgUjZ+7JIm/V+WB+Hvta4/Q+DlyrnicKvnicXZn/IbOD8Sf
3RnP4WWtCo2fE3zFdhieLbZDl+FONH6eby22W3Kg2G5BDFd25PgPN/plewjx
87Jo8bws7iWel7K7k+YL8bNhtHgeVzmK5zHuapsCIf/NDfmzneRN2OKwnISQ
N63JSy4X8t+Kyq5HSZ6FYx8d6ivkWZWM/+DB8R/S1ZbQ/DduzlBZksfh6MFq
NI+7PnYrzX/bBec+JXkf1ja6QPO+o4wX0TxazIt4wHgRSUaGNP/1deyjSPJK
5KQcSvPKLxusaf67snzcNZKHovtHSmke2qwo5ktc4/gS1VMraP67JvGyNclz
keGF0TTP1bYspvmvZ34Qvf5iqAq93sR4FPWMR/GL8Sh+7jaj+a9h9Cj6vdPb
FdHvzQ5upPnvoCwZOk7t5750nGcYv6Ka41cc2HKH5r+7rO9QO2R9PUbtsG1k
Bs1/c3Z2p3b7rKlA7ZbH+AGLGV/AmvEEanLCa4X8F5fXOQvzEj7EjM6LcWK7
EiH/XZBSQedx6oOfbYR53NWla61QvyrxUIx41r4I9/ZvKhTqHgbTHboI9atx
6qcmpbzOwTmb3kwR6iQKrJ7yk+Nd/GyWpfWrpL55xt133cZaKT9pHcartjlF
qF+9+XrE5NmaWFy1PYPWbbazvC5FRpznQX63sHIErV8d9j+kVDIjCFUMrKR1
oY3qy2n9aoeJ09LIK3Hoh64yrSMdZvHlJY6n4W6QT+tXvQwcdmyefB3JxinT
OlXbpBRav3pSt59eX+g+hF5XZ37OnPk98HftNh+m9avOXyzo9/b3k6Tfm390
IK1fdbTYRsd570oaHacN22+7A1vyOgY83UPrV0lKRtQOR9btoXa4/Cqe1q9O
Rl2idvs6zYfazY/xPEI5vodkVws5oX71ocMcOi/WwzfTeanLuvVLqF8h85vh
wjx2cHCg89ha3dJ0wwlzoc6/Pkx2ou+EfKyrl7ZXqPNvYnwPXY7v8WvALVq3
/4aarfzk7uFSKwVatx/uE0br8xW+F6bvUUnAlT2CaX3+AOOBqFe15IG41UvS
evuzturdau6EoKmbp9N6+6/ZobSuHnbuyvtR/RNR12M+tM7cg/FDNjF+SD7j
h7xyCKJ18m+X1oXlr8do8voXtO49YFwwrYcvzl1Ir3v4ZdDrjYw3coPjjYzx
0ab17bu7ttHvfWg3hn5v18YUWseOK/jYVRinXc9oWsfezPgka1+L+SSvGZ/E
Jl6S1qWXlnagdnji8oTWpVWvKNL68/1BZtRu0g5jaf35n9aZrRk/ZDrjh0Qw
fkhfZ2WKv5QoZ060ULiPl546QPGX233vUjyl+L1cv9ADiXjj7NcUTxnBeCOR
J8S8ESPGG5FyP/pHwE28gwN79hkcgSbNuE9xE72UfhQHsXw6/tzZHSlo362R
FAeRY3ySBsYn6cf4JHNPdv5+YVwgKmt73qTNzLtoULucDsFh5Bw+uGC277hA
vH31YXo9fEM4vd7EeCZnOZ7JhTkHKU5xUDnYR/je6R4mFKeIHdSR4g5qxm9l
hXFGHo2iuIMn459stxbzT64x/sl2+64UX9i8PLmPYIdPi5UovnBJ721XAS/Y
qmUxQbDbnsP+FC/4p/Ni2gou9iqsyWp6cT4aZJa1JKpPOpoakLg7v6ASxf3c
VLR7dz6qirxSnGmdiNrfNk/dqlaFnjM8axCHZ21z+TMlBj1Eiz12fVwbFILf
XDu/R81UhBZHYrPYhnuoMEn3Wfz7JLxTv8h+s+3fOBSvy4ud0n3XPjIvM4dY
6p7cfxt3y+iWNSOZxCHJrqK1tj64S2RKF2P1y9grcqxhdxKfVLeCH52I+2Y/
4wfG7k4JVcnBSbjx4Z02R/2J/4188mzHtUy8anHBrq9aEfjQLq8OFfp/6/jS
Ge5zkuE++9oHFvX0zsHnux3fHo4SUAXW93eJqkKy5r8qEvMLsXSaa8I21XTU
7Xfvudr7WudfFVR/PT7uTw4q8X9qbtquGLVRPW2fPacCPU6TdUrwzfvr85SB
7Jl+RRXoM8MlTTlcsp2kx9wlEY9RdOWV7hUP76C2WrKOkpVVyOTSjX5Bkk+Q
q2bwzs4DE1BCw91ZLxVFqCfDEx05PNHr6JQoHxeM/lx8/GmobBA+n7w+av8N
EUqQikn7/fU6KhluYDrjeAKOsdEVuV//GwccxuGAf7Lkvr3Z7YO0O1f+Hv04
DW8e3dZ921NyXtlKLd069SSOcv9Rtv3JTTxjtMrzYxlkPzL8zp7D7zafGZ7v
25CADznsemqgmYAnvd0a8iBLhFKHXv794cdtnNGtIie1OgT/0pE/NSCWnMOM
N7yKw93Wju0+UDvwAV63Srut/Z5YdFK3bVnaThF6ETG0/anxWfjli8kappl3
kJ7h85ldkqtQN8bXdOJ0glGxDVYTfbNxr5E+sQsP5yL5aQWKk+wq0Ui2T96w
fQP7xabPPeujwRlo4XPjpE7KOWhH4iUtv1lVyI7hZ3YcjmYpyotXqrz512fH
6hq/eWTdLr6qvwWtv42ml5sgND8WrXab9OH7FRH6yur4mzkc7YKckZu0RBxS
//Ts4/iyi7jvqciCYJI3GV7ufX2M5VV0oqPzmJ9ysbhzpV/J0rK/cTQrDkfb
s6vuqjuJQzb0/KX37kISNtZ2XTP1tQilTLKSVY23wZvX3T/20C8FG3bpfqjk
uQj9YHUNLR5H+zJ69Y3yy/hajKjDSper2MxhdPsZZDz3etrEbq2Jx2/GrhuR
uysInxpWrjOZxKuQX+VDvsXyrOa5xpbbTZKx3Qz/Ksf4SDTGq9nidK4I+fQo
Vdb7dAd79t9W0v/hTaTj98FLd58IfWdx3nBOhygfNHwOmW88+njHn27js1Bu
zy2zhHmX79UpZUXmQ/z08lvZm/4FKGFXxBFtGzLv/s9XbDIMQyOmfO4SeS8b
9RwaKhr2vAp5sn21he2zeLa/MhmOtozD0XoM9qlqPhmIXFfoPk0ISEbn0I2n
E0g85jZ/YOYC3ci/PgPvhs83JvZRYjjaXg5H07zcZ+jmNl7I60XArwY3L9wp
f8vQvSS/DqtvjFFQuoAM5Mdr3xsWgSXmDbu3q/ZvHG0Hh6OpLW8uciN5RMfX
P1LtTOKwjeGALZUVZF6K58gp9lHHmrNrrb+bJeC3me+Utn8WoQKGo8VwOFpi
r/sbpmg4YguzuvNmDuG4m/fPwjUkf4/b5vLkj4QvXnLJffqTq5ew+bX74ddI
3jeK4Wh9OBytl+e600PivXHZwoyjIUrBaG6pXlXQDxHatCKpkcw3toztvYXM
Pxri23uXMO+XGY7WleFoRgxH0znzMKG/QRDOVJNKDF7xEB0aqPuj3yYR+p0X
uJuc19j6Y+9scn6j9n0NAoRzW535J2vmr8qYn9oyeGTk1bCTuDb/Z6+SynTk
GjC0f7U7OQ/ZfvvG4Wjj2H7zY/sP9l125Oi9g20csXV2v9rn1y+jBS8trUOJ
HawYfmbF4WiyU9Smy1iexPC5+3mVyXaSX1tVt9+uu30DrooOX+HQIwhXT3P9
Xdb4N442ncPRrEoaQgJ7q6MFN3OXKGmHY90/62UeknkJy1W6l9hojnLs+nge
XRmFLw20ijUm62Qhqyde5HA0PMyyx4thp1DqmA+jtm0LxPNOFMobk++1/my2
de+Lw0hPJrVw5yZvPCGv5mHYbxFyZXWN+RyONkxBQZusAxQY4JFC1gUyevCA
rgfTAuWizCenkZHjrG29k2LRkwrdc8criZ1ZfrWHw9HurcgsJuc+2tl0vIb4
AVQ4zpGe/xI9unYpcfFCmxd7Sfm8yUTtjZ0casj53376lnGLXqfihA7JUkUZ
N1Bfp20LXgSS85/5s5vMv4Ff02Y42gkOR3PvWHH2enwcPvvSu7ziRDCadlk6
IvOD6K/9BvsP9t0NhqM95nC0J8l7ZDclBuFOIQde7/Y+gCtMbr9bTuypt2/g
86waLwyfmXJGoTOa/sbRXnI4mk73uIsGjebYc2VNoN1RX3zgdL+pv8j9x+8u
mZ2UZYO0hmmuyy8KxK+Xdbd8RZ6fwHA0ZQ5Hs5BxWRAVdQmpj0jYsivEE5vd
TMLvyf1plVMnk/lGEz9ZNTwfdgp/fphD5z2e4WhxnK6zl9GTjOWnriKr5TLf
z5m6oiAfX4U4kQill3jJkXMfJe9C84gfQD1lVOn5b8JwNBsOR7twIGrmJ8kU
9MNlv/LIjHh0W0F1zdX7IiQqd6kncRvyVzEzJnEcWpagLCHEbxAX3mVxIsSH
Sl3qT3xacAOvCG+WeLs7DCHVhX7DyHPAzy3mcDTwc+D3wN8pVDpu27wiHg/b
feu5W9xxVDC1/SNdMv5pbL/N43Sgemy/bWL7D/ZdXpON29JTAbhgS0y+QaMD
nmV/VP/Av+BoWzgc7VuDv41blg2GT6UIo9Qoso9Oezxxez3THl38kD/+9Uw3
HO8Ve6qOnA8+rI4/lMPRuum7mpN1gCSXx4sSyXMmz+tI14PBNM1qz+dhSHno
Eu9EMp5P4Yd2vSbjjGD1xDYcjqZQ+NGe+APUWXbSnIF91BGSfUb9goRM0K+M
74koTj7TfnT8cWS1Ps5k+BsRCmB1DScOR/ttmv2VxH9osnxFiNnUkyjhkQyN
A9NTy5KzX2N0IT9CJ9kyDMV9fKLvQ+axJkKI7xPwWhrvh+E9KMNmEolbYlgc
2YfFlRBP2jAcLT9Pc++/4mgD0iq/kXFi087Pcsk48R+5+3ScGszPPWZ+D/zd
E4ajzdZ/UDn9X3C0In+fMmI3LCcT+oDYDUn5nqR2m8v2mzvbf7DvAEdbPzBI
9K842omsgl5kHrHNgae7yTyiS8ExdB6HPKj4Tub7r89zjsvovOcxHO1j3dL3
/4qjqRjJXyLrCnVef260IRnPvO72dF05fVMwIesQ/bC3GeHfWx3rhhjQdRjK
cLTYnz22afwLjpY+tM6SrHO0RcNY8lTccdzrfFWmsM7T2qgYkn2BbK4MaOsx
5SSeH7WD7osChqOVx3zz/Vcc7c/G6jNk36HwQZ3UyL7DCVld6L4b/sl6Edmn
qHSBehjZp/iBRsYzYZ+eY/nYUZafQV4mbyyaRs4BHPHBeTY5B/CJeVL0HACe
1g8OR0ti8SXEmxBnDnx4KJWcS3jJ80+K501d8Yc1YfRcOs/8nCSHo6UwP3eX
+T3wd8vr1SeQcxIbtl/pQM5JtGxsKj0nYb/5cDhaV7bfYP/BvjuX7GVqSPxv
8SOPu+TcRgqZPei5rc3wM20OR5NZgEXEH/z1Wb5Yn/qF+oJ9g4gfQXP3npWx
9D6Arg5OoX5EktXxZyxsiaPp1M0xIH4KGXT/dJf4Kdwpvjf1UwMdO/kSv4Zy
NG63qTwRjLOmiMIFv2bB6on6HI6mJr1sG/GbSMa4Rz7xm9jz2+cqwW9+PCya
TPwsOpO6cgTxs/hkm7d6gp/NiY5uT/wyHrLephfxy7g8/Ja94JcLWP52neVz
kMctYjjaDQ5He9DhxVMSJ+DK+BPWJE7AM39OonECxJexLN6EONOe4WjHORzt
s8JDYxK3YL9+09+SuAWtHltN45YJzM+B3wN/BzhaFIej+RhnnSdxFJb8uD2Y
xFFod4YpjaOq2X47xPYf7DtVhqPVcTha+XT/sySuQ2t+JW4kcR1a8OEIjev6
vx67lMR/f3+OraBx4FaGo0VxOFpG5NKDJM5EkrUWv0mciQeP3UHjzJ77VtWR
uBRtOOXlQ+JS/DvUg8alSxiOdovD0Z5pTE4gcS9qLpivSOJeHDH8Sj8h7lVs
iq8gcTL6emXrfBInY6X8QmshTj7N6iD7WV2kktVDapuco0kcjpxmnLxN4nD8
9uGt70IcfpbldfUcjmbL8jrI8yC/u5FWfJjkBehJhooHyQvwnjXzaV6wk8WX
BhyOFsLiS2UWb0Kc+Snopw7JU5BK39AQkqeg1RuqaZ4COFo4h6N1Z35Onvk9
8Herlit0OBVng530Le+SvAlNm9eR5k2KbL9JcjiaIdtvsP9g30Ulrx1D8jhs
UyLZodHNC5V1M6V5nCnDz0w5HK3hee8Ckh9i+LST8qJ54gsV8zqSV2I9U5li
klfidj3O07zyCqvju3I42pSZlyxJ3or3DTg4nOSteLtZV5q3ph9JXEvyXDz8
1baeJM/FV9GlKiHPHfwi6irJi9GEtA79SV6Ma3Y/OizkxUWsblLC6ihQP/nO
cLQzHI4WMytlCMnT0eoeAZ9Jno6rNJtong55HeR5kN/5MBytlMPRjk/Yenlr
DfFTdkqjc3cFoZJ8KV2hbgDxJcSbEGcCjpbM4Wim34Zqjo63QUHv0twf+qWg
RokfjkIdw5L5OfB74O967RXjaN85HE1byTZ/jOVV3KC0RO2nXCyKHm9D6yrr
2X6TY/sP9l0Uw9EGuLTE0VZJ6puj9bdx7/CIuWh+LK7Nrn4v1HmCH029pVR5
E8NnlqMvrQt9ZDiaIadfnhp6+sDR4Ax86NzqtE7KOXhi9tm5Qt2pz6GJRlF9
0rFb+xzb6cX52FZksEuoU7VWnzx4J9R8om82OvhzetLCw7nYwSGe1ruGsnpK
A4ejjWL1lEGsvgJ1lWEh9T20Ax+gDY++dLDfE4vzPmyj9TfI685xOBrkdeks
z4P8rtDxGvZtSEAjew7KM9BMQPq2p2k9EHC0AA5Hm8viyyYWb0KcWf+jds7b
3T54Y/ZxKdXHaUi1Mf+0UJ/UZX7OgsPRujI/N4n5PfB3ugFW2McF41OLd1YO
lQ1C0t170HrpcbbfznE42l6239TY/oN9dzbo9cIlEY+xVnNTr4qHd3Cw0pqD
Qv22tXnZwnAuPQ7nuu8d/D4xvxBlJGte36aajmUGbdcS6s9Q72hm9Q+oe4De
eSCHc+06W3tzx7VMtG3ivv1ftSKQy/kdHYV6OORdVSwPg/wLcC4zDue6s1pu
SLKlDyrduca3ad8dtGpKhOrYODKPLP6DeBDiwLa7xTjXTQ7nWphw1ia24R4u
3vQnL/59ErJ6OYDiBV+YHxrG/BL4IwuGc9lzOJei8ZvXu3fn42PyDa8yrRNx
J/naZAG/gP0A++PAf9gX/3+9Lsfq3kdZ3bsfq3sn/vK1KlMuxDca41UFXVXP
mHiKt55ievPtnN78U0l7en/FPucJAj57+WntHuH+1r53INNTS/8f6qk7M/2L
CtO/5P4H/Uskw6EjOTw6eF3wsQTfPAyfg+NU3QWcRbLHj1Pj/uTgWZeP7TNt
V4wVpT/ZCrhMa88/y+ywk9nB4T/o7qtO+BsUvCnCR65mL0s/lo8cDrv2OfSy
9fHv6FgvM+1GLq7peqZ7pGYxVtoY5jaqbwUS6X7oTK4j46rOHcl1dG6Lkbtw
vdVxNm/TJ9+LpFYXryTfi6Pc7/3b79WvHP9EfmIRmrLA0P3dpnxkoTXi8yGp
f44zvlIqMNoomY9Xvd30UTqoGC179R6tySxHb233LibX0Uib5ZXkOq4NcqTX
/+nzXxrG5JBx4soJ1Z5knLidvOrH/2acoIMCXRTooUA/A3oa0NGA7gJ0GKC/
AL4+8PeBtw88779434zvDfxg4AsDTxh4pcAzBX4p8BGBnwi8ROCxAa8N+GzA
fwI+FPCggDcDPBrgz7RmH9CDgT4MdGGgIwJdEeiJQH8CehTQoYBuAXQMoF8A
vjvw34H3Djxp4E0DXxr4tcC3BZ4t8DKBpwn8TODzAb8PeH3AAwNeGPDBgD8E
fCLgEbVmn01c/8+/8FmmFwX9KOhGAXcHfSrg76BHBX0q6FJBd+fI4YaguwMd
HujvQMcFui7AoUDHBbou0HOBLugPhyeCLgh0QqAPAp0J6E6gTg46E9CdgN4E
dAuWHM4IugXQMYB+AXjwtlz/UuDBAy8e+PDAq9bl8UfGqwaeNfCrgae7gut3
Cjxd4O0CXxdwyVGcvg94n8ADBf4n8Agruf6owCMEXiHwCYGXpsDhlcBLA54a
8NOA57SJ66cKPCfgPQHfCfg3wMcBHg7wb4CPAzwc0C2Djhn0y6BzBt0z6J1B
5wm6T9B7/qUPZHpB0AmCrgx0ZqAvAz0S6JNAlwQ6FtC1gJ4F9A+ghwAdBPDm
gUcP/HngWwP/GnjXwNMF3i7wdYHfCXxP4HkCLxB4gsAPBD4Z8MuAVwZ8JuA3
Aa8JdN2g8wY+Bui6QecN+m7QjYOOHPg2oBsHHTnox7VawStBZwu6W9Dbgm5T
jevjCrpN0HGCfhN0gJ25/q6gAwRdIOgBQVeWzPV9BV0Z6MxAXwY6pSkcvgk6
JdAtgV4JdC9PuT6xoHsBHQzoX0BH4c/hnqCjAF0F6CmAl3+M6ysLvHzg6QM/
H3jevly/WeB5A+8b+N7AGwYeMdQ9gDcMPGLgDwMPdTuHkwIPFXipwEcFXuMB
rm8t8BqB5wj8RuDbAf8OeHfAtwP+HfDuoL8A9BuAPgPQjwD6E0BfAtB1g84b
9N2gBwZ9MOiCQUcKulLQk4L+EPSIoEME3Rro2EC/Bnon0D+B7gl0MqCbAb0M
6CtAbwE6C+DlA08f+PnA5wZ+N/C6gQcMvGDgAwN/FPikwCMF/iLwGYHHCP0X
gIcF/CvovwD9GKAPA/R3kOX64kJ/B+j3AH0eQFe/gMNJQVcPOnvQ14NOu5Lr
lws6bdBtg14bdL+6HH4Kul/QAYP+F3SkgIcDDg46UtCVgp7UqhVcFXSJoFME
fSLo3ACvA5wOdG6gewO9m2sreCvopkBHBfop0OH4cv17QYcDuhzQ44CuQ4LD
YUHXAToP0HeATgDqnVDnBJ0A6AZALwC888McPgu8c+ChA/8ceMxQ74E6D/CY
gdcMfGbg1wLfFni2wK8Fvi3wbKEPCPQFgX4g0DcE+ohA/xDo4wB9HaCfA+j/
oR8A9AEA3TjoyEE/Dnpj0B+D7hh0qqBbBb0q6BtB7wg6R9DFgU4O9HGgpwJ9
FeiqQIcDuhzQ44B+A/QcoOMA3j/oAID/D3xx4I8Dbxz4ysBfBt4y9EkZyPUN
hj4p0DcF+qUAj7aB6z8MfVigLwv0YwF8FvpqQBwOfTSgrwb004C+DF+4vsTQ
lwH6NEB/BtD5j+H6FYPOH3T/oPcH3XgQ18cYdOOgIwf9OOiQvTg8F3TIoEsG
PTLoWkHnCrg86FpB5wr6VtBJLuFwXtBJgm4S9JKgu9Ph+iSD7g50eKC/Ax3X
B65/Mui4QNcFei7QBYFOCHAN0AWBTgj0QaAzUedwYdCZgO4E9CagW2jk+jCD
bgF0DKBfAD59E9efGfj0wK8HXj3064H+PdC3B/r7QL8f6PMDfVugjwv0b4F+
H9D/A/p+QJ8I6BsB/SKgvwD0G4A+A6BLB5066NNBzwz6ZtA1gw4WdLGghwX9
JOgpQUcJujvQ4YH+DvRaoN8C3RbofED3A3of0IeAXgR0IqBPAL0C6BSgnxH0
NwJ+NfQzgv5G0NcI+iXpcn2eoV8S9E+CvknQNwf66EB+DX1zoI8O9M+BPizQ
lwV4pNCHBfqyQD8W6OtxkOsLDX09oM8H9PeAPhHhXL9o6BMBfSOgXwT0HQjl
cGToOwB9CKD/AOjYQdcOPBzQsYOuHfTsoIvuxuHLoIsGnTToo0Fnu5/rRw06
W9Ddgt72L93m/Za4M+g2QccJ+k3QAZ7h+leDDhB0gaAHBF2ZDYdHg64MdGag
LwOdEuiWAMcBnRLolkCvBPoZ0NOAjgb0M6CnAR0N9NWCPlvQXwv6cEFfLujH
BX2aoG8T9GuC/j7Q7wf6/EBfGOgTA/1hoJ8I9BeBviLQhwL6UkA/CuhfAP0M
oI8B6N5BBw/6d9BLg34adNOgswXdLehtQZ8Jek3QaYKuD3R+oO8DPRjow0AX
Bnok0CeBLgnwJMCXAFcCPAnwJcCVWquvQj8s6I8FfbGgHxb0x4K+WNBfKYHr
pw39laDfEvRZgn490L8H8mjo1wP9e6BvD/R/gX4wwF+F/i/QDwb6wEA/ET8O
p4Z+ItBfBPqKQH+KIq5fN/SngH4V0KcC+h3s5fBr6HcA/Q+g7wHo57dx/b1B
Pw96etDRgx47iOv7DXps0GeDLhv0vaD3BZ0v6HtB7ws6X9CL+nE4HehFQT8K
ulHAHU9x/cMBdwQcEvBHwBcH/h/2FYd+atBfDfqqQR8u6MsF/bigfxP0c4I+
TtD3B/oAQf8f6BcD/WOgbwz0GYG+I9BvBPpTQL8K6FMBfQ2gzwH0NwA9POjj
QRcPOmrQVYOeGvS3oMf9Tzrc1q6Dng30baBr81nadp/8g2xk7dezeJlJGFq2
Q7nsfnEVqtFwMH5E4sPaoy49XUpTsYrBjP65gSR+9pAIst4XhgffPuvSNDUB
r+ztZ6xRJkIec0YmnnmTiS9qnZB84UrisoP91AQ+4TrpXvrN/gXYMXZV2PqH
D5Fd9gIzHZvW8RpFptsqYbqtaUy39Wz0vJWvntxBVfllWc+iH6Pbq+3rAyqq
kPzuja7TLiejd8UdFw/zCET9U0d0VCbx7YdRL5Zfcg1Gi001nALi4/Bp7fm7
Bf7kniDdS1Vxx/EY7285+d8T8dHL5rMFvrH+PtHL6UmxuGzobaU9WafxzXhL
RYHHmKmW2fb7w5v4fchEzdKPd1DggJQpevtEyOv36HTTMem4v5dJ1J78QhRo
MLKt7r7Kv3R9G5j+CPR9S5ieBfSXoLvsee6K8iSZIPw2QLpkgytG9TrXZlrc
IHEm061c4HQrQ8PfHhri5oXTYzv+cpfwQtHfg3sL/LSqn5vubfQ+gHvObvYx
TQzCfVKnvhd4p6aM767H6U1UsOf0Y40OyPi36Zag52F4/0LlLQJf+iHj1yZx
upKR9gn360y9kfySK7FmLw/jOLkb+QI/8+H8druVdgWhEye+rdeqiUefx79v
O4XkxZaKH1fumBuBzD1XRe6+lolku45uEvgqoFdMZPqOq0zf4cP42XM4fcQs
piMAvakM0xFYnIz5OOlxGm4vE7h8v5UPGraybrjAF3pceWSrg0kcXvsu4Mv1
OBukOrvUROABhmn6Xjty1BcPOepofKjRHHcNHD9Z4Pf+st9wOmamG9oyyal0
5ix73HawnLvA9/4itXeQzcoo5BA7NVH2lzm+a9LphsAj1Tz8KzHNLwVZ/lGP
DY+3QX0VhoUJ/DRnv2/TXu67g7q0Hbo4xdoHyaQPqBd4NdGMDz+W8eE1GB/+
DONXuzJ+9S/Gr95ouUvutGYC9sn6oePWkIDTI7/OEPhUiYxH7ct41FsZj/pA
aW2Yr0M43luyu/mYhiO26a8TLfAnp70dtdkvxBMPfKe8zCHqErJzrLsr8KKl
GP9ZhuM/Gz3xeKxJ1sPeax089U8FoKVuXxcLfPXw5pmlAv/18+Xax5u3b0CN
OuMoD/Z0k7OZbK9Y5Pds+SWH3VdxUPV2o2XkHKgonGZg/yEJre2zY9y0n/ew
bE1mDytbsk4YrziV4xV/b4WX68v4q/s4/upn/27j3K1j0SQNo1mOgQ9wbNU4
HYG3Zs94qn84nupzy7M/G0cEI+f76h33J3hjq3Q1+cskj8NvdTZom7qit4Nn
3B926iqat8bAUOCfd2L8UgWOXyq61t5+Hzk3aprz75muiEdH+lY/E3j42ppm
sXOvX8Y3055dzbJ1RIODwu4K/N4JG8t/jdGKxVvtll77s+42Nm8XdVCS+AXJ
HIN2G8wT8aUwncBuFvk43fTYkndqVQj0ri843uYBxnu8wXiP2oz32Nr5uX/c
8urXTrnoiN/Adpd9s/GP+j2hk+0qEegq5TkeoHXE1SU7VzxEmnueqtQbBuEL
M/Z5DNhE4n+TwY8mZ8SjOpQuGy2ZgqZ8PPlF4PlPYvy9Pxx/79E451F9dofh
7iMlKkoX3EChm+OXDif3d+d4el6Mp3f1SPcE24p0bBQ6v41lwkk0yGuMwh93
EbJhfDzgw+5gfLzvi5ZlFo/IwaseesaEB2TgU5e6D1CY3Tofr4zx2UYwPlsG
47P9U7/5P30d+mJDn2zoj93a/dBfA/ptQJ8N6DsMfYj/2/7DwN8CPtd/4nEB
Hwv4Wf+Jl7WpS9GAH4HF2GDd7GmWkvko9u3LTesyy5FC/Ac5ch2VfghA5Dou
l525ed1/wTsql1nqnngsH9+1bppb/qYIXT8ycuDBl+VoI9I9Qa6jSZrj9ch1
LGlRPeDgv+FZlbH4YwSLR6awOGQ/899qzJ+DLvU+80/gr8BPHWPnuw877+Gc
t2HnGvD04XxrbTzHfVekk/WPBkc9CiPrH7Xr1X+gsP7NWJwBumfQO8u+uRtG
9heSlR/zY3cC8TuNoXR/ga7yJfPD4H9Hutn/7L07DOnlSL4n+xcfv1Mr3r/M
b8UyPwb+65yt6jtyPuBwkw7S5HzAR7tupucD6EbyuT4Ash6T1pJzBifdPz6c
nDPoRUW5u3DOAE+9iNP7F1Q11pNzDKdezPwd5JuN+uoto+cY8HNMOX4O9F/4
zPF8QO+dyfFtAHdP4Hg1QSzeGsHp9EF3qs3xasr6IKpns+H4MKCTWcTxWL4z
voojx1cBXv53jpfSyPLqIRz/RJGd48qcXh74x1s4/knMQOnm9eaJKF41+xzx
O8jasu0ywe/MSwz9TvwUcrQ0iCZ+CtVGVlM/VdcsG0r8GuqkFBpK/BqOXhhD
/doqZLqE+EHU++mGNOIHsVqKZBbVXZYpuhF/ik9E1yQRf4o3K66n/rT32R9t
f40IxpemJTbtS/BGS+eMo/5X9fDVScSP409n1KcQP45WnzpP/Tj0K3nO8Sgc
GB9DluNjQJ+FrxyPYg/jSyhxfAnQ/d7geA5z5P/3fIZONZjqDJ9wvIVb1WKc
w5vjJ4CuyZ7jIZQw/oAPxx8Anjf/vtqBfs76JI7CBz+eG0TiKPR4sbOsEEcN
j041IXEXvr6k3onEXehVpAeNu2ZdnZgn6M8jCldcJnEa9vebTOM0tdgwKxLX
4WdGpkdIXIcXNNbSuK4yN9uOxIfI+2XJVBIfYv1v32l8WBYekkDiSTT1Y/An
Ek+isA8zaTy5c96g/iQuRXNsjk4icSkKnN1dQ4hL57eCXw9rBQe3agW/3tEK
Tj29FTwa9PPWnJ73ZSt4dOYNsc6Tx5GjWsF/k1vBbf1ZnciZw2dBzzCP08+a
tYLPBqz5GKQ08zKe96j7BzVHHxz+5NgG6Z8iZC4tGU3yC3yo/viRiHgbPE5J
g+YX0PfhHqeHTfRVlCF5Cg764FFK8hT0ObkPzVNAZ36c071a1JstIvkOVpC1
MZo1yx516tGb5js6YeoFJD9C5z6YKjk1mqOYF8o0P4K4XMTpVWU3NO8meRYq
c7/dNy3OBpdNeEzzLIhTQa8D8epeQz0RydeQQtnhCJKv4WHDM2i+BvFZAYvX
IE4DfLOawzehH40ch5NqtaI/hb4YBRyOCf0UFnA60+ss773J6UxBn5/A4ZV+
/ZZR3W8ehzOCnlCVwwdBpwS6JcD1QN+iw+F3EDd3Y3E0xM+gxwB9BuB3zTFa
S0nejbvvmZhG8m48/oPBLyHvbl48fTvJ0/HruW3NtYT+Loce0jx9aSs6zdyE
CddJvo+jLi64TvJ9ZJZyk+b7E1vRY85Vm9n5GDlnXnl22Rf0PAwtWa1A6wmZ
Lva1G70PoDlrJUJME4NQ6d5xtC5Ru36e2xA3L2RwarGUh4QX3jY+kNYxenG6
yD9MnxVhpTt2kkwQOnNQr3qDK8YxZ0xpnWQ405mA7mQk05ukc+8zhT5R0Ifo
F/c+U+hrU8v8M/S3gX4oozg8C/pouHI6xyCmcxzB6RyhL0M8h1uBnj+Cw6fm
NvamOvBQDoea0YqeEXSnWzlcCfRs0RweBDqo4xzuM5nTIUL+dZDhPhYc7lN0
xOam6Zh0dEct9dqe/EL8Vje/jVAHq3h65kf9w5uoveZKrdKPd/CmQ4G0bpYh
H5ozPSkW3dHuMX5P1mkUHnaM1tnOyWhpV5G4wvVn6Iv874noXtUqWpfL8Wy/
85JrMFaLWnU8ID4OHXulTOt4bweqeE+7nIw7dnpvOMwjEE+3a0frfifTz697
9eQOrgoZ//xZ9GP8/P2DOqFOyOvsQE8E/aS6ce8Dhf5E3zk9HfS1gT430N8G
dHMJnG4O+miYcHjEIeY/AjncofDOT6rbL+DwBf1W+kmCTngJhxecZPN6i9O7
gS7xE/c+0NE3RfOa/QvQ1V1JV9c/fIgXf1bZKtRpN/yeE3rmTSbSc63o8sLV
C0lMLaF13bdvttclkXxhzJkrP3qWYSS9ve63Nzm3TcKHHHxEzuezut37u5SS
eOBuQj+hbvyt6aiD/INsfHd4w6tlJmH4nczg10Kd+Z/md6DnAX3Pf9L1PB8Q
qFiyKR9n/bhUrTixCC+yWDbVSaoCXZsuJU+uo/MOiuXkOpK7sGC607/Rp6S9
DGwO0SxGttYu7uhGLnLTTV7x73Q9rV0v/TqyY6hmMU6acs6LPAfHanc0+nfP
Af3LS6Z/yWD6F0X3dvsXyeWir++DVvU3uIYMlropGftUoXimfwlRbql/6f+t
Y77RwjsopTh55fU2Sbj2/hTRFG8RsmP6l1JO/zLyp9OxsAM++PuBQRKdjlzD
jQdfONq/E6GtTP9iyulfDEIHhblJZ2D8ea/CYucwLJJcvWnBbhL/MP3L9jNi
/cszpn8Z52HzVNcpH6+S+tT7VfA9tO9d2/L9XypRGdO/2DH9S6//oH+JZ/qX
GUz/YsH0L2VM57KyoqXOxYnpWUZwepZyplsp53QrxkyfImHVUp8ynulQ1jEd
SjbToQxh9YLXXN85r9d77YKt76K3oRs76bbNRnFvlb8rXq5CWUwnUszpRBSn
TJZqmpSK4iw7n2xyiUYG/glH9z8icSnTffjWtdR9+HfsP9f3Xhj63aTUduXs
GJy6Z8LUQhIf5jMdx0dOx3EvtGKaJIkv296Xr/ienYQ3+vQNnUHitGCmyxjF
6TLaP1vaKUItBofPdZ1093gA1gyXlbYi5/Y2prP4wOkshugFxNvr3MDJc/Vz
l+vcQA35Z9TW+opQCtNNtGnTs4Vu4rGxj2ND8D08cLVKD0unfCTpVNu4i9jz
JKtrbOLwlI1M1xDC6RpAv+A/vKV+oT/TKczidArbmR5Bh9Mj+DDdQZsvLXUH
75i+4BKnLzBg9SBzDt9Z5tJcoP35Mp46IfRWidxdFFKfanUujJzDLG+t4vJW
P8b/38Px/2ewesRFDg+KXBU96aDZedzgOjOt3eEA9KRk0YgpZJzLGc+/6kBL
nv9s26/zB7s64xezfp/tOCQAb05VcLclcUIz4/NP5vLf563w+UtesbyLw5U+
TVb3u0TyhwVSYUs0EsPxlsMDAjeR621ZnH2Oy5ebGZ9fi+Pzp7P4O5nDoUZ8
GVah63wGHd831zTQ+QwOtXv9bAmJS5UYbz+H4+3P+nGl1vx4AMrcopbgoxaD
6pefny+s22OMh7+c4+EvMvo0LPdIGJqpqLs1UzoDGc2IltIl59hrVi9L4XCr
CsaT/8nx5GUZHz59Xks+/BXGe4/heO/HW8G/NjLe+yuO967M+O1fOX67OeOx
m3E8dvVWcDSZ9j7XBnjfxE0m6bXHrHyQzvHKozUPRMi6lTxdqRWe+c77smaP
JyTgtTv0tVPibFDlhsZO98n5c78V3nhRVbN3dzKv30bN6bK50RzPNbxxcSL5
XW6MB+7F8cAzLkScFfprlUXPapCZZY8XTZkm5UXi7eet8LrPRNgsm5gYjtzL
O795QJ4/p3t0uLAOTRhPG3E87R55OrZV2UnoXhN6bhRvg04loZvCediH8a49
Od71kAsdHml43kbHNX7orLX2QQfMaozyUv7uf6XJ4X1ljBcdxfGi1zL+c8O9
lvzn64znHMbxnNtFiPnMTzg+cyPjLW9c0JK3nMX4yUocP/ksq0ef5fDHBQvn
1A5QvYaNVvUcceEiyaelzhVa3f47v/7F5dfHGX/Ym+MPA155icMrS2+rbFDf
EYmV+3cyNhzqiQ+7zlp7sFaE/hiK94spxxMuzkt0meh8Dusvjl/bw/kc0rq0
cNxCsk4Q4/3253i/nVvBN4dNS/LbSc6lizIJ6l1J3hrywcVPWG8fGL9Xi+P3
2m433dt+SAAKP2fgN8LVGem+q/QQzslujK87urglX3eWd+SVnbNj0OjOdgFK
98LwuAMptoL/7cL4t9KMf9uP8W/HV676uU4iCdWvvXtRb8EdrHhjlC7y/hsn
vcnhpCMYP7aB48cCD/aXTEsebBrju/7m+K7QB8mJw1vDGN91Ncd3/YvXWteS
19qB8VffcvzViwzPsGX4BvRhTowas9Q5Lw4VONRo5LZ/jPFMl4WyE0XoPcu7
f2z93/NLlRm/tA/jlzownLeNVkucN/+g7NbiZWFIQ13/1fNlYfiQb/tejVUi
5MJ4pHnjWvJI3dd+Gzp3qCcyDXfNH7UjEvVQCt8prMNurfQdkmV8UVOOL2rT
Sj+ipy/V2ibF2WD1ouAV5FxEeYUjOgvn4ZhW8veTjC+6neOLXizTPnnTKQC3
XedzS3nreaRtHzVS8O+pjP/pXNeS/4lcbxXZHo3Gqkd+LJ2qloqlvm2xciRx
Ywrjcw7l+Jx6T6dmeS26hvMGrsgPks3Flz+9tIkkeUQJw2Nec3h0KONbOnF8
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
VaiDfGJ1EaiHQH1hFqs3QJ3hfwFKrYc1
                "]], {}}, 
             Method -> {
              "ShrinkWrap" -> False, "DefaultBoundaryStyle" -> Directive[
                 GrayLevel[0.3]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "RotationControl" -> "Globe"}, {
             DisplayFunction -> Identity, 
              PlotRange -> {Automatic, Automatic, All}, DisplayFunction -> 
              Identity, Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> 
              None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
                FormBox[
                 TagBox["c", HoldForm], TraditionalForm], 
                FormBox[
                 TagBox["r", HoldForm], TraditionalForm], None}, 
              AxesOrigin -> {Automatic, Automatic, Automatic}, AxesStyle -> 
              Directive[
                GrayLevel[0.65], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], BaseStyle -> Automatic, BoxRatios -> {1, 1, 0.4}, 
              BoxStyle -> GrayLevel[0, 0.35], DisplayFunction :> Identity, 
              FaceGridsStyle -> Automatic, ImageSize -> 264., Lighting -> 
              "Neutral", Method -> {"DefaultBoundaryStyle" -> Directive[
                  GrayLevel[0.3]], 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "RotationControl" -> "Globe"}, 
              PlotRange -> {{-1.6999998285714286`, 
               0.6999998285714285}, {-1.6999998285714286`, 
               0.6999998285714285}, {-0.07437497428571613, 
               0.15130529451251423`}}, PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}, 
             Method -> {"ResolveAsTriangles" -> False}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "3DMathPlot"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[(c (1 + c) r (1 + r))/4, {c, -1.7, 0.7}, {r, -1.7, \
0.7}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max23471$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`max23473$$ = 
                 0.5, CalculateUtilities`GraphicsUtilities`Private`min23470$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min23472$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max23471$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min23472$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max23473$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$6631614$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min23470$\
6631619$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max23471$\
6631620$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`min23472$\
6631621$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max23473$\
6631622$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max23471$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
max23473$$ = 0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min23472$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$6631614$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min23470$\
6631619$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max23471$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max23471$\
6631620$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min23472$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min23472$\
6631621$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max23473$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max23473$\
6631622$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    ContourPlot[
                    Rational[1, 4] $CellContext`c (
                    1 + $CellContext`c) $CellContext`r (
                    1 + $CellContext`r), {$CellContext`c, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$], 
                    (
                    Piecewise[{{-0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$], \
-1.7], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max23471$$]], 
                    (
                    Piecewise[{{-0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max23471$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$ + 
                    0.0024, 
                    CalculateUtilities`GraphicsUtilities`Private`max23471$$]],
                     0.7]}, {$CellContext`r, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min23472$$], 
                    (
                    Piecewise[{{-0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min23472$$], \
-1.7], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min23472$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max23473$$]], 
                    (
                    Piecewise[{{-0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min23472$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max23473$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min23472$$ + 
                    0.0024, 
                    CalculateUtilities`GraphicsUtilities`Private`max23473$$]],
                     0.7]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["c", TraditionalForm]], 
                    RawBoxes[
                    FormBox["r", TraditionalForm]]}, AspectRatio -> Automatic,
                     ImageSize -> 264., ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min23470$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max23471$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min23472$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max23473$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVtuO0zAQbSn3O/wBEs+\
IsqhvSECXXVZaoCTlvbOJk1i4drCdvfDz4LGbpNl2K8V0Aa3Sh1E9aY5nzpyZzrMjEST9Xq+\
nrhvzUbA4uYWnp8aMxTwXBY8/nOaSKEUFT67hs7vGhETvEgZnJHa+m8bsCTkH7c5v8H1gUcFAk2+\
aMqopUbN9CXlGI1V7JpIem5/MmIiA0Z/k+Wi0Mxy9HDoYjGUCWhPJ1U5byDyToEjSQ6AbxrxnwL+\
745Py+LlgLCQ/CsIjoh4Z71RCbGAEB4b5eN96tZm6j4lp4DHI+NJpsvIct71AaUl5OiXzHN+\
4mKxhW2CQqXLcPCi52aQgF/5tfCBCG5Pz2KTt2RLoF8YVo++\
8rP45dwM8v20LL8XJeuIwv3cMeQNNj4lapfNF6zo5RqqutdEvuLqs+bLVIC+eMvX/\
0iFVejWMV23DIPMjU+\
P12luFf90WXuTY9QtxPzTmi3OUgOuGQyW4TyIu2CKKZsoDJ9H26arcOBzGvYrvEJ0+FaxwAhNn2S+\
2Px5X4PWmEGLtZluQDq9nQEByYlyx5XaXplSPM5AQGeDFdf2yyaaiDsXjzva1pzymZoA5QjYtT2gOk\
qW6g46yr39U3Eou55oMeT/gmqREbhT9HayPNOTyeCo8IwnxgqZevTmskpqA9Jb9oAQJc+\
AUIekv87Hf3MPlSiBV+xLVJR2LA1uaU/8k+\
mWBDwlPddbcsT1Hl3fbYjaBOKlVF9AkWZ4222O632S6cUNzoPuS4FsS/\
4HebQrdpvBXN4WVPbhbE7o1oVsTujWhWxP+3zXBRoz/Sr8B/fy4Vg=="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "ContourPlot"}, {}], "\n "}]}],
    Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate forms", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 FractionBox["1", "16"], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["c", "2"], "+", "c"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r"}], "+", "1"}], ")"}], "2"]}], "+", 
               RowBox[{
                 FractionBox["1", "16"], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["c", "2"]}]}], "-", "c"}], ")"}]}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[c ((1/4 + r/4) r + c (1/4 + r/4) r), {c, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"c", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "4"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "r"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "4"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "r"}]}], ")"}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[r ((1/4 + c/4) c + (1/4 + c/4) c r), {r, c}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"r", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "4"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "c", " ", "r"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "4"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "c"}]}], ")"}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Simplification", "id" -> 
     "ExpandedForm", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Expand[(c (1 + c) r (1 + r))/4]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox[
                RowBox[{
                  SuperscriptBox["c", "2"], " ", 
                  SuperscriptBox["r", "2"]}], "4"], "+", 
               FractionBox[
                RowBox[{
                  SuperscriptBox["c", "2"], " ", "r"}], "4"], "+", 
               FractionBox[
                RowBox[{"c", " ", 
                  SuperscriptBox["r", "2"]}], "4"], "+", 
               FractionBox[
                RowBox[{"c", " ", "r"}], "4"]}], Identity], TraditionalForm]],
           "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False, False, False}, True}, 
   Typeset`aux5$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "5", "datatypes" -> "Sum", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "2.37", "parsetiming" -> "0.706", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP62331h5i85da5dd3gd73000069g86e866dd9d71d", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "9", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa62341h5i85da5dd3gd7300004f1hdihch24a8def1494138648170584556", "version" -> 
    "2.6", "inputstring" -> 
    "sum_{i=1}^{r} sum_{j=1}^{c} [ (r + 1 - i) * (c + 1 - j) ]"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 2, 18, 16, 49, 22.9683201`9.113704161267918}, "Line" -> 
    3, "SessionID" -> 33418422269014030074}, Typeset`showpods$$ = {1, 2, 3, 4,
    5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = 
   "sum_{i=1}^{r} sum_{j=1}^{c} [ (r + 1 - i) * (c + 1 - j) ]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{729., {497.3544921875, 502.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.8857457629893093`*^9},
 Background->GrayLevel[
  0],ExpressionUUID->"c7706c48-b780-40fd-acae-12bd0bd39b5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["sum_{i=1}^{r} sum_{j=1}^{c} [ ij ]", "WolframAlphaLong",
 CellChangeTimes->{{3.885745868954115*^9, 3.885745874507113*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"319dac30-9fa8-47ca-9a15-c818d29f0996"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "sum_{i=1}^{r} sum_{j=1}^{c} [ ij ]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Sum", "scanner" -> "Sum", "id" -> "Result", "position" -> 
     "100", "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Sum[Sum[i j, {j, 1, c}], {i, 1, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"i", "=", "1"}], "r"], 
                RowBox[{"(", 
                  FormBox[
                   TagBox[
                    StyleBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "c"], 
                    RowBox[{"i", " ", "j"}]}], ScriptLevel -> 0, StripOnInput -> 
                    False], HoldForm], TraditionalForm], ")"}]}], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox["1", "4"], " ", "c", " ", 
                 RowBox[{"(", 
                   RowBox[{"c", "+", "1"}], ")"}], " ", "r", " ", 
                 RowBox[{"(", 
                   RowBox[{"r", "+", "1"}], ")"}]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot3D[(c (1 + c) r (1 + r))/4, {c, -1.7, 0.7}, {r, -1.7, 0.7}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            Graphics3DBox[{
              GraphicsComplex3DBox[CompressedData["
1:eJy1nXm4zuXWx2lATim9hepokgpdxK6U0lYaJDqOyrBJkdBAxigStqKEItJg
KmRKmkzhkepQlKkiyZzqMUQyi/d9z/P9rH09330913udP97+2df+dFv7/q21
fvew1rrv30UtHq//0AkFChQ4XqhAgRP/5+emmRVPzso6kuBnx9orvz5432fZ
RZ88sVzhLgfz8axqa+r8OGNf8KyP7ri/UJeF2U2PTG3/3sE/gq85rUvOXV9M
z352bu9XcqvtDv70e3POLzGxg9ong3fpVbzBR1eMS0x7usGshj1+Dp7IalPn
lq+nJwr8+7+NwYe/V+WE6kU/TIw76e7B9Qp/l6/9S2fWqX5z6c/zye918/oa
X900MNv7s3Ft62e7f7Eo2/u/9NcHstr++H22P+9ZfxSqXyy5Mdv18+nj9xVt
1WpbPs7v6NX17Bw9w4e0eO6cimfMDj3DS+b2aLLniwmhZ/iTRz6/cOuh1qFn
+L5J/apUe+iN0DP8eLLTjAXLJ4Se4ff+kTts6dpJoWdvj55dPnr2/qBn7z96
9udFz64f9Ow87CT9YS/awZEf7fRz/zeVe55/5rTQM/zFdRXmLaj/RugZfkOL
S/pV+7xp6Bl+Z9kvb6r2+EuhZ/inDz1XcPb9b4Se4dW7fzH82pNHh569PXp2
+ejZ+4Oevf/o2Z8XPbt+0DO8ivSJntET7wt6hmNf/j2c/vA7Pw90/uHghFX9
Q8/wqcc7vdqsTO3QM3zukpGt3/7p6dAz/JWjB9c/vqF/6Ble9qTCI8ZVejH0
7O3Rs8tHz94f9Oz9R8/+vOjZ9YOe4aulT/SMPhiv0DOc9ws9w9P984/g9J/f
+XngQOPfVvT9W+gZ/vdZ42b17JAdeob/9UfNH/5VqXboGV6nbHajL6fWDT17
e/Ts8tGz9wc9e//Rsz8venb9oGd4D+kz3Z+TMV+k+3Myxrd0f07G+5juz8nw
n3R/TsbzpvtzMtF3+9ltZ+/vkJ3uz8nEPT/c/Nby7U9np/tzMnHgxmM/lPiz
V3a6P+e1T/fnPPnp/pzXn3R/zut/uj/nPW+6P+fpJ92fk4nO0id65vmYr9Ez
nPkFPcMZD9EznPcXPcPxN/oBRz/8zs9DhS6/78bt/UPP8PmDn5lxcvUXQ8/e
Hj27fPTs/UHP3n/07M+Lnl0/6Dn6KX2iZ56D9RJ6hjO/o2c48xF6hjN+omc4
7zt6huOf9A+OPvk9/edLoWdvj55dPnr2/qBn7z969udFz64f9AwfJn2iZ/rr
/gx3f4a7P8Pdn+Huz3D3Z7j7M9z92dujZ5ePnr0/6Nn7j579edGz6wc9Rz/N
n+mXj89wH5/hPj7DfXyG+/gM9/EZ7uMz3Mdnb8/vLh89e3/Qs/cfPfvzomfX
D3qG+/jM3/f1BtzXG3Bfb8B9vQH39Qbc1xtwX2/Afb3h7XlOl8/v3h/07P1H
z/686Nn1g57hvt7g7/j6Ge7rZ7ivn+G+fob7+hnu62e4r5/hvn729ujZ5fP8
3h9+9/6jZ39e9Oz6Qc9wXz/Hvsf2g3DfD8J9Pwj3/SDc94Nw3w/CfT8I9/2g
t0fPLh89e3/Qi/ef3/150bPrBz3DfT/Iv/P4hnP0DPf4BtzjG3CPb8A9vgH3
+Abc4xveHj27fPTs/UHP3n/05c/L764f9OwcPfP/Xc/OI44gXsXidfDVFq+D
97B4Hbyzxevg8y1eBx9m8Tpvj55dPnr2/qBn73+8J/a86NH1w+/Onyh1TsnS
3x5K8NP17zx5ZZWK1SZuyXaOXOf8zr9z+c75PRPP1H+PQ9LeOe0z6cf/7hW/
lik2Mfdwgp/wBstv/3u9wj9nO+d3/r+3d07/Msn3/tMuU/9dPu0zxW/979Iu
U//9747++eTvFyb35ZP/58Pnv3LBvgP54r09h5ds9Lcpq/M918p3nqzX89sN
+eKc/I487yd/H47/e3v6PcbaI5+/7/Lprz+Xj1f87nL4PdO494zJp3+uZ9o5
L3FG7s7T5+9P7Lxr2pfX98h770rsOr9i2f1rswdd80yhZ6/Isy/t+HfwkRP+
uvDssgcT/ISf1/bYqUUbb81+7pN+dz4/L689cvk78Gp1j9xUvvbG+AlfO7Lp
0K4HN2fn1Dh1RvbBvPbI5e/Aace/+7/8LZMeMvlhpuf9T/0tkz4z+Xkmu2Ty
///UnzPZK5M/Z7Jjpvcik/9n8ttM9s3k/5n8JNP7lcnfMr13md6jTP52dODc
RWfffyif/5RsWfuFgy8cyOeHcNq3/u3jsn3OXZhdxfKJlTRf1z2j1enzN+8N
Xr/3t92v7TEz2iNnoNZRtIcXe23qwbO2vpfdZtveFWOK5eUlP/hhy+z5pd4J
HvvaQSdOKHDf6Oxcy1cenpZab1Qve8G0pUt3BG+/qN+tr7V9LZFrebfFh1Pr
QNrDf912tPa8mi8nOq+oljXkkt9CToVuEz4dP2FicNo3XHf3wYlzxySmWD50
gdZLm8t1rF76203B//HcLe2z7/wg2iOn4PbUOpb28Gq3lruz0+qJicpTz3v2
i4brQk5dyYHTvqraj7J86yfqT4k5Z2XNbLsk+Ll6rlGWNzysdTXt4XX0vJu+
KzT49ddmh5yq0jOc9gulz3o10/O5Z05P2Ssna/TgQl0WBF8tu9MeOTWPpuxF
e/j78odefa7svvvsZSHnYfkhnPZXyN9WWb74evnz0fOeHFxh/uZ84x7c3yPe
L9bvq2e/UK/bifPiPYL/NOjUS5+c9XG8F/Dd2sfxXsC7Deo8f/RFb4f/w3Mm
j/jbq8uHhP/DWzdP7R/xZ/jpJy64YcmMvuG38G+qFVk9+6xXwg/hn2nfih/C
z+48/fRi34wMf4OfKT7K8qGfSA7+E/sb/V38JOoUTkj1E7vDKz6Yei7sHvqR
HrAv/AXpbZXlT09cltJzq5fKldtcYX3wbbIL9o34jeyIfdmHjXpgf5nvmk4O
+8Kf+ufa9x+d+3bYF95P+3fsC1/2RcEhF7d4OewLT55W7I7epXqHfeHbj6Xi
MNgXfvN9nx+rtbJj2Bf+xM51jxXK7hP2hQ9X/Af7wutMbZjz61kDwr7wWuKj
LA87WHKwL/wR/V3sCy+lfmJfeP8Cnf/9XNgXfnKxlB6wL3yD9LbK8rYjpGfs
C+8ju2Bf+ATZEfuynz7YYfIz//z00bAvvNFpH/Wus6hl2Bd+jeI22Bd+25Iq
RbPq1g/7wq974dtzph2/KewLv0LxTOwb8dczis5dsjwr7AtvOajuj59eXTPs
Cz+uOCr2hT9/1vA1pXPrhH0jnyw+yvK/ByQH+4Ye9HexL/we9RP7wtcfTD0X
9oU3kB6wL7yh9LbK8sW1pGfsC28uu2DfyHd1TNkx/f1NJl7v8MnJo2eMTqS/
v8lEy8trbd4679VE+vubTNRSvC79/U0m5jd96K77fuubSH9/k4mb999041cv
dU6kv7/JRNbMVBw7/f1NJi64r8ToG8a1yk5/f5OJS19a1rPE3i7ZUyy/3ED5
iPT3N/k/ej6lYeHavbLT399kYp34KMs715Wc9Pc3mSilv5v+/iYTO5qm+pn+
/iYTl8xOPVf6+5tMPCg9pL+/ycQK6W2V5anrS8/p728y0U52SX9/k4lxsiP2
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
Wr132HWn5LxdMD2PhpxPFeeJPCn7YMWFsO8uyfnE9r/o5xvFnbBvb8nZqjgV
9r1f/87zLCNuuHXaO7lr4zwp9l2uv7/X4lctJedD+QP2fVNyzlf8Dft+Kzm/
PJAev+I52N9hX+SMUDwQ+64kv2bxK/qzXutD7PuG5LRVfBL7IudTi189JDnM
d9iX/jRSvBT7IudHy6MhZ5feO+yKnKOK32KX9bduX1pryNZ8+ZQSyr8Mtjjw
BrUvrvgz+sf+9TQ+o/9SktPD8lwbJedGxcPRP3L6aZ2G/ktKTmHLc9GfGxSf
R/9HJKeV1oHoHznHLA5Mf/YrX4D+6c8ezUfoHzmTLM+FnMeVv0D/yNmi9yLy
0aZ/7LJbcX4/Z7EzAz+eIf5/QP/f2x/NwNd4f8Qz5X38PEjsv4wznnBOZKTF
veFtlW+lPXlAbw+nPeOJ9xM58GrKQ9F+l+mT9uRlrrbzL8TzvT0/S1k+mp/D
lWdBzii9jyfWSM/LHDa7IDf8TXqI/M15bR774ZuD+fRfs+UbD35a9FA+P2lW
eMrRiv84kI/X63TgnaJ9fsxn3+/X/TWpz8b9+fzq6dJT//jkhp/yjecvLr5m
UZ+z8/pPf86ounzNByM35Wvv/c/0d//j5/oP+5lJD5n6j7963hO/d875GTj1
JJy7gFNHRL0+nPox6rzh1A1SHwynXpS60hhXVF9KPaK3p47N5VP/5P2hbsb7
T72FPy/vbSb9YB/qauKeQXHqqdAPnDo69AOnfhL9wKmbRT9w6qXRj7dHPy4f
/Xh/4p4X6z/68edlnCpp4wz+xvxM/Qmc+Zn6E/yQ9pXsnhPaUxeRZXlD6pfg
tKd+CbvQvp/d50N76tmwF+2pb4RHHlB1etiR9rXS7r9KRnvqXadZnpG4K5z2
1D9jd9pTDw+nPfXw4yz/iHy4y8dPvP9R52r9x39cP3DXD37l+oe7/uO+G7Mv
3O3Le+r+Bnd/i/tKOJ8of4O7v+G3sT9TXRD+Cee8M34YeTrVieFvcOok8Ss4
9bH4D5y6aPwETj08/gDnHAR29/bY1+VjR+8P9vL+Yxd/XvTveot6HXHqmtAz
63HqzeCsx6k3Q/+05/w4POJbqi/CLrSnXjHuBVZ76hWxF+2pX4XTnvrVZy2P
ST0zPOqaVSeMfeMc8Mz0e/BoT307dqc95x3gce5Q5wjwB9pz/gVOe86/4Ccu
H+7y8R/vP9z7j1+5fuCuH/zN9Q93/S+1PCn2jXu+zL74p/sb3P0Nv6U9dXdw
2lN3h99G3pC6RPknnHsJ8EM49bH4G5y6aPwKTj183AMrzjkI/ATO+Zc45yPO
uSfs7u3jHkOTjx29P9jL+49d/HnRv+st7qsSp44RPbP/pr4Uzv6b+lL0T/sF
du8l7bnnAbvQnvpkOO2pT8ZetKdeHU576tWxI+05vwCnPecXsC/tOc8Cpz3n
WaZZXpXzTXDac74Jfwj92P2xtOe82zjLtyIf7vLxH+8/3PuPX7l+4K4f/M31
D3f944duX7jbF/90f4O7v+G3tKfOFk576mzxW+JDVc1v4XXNP+Fnmh/Ca5m/
xTly8yv4OvMfeFnzE/hQ8wdvj31dPnb0/mAv7z928edF/6439AyvY3qOfHIy
fdwg3lbHxm3af2LjBu3PtfE82tu4EfXRNs7TfrCNG7R/xMZ/2h+wcYP2jWxe
oH1dGzdoX8rmC9r/aeNG9MfmEdrPsnEj7hGx+cXlw10+/uP9h3v/8SvXD9z1
E+ejTP9w1z9+6PaFu33xT/c3uPsbfkv7OTZuuL/Fd2QUD15o62R4VVsPR371
hPR1L7yUrW/h99g6Fs45x/i+jHiOrUvh42396e3j+zImP74vY/2J78tY/+Oc
jz1vfF/G9BbflxG/xtZ1xNc5PwInvv6+7RNpz71JcNqvtv0j7Tl/FPcHqX03
21fSnvNocNpzHg070p7ziXDaN7B9KO05rwqn/YO2P6U955fjngLOQdq+lfac
Z4fT/hbbz7r8OEdt8vEf7z/c+49fuX7grh/8zfUPd/3jh27fOF9n9sU/3d/g
7m/4Le05RwOn/Xe27yb/c4XF5eAPW/wN/oLF2eAbLJ4Gb2hxM/gKi4/Bu1sc
LPLAFu/y9nEPucmPc8XWn7iH3Pof95Db88Z5OdNb3ENOntriSFFPZHFR4vfk
idB/K8tHo3/kcK4QTvttFpem/QiLf9K+j8WraV/L4p+0b25xbNrXt/gn7dtZ
fJv2X1v8k/YTLO5N+9oW/6R9Z4uHu3y4y8dPvP9w7z/+4/qBu37wK9c/3PW/
1PJ02Bfu9sUP3a/g7lf4J+2r2T3tnm+NfBDnjz0fJD7B80HcF9LR8kHcM+H5
IPErPR8kftjzQdY+8kEmP/JB1p/IB1n/Ix9kzxv5INMP+nTOeTbyR5xr4/wM
nHM01OXDqc+n3hdO3e9Y1aXBJ6mekPokOHVK1E94Povze8S9v1Ten3Ni8G9V
j8G5FPgw1VlR7w6PcwHqP5x6497qP5w6RuqQ4NRHUX8Ap66DPDfx5DmqJ+Gc
IXG5UjrPwnPBOd/HOSh4a9UpcX4GvkDnjKjLh3+tulPqueG7VPdIHTC8reql
z9Q6Hv6y6i2pO4RTn0k9E5y6r03SD7yG6lXQD3Ez6naoP4ZTp40/EJfgnCl6
g3OeEX+Az1cdIP4Q9d2q78Ufor32ifgDvITqSPEHOPVp+AOcuhqel/3+KtU7
8Vzsmzj3ynPF+S3VU+FncM7r8bxwznnxvPB7rD4WPlJ6pr4cTr36k9IDvLjq
YKmHg9+q+jr0AKcuCD2wf+F8KPXrcOrh0U+sn1UfhX7g16tuDf3AO6teEf3A
qVNFP3DOxaAfeFXVl6IfOHX4XaUf+Gmq70U/cV5cdYPoB95O9U7oh3Ua517R
D5w6f8YTX4/F+V5x6gPj3Kk45ysZT+DdVQ/MeALnvA/jSdRhyZ8ZT+CcL6Ae
Hc77zngCn6N6Zupf4X9o/GScgS9T/ST6dD0wnjAPcq6B+jCfd2LeNE7dmM+n
1I05jzoW49SHOY/vocr+rW297fUM8X2RDO1ZR11veWTXD/VbLn+DyaGOC//0
/lOPBT9JdVnUIbk+qStyTh2Sy6euyDn1T97/gapPck79k+uB+iTnnBunn5wf
v0nzGfwEzeOcc4Nz3u18+T+8m8b5+vJzeHuNb83UD9cP59V5Ls6tc84ZvkTv
C+dj4Q10TpZzlXDeR87jxT3Ten+v1nsE5zwX53/gnAPao3E87mPTOP+M6tfh
4zXOUKcOp159uPwKzji20epzqJc4xep8uIeB895wzn1znhbOeeFs2TfOPWjd
xblT2nP+lPNsUX+i/WB/q2PhvMyvVq/STn/3V6tLYZ1JPTf8T9WftJCf0M+P
pbcSVn9CHTLjGOtS7gnhXD18rOYpzuvCx+h8NOcA4Z00D3JOCV5D8ynnKODM
v6/LvnEOW/P4Bquj4N6SIlaPwf0Yla2OgvsWcqxegnP6jazOgfO/k6yeYdee
VByPc4Zwzhu+bvUJLYjnWx0C6+TdVj/AuYlSlven3ht7sR7mPhbsBb9B6y7s
BW+idRr2gnO+FXvBWR9yzgReUedxqIOHU+e/0fLX3A9TxPLg3ENSxfLXnBPM
sTw19xj0tXw05+g59856bavWjY0tH825bM5Vwlnn97X8L+fIdljelvMpKyw/
SzyH8wyRL9Y4WdLys9ThY1/2BdyTg33h3OPBewI/V+tS7A5/XfsU7ATnvDn+
AEcPnHuEc/7xZ43n8IXS80D5CXyH9lmcz4FzTodzHXDOd3DeAM65g42W35xj
fhV5NPMr+AzzK7j7FXyM+RX7F+5VaGz5ynvMr+Azza/gNc2v4JxXWmn5O865
cC6F/jBfl7T8Hecy8Cv2U9ybhF/BudclvpNi5zTxK7ifx4Rz/wB+Bb9Z8QTG
mcivKS7BuTh4e52zi+9uiHM+i/En8nGKk8T3NcR367zJBstzrbd5BL7D5hF4
3G9j+Sw/5wjnPg38h/0d92k0trwV9zNMsfzUQeWP8Cs458FHWb6Jc8S5llfi
/OlOywdxrm2l5X04D4W/0f/ftZ4saXkfzu/gb9iN+7XwNzjrGfwKPlxxNvwH
zn0F+A98l+J4+A98meJ++An8COe2uI9UnPNERSwPwjqzsuU1uKcox/IX3G+T
a3kK7kVpZPkI7tOYbHmH5XrfObcP5/z+SMsjMD70sXwB54Xb10zPC5zXMtWf
XRb/53wi9kJP3LOEveC/K66LveDcC4G94Jw3Z10B5xzrfs5V2X6H8zy+jytp
+QXO9WTa92Xa32XaP2baJ/5/72fpR6b7AGMfqvh/nB8UXzSu+3ktb307/BB+
u86bxDlB8fILdjZv8vNbMf4EV/6C+Ri+av6X576bzDsPCC+j9nHuT7zNtCvP
v3jYsBiP4AuV74jzfcT5rh/6QI9574dd4Vu4dzSDn6Af9LdWeSj0EOfVTk3l
v+JcpPho5d3inKP4G+JxbpH78ZRHi/Nl7KO5N9XyF0vs3jl4+9ZF/zF47dTo
f9xDZvfcRp7ikms7X3DKgHgu+M9fpfLF2Bd+b8tOhYdc1z/s6+csom6P+xt6
PvbG9opD8+qZxFurPfaFr6m9J+uBRT1DP/CPlL/GvvEdqhXD3+mQMzz0Bn9G
z4t94XfJH9Cb51PQG7yx3QMMv0J1EegB3lr1GDyvc54r9suSQ//jOy36u9g9
6sztvrL4jsdXT+1bdu2AWK/GfSeaL+Bxnl714XUtH9TW7jGLfM3pKyZvKPpg
yIUPPz393nL4gxOeX7j/zXahn6gn1/4XHvkp1UFttrzSTrvHDD6m+5mzLyra
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
A9rn4+TdyT9oX4PcqEux73XCiTP8NyXvnLM=
               "], {{{
                  EdgeForm[], 
                  Directive[
                   Specularity[
                    GrayLevel[1], 3], 
                   RGBColor[0.880722, 0.611041, 0.142051], Lighting -> 
                   "Neutral"], 
                  GraphicsGroup3DBox[
                   TagBox[{
                    Polygon3DBox[CompressedData["
1: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
weMujfQn/+Ne+Gvs5wezNEJ5zs1ou9Jnj2h9ob7N6HNnybqrXvB8k8aT7p4P
V02trxfD1eFb6TOz5Nrbqtx1iuNpuwT/xtvg6ly/apHj1IjWIMpzpN9foE8l
zukRPI5D6HM0faoX2l65ka6/D32uDX5Wg+S/M9c0pDWWp/bVL/Ibl6b2t7MS
/49Z8L7Yvsqdr56uNZW5jiGtoTxMY72H4mLuekpN+fDc+WEr2kO4n4OK3K1V
sPa7Ga6N/aQiN1GOshR7Dc4ZEPx/VZusQ5/6RQ4yKPj33gmfiL1RkbMMDq6F
joYPxL5fka8pd1mG/Rj5YPpMlzbD3jF4bgyA2wWPe9/cOY3W3UH0r8p1KmfO
MS+jz4PYb4XbwPeXrP93KXRyR/j86JqLcq768OmZY07l4JxXWmhZobuk6eZk
rjspf3yhGAvVfp/IXEtRjevxzPUQ5bBzC7+hWubSzLUg5YmL4FNKzpHnZa4L
KZ/V/NY83z312p0B7wpPzVx7US6svOQJeBfFoNx1q/K0E1L7+WHMgbdy18WO
o30ycw1HufOszPU05bnPZq6bKf9dl7mWIk3yQRFnpUk+LXyX4snKQpdq7r2X
uSYjPfNmoY3lG1/LrKWlqQ8tNHkJ/iRzzUQ67fPM9RlpqpmZa3qqf6/IrM+l
0zcUcVYxZ1Pmmow055bMdRvp0m1FrJcO3Ji5ViMNpjX3CPxvYt/2FFwmtV/T
nC+r2JK6xng5fbqlrn1dCt+Yup7TEe6cumbYNrHvkA/5JrFPGgN/BZ+Vue59
SGotfA/8JfZr9fvhNolr3KrbXJS4Nv46fAK2aZntquuoBl4Vbkmf/4KcJHNA
cTzzPah++Xzm+1Stbkbm61ejz+rMNTFpTvnFsfC3idfTJPiXxGtSa7Mi59aG
n4X3Th0TnoPLpV6vs+H9Uq9R5RcHpo4Dz8h/Kg7zPw7lemVy+/W7sX+e2A/K
X5VP7TOUf/2VOI6Nh3ck9rXK6dYm9h/PwxVSx5Mh8IbEvnkUvC1xDjES3po4
PoyGt8OrMudK8mOq/WyEm2mNBGtF6eXWwWtEOU6H4DmgHKdt8JpSTtS+iCnK
a44J/r/Khf/MnBtKo44K9v+qP/yduV6nfOHK4GeifKonx4sl5z4tgue85st1
RYyQL78q+Jkrx7km+Jkrr+la+Ez57O7Bz1/5Uefg56M86LgiNimH2pm51qf8
bpfg2p1ymarBz1aaqnxwHU+5T9lCX0nPliv0knR7meD6pHKZ/Tj6lpw37RVc
J1SulBT6TTr9yOCxUP71Y+b8Vxr498y5rbRNFlxXVA71c+bcWTnUr5lzXmny
7zLXWpUT7VboQOn9HZnzbmn7rwo/rP24+kXsVoxuWORH0h3nROdIqlOpXrUO
++nYHwleX1pnjaNr5ap9nRK9VlXvGhscx1VHujtY26h2dGZ0DV31LtVvtmA/
n2u2iK6hq55zbnQOplpZ8+i6vGqPjwfX8FXLVw1vE3yu4kJwLV01ddXYNsBn
YX+18Hvyk6cEr1nVAB8Ijn3K5e8Ljq33wY2D15FqhnWC151qOGdy3FdyLatm
8BpRTn1isC9SvfHkYH+lOuR5wb5ROXuz6JqWaltNg32FcvYxmevPqqN+mTlf
UN4wKnONWjWur+F2Jee/U7m/SqzLf3RfmevbqomNzbyXp7rr6Mw1cNXBvuT/
npZZJ++SOUb/wfmXRPtN7TGNDM5zv6VdED3m8hNjonWP8s3O0fVb7Z8OL8b9
G62z6FxL2n5ocB79Ne2SaA0t7b0sWjtKB9aK9olf6plFaynppXnR805+a0X0
vUqj3hBdf9ZeZF24YebrT+P4iP/1q9Zr4YukJaYH76VqbrwWrXGlhx+KXovK
padG58nKwR8N3p+VH5sencdKj10aHau0VzgtOudUfrG5qL1IQw6OrkUoj2tQ
1E6/0/WK2ot06cZCZ2q/8unonEq556TgvaGfaSdH+wzVFCZFr1Hl51OC93a1
viZG11JUZ+jP58OUT/D5yeicTXncjOh8THlZV/pE+gylvSt4P0v31jN6z1F7
KPWKuaFxvz261qT8tFf0noL2Ga+K3iPQ3mK/6HxG2nVcsQZ/oO0XvEemMb0t
Wkcop+0bvdcoXXRZtA7QXm2f6L1S7YfeGp0HKmfsGxzfpR2uiNYH2l/uGr1f
oD36W6K1l/T/NdH7FNrr7xi9f6E95UHRNR/lxQOia0HKlwdG13+UR/eOrvdp
v3VG8L68/MasooamvPUx5VSJ9/fPi97/03zrEf2egPZMu0fvceg9hHuC9we/
p20XrWm09z0nug4iDTwweE9HGmFC8F7hj7T9o2tZqlHcX/ixn+RPovcdtNb6
B+85Kv7Pjd7jUC33juganWoR0znKc8+B9uboPWztQd8ZXUNRTena6HcMpGdG
RtfWVAMZFb23pLpBh+g9de2b3xS956196ncKza969fjoOp5y4dHRdSLVdu6K
ru+oJjOFI+d+JnPvQ6LrnKpv3BtdD1T9qn30fr/26y+I3jfV/U+IrqepPnxl
9PsHesdgbVGrVG4yPLpmqPpMp+h3QfTuxNXR+YH03tDouqVqMp9Fv3ei/Oj9
6DqtcpYm0fsveuYjon2wakBromu2yn3ejq7xKi+7P7puolrfluh3TZQ3tY5+
p0H7+22j33vQuwTjomO76oFjo+vGqvXdHV1TU62sKXxeZp/QKnr/Xu8kXBT9
Do3epTkjel9Gc6ZbdD4kjfpjca7i1+eFn1Sud3r0npTW6bDo3EI1rPXRtV/l
uY2i93T03s7l0e9w6B2MltHvoOh9kouj30VQ7nNh9Psoer+lYfTeluZ8l+jc
Qvr5f2M3k10=
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
                    "]], 
                    
                    Polygon3DBox[{{1284, 885, 874, 875, 901, 1446}, {1179, 
                    1178, 1438, 883, 889, 1440}}]}, 
                    Annotation[#, "Charting`Private`Tag$7044416#1"]& ]]}, {}, {
                  EdgeForm[], 
                  Opacity[0.25], 
                  GraphicsGroup3DBox[{
                    Polygon3DBox[CompressedData["
1:eJwtkskuRFEQhuvc7r4hMfYaYYmEJxAWNjaChSXatMRCRCJiIzyALTsi7MQr
8ACGB6BNbZ6a7jbFV6la/Peve6rq1PCfptHpgalIRLpBAqzwqYX7OaxIiSzz
/xWLtASRI85b4c+kSA32Kr5v7GPsXbgAGrD34CRxh9gR3EvcKXYXd5bwXWMX
4RnOG/HPw8+cvYNq9YEXcALewBO4ACPEVcF9wfx5j7nwmKzn3YjV6KHvWXIS
zDGInaF+Gnsd1ONfw/cnNm8ld/76XAF/Cszh34YnYd3RMDwBzrDH4Vf4FuTA
h9j/I/jingOfUWfS2e7Bp/dJKRlL2D47I8vT/HP3a9yd5xXAFWj2/bf47EWf
U3NL3seQ99YX2T1vXquMGRbxFWLTLuv6Ssq0y3PWgb+a4AV4J2m1tMeC96G6
/MSm2QZ5m6Au2D4ffO+683L+l/RdxJanvV+K7TzD+T5ciq3ebdLewyh2MTZ9
NTbj7yrnPZR8znP/z/n+64Pp2BBMP9Xx2zV4dV22qJcO9gZ05qzrmPeetfcp
17c9WIze0xZsh3f+rtoie8/a673vRHv9B/REgFE=
                    "], VertexColors -> None], 
                    Polygon3DBox[CompressedData["
1:eJwtkrsuRFEUhvex95kgIhOdwiQqGuMJhFYjMwql+6URFFNIFCQjPIDWZBIh
QidegRcQDyDu107MjcT3Z+3iP2et/a/bXv/un1+fXGtzzuVBAN98BhPnBoBL
nStCznjnFLPH/w1+hP8WOIKvZ5ybx76GrwSD7BJn43AFEjuoNQSmOauQ0wdf
xP/NWL8b/FHimvjDnDfxO/mvEX/gLX4Ofgp+AX8R3HF2FmwmzabYU2onIKv7
kN8i/jK1XqpxGPku/F7wR34VPxd5zdYgJ0/BK/wyfAHuA/sRzMb5N/hvesut
E/MM9wKawXpue+uhXppJs+k+KfY5MV/EvoJWsDvvetu5dtGT2l13ODvGvgjW
+wnUgu1M98nhV73tQ7u7ifX28R+w78FPMH0mvM3YCKandpONfC1jukif9tS0
Vu47WI56S0/tRLuR5m2JnYnzqWldBiepabSC3e1MuzHyPp311xyl+FZCYjl6
L7eR06y6u7ToS2wH0lhaa0bNKu21uzewFN/YqrcaqiW957ztTLsTcvG9ifsH
/OZlIA==
                    "], VertexColors -> None], 
                    
                    Polygon3DBox[{{1298, 284, 283, 871, 1622}, {1283, 274, 
                    293, 876, 1609}, {915, 14, 864, 865, 1436}, {927, 257, 
                    288, 880, 1788}, {1447, 886, 251, 17, 902}, {1272, 196, 
                    558, 866, 1273}, {1786, 575, 209, 297, 1292}, {1783, 893, 
                    299, 209, 1193}, {1155, 259, 271, 829, 1785}, {1787, 302, 
                    17, 254, 1289}}, VertexColors -> None]}]}, {}, {}}, {{
                  GrayLevel[0], 
                  
                  Line3DBox[{246, 1, 242, 227, 903, 16, 1277, 281, 268, 895, 
                   1289, 254, 269, 251, 886, 1285, 266, 250, 303, 2, 870, 234,
                    246}, VertexColors -> None], 
                  Line3DBox[CompressedData["
1:eJwl0l1L02EYx/F7tbnaLIpqS09kJoJRQUEU2ISaT3MzwSDBzjor6IkOahFR
gdQr0JMOstFeQZ4ZHXgq6Elpjx4rvoFgY35uPPjy/V03//2v67r/K9x9NP0w
EUJYwEXhIJ/kU6inQnjlICfncRqLzl4465bbnu3BJ3UdF+RvXOQ1XkdV3uU7
3OQW7stdyRBqPMBn8V4eTe7PcZtn0JCf8hK3uaBnL956R9YcZ+Q+vFSn1f3y
IXz3/PUDIdzAD7nEGzzMI9iMvfgnj/E4fsll/s0TXMEfucp/eZJv4p88xVv8
QN9z+p1AQ/85dYd8DCl8dFZzdlxO44MdVvzuNX/hJ/wYn+VbPB9n5BLeyf38
nPOcwz35v/fN8g5voyKv8jX+yss4H7+LfkfxRp0xR5Bb9CzOqM6qm3EXPhL3
4864O5eRjXfDmTgTl3A43mu8Yx7iYtxLHuQOvspX4u7yZTZyuJTY/1/tAdki
PJE=
                   "], VertexColors -> None], 
                  
                  Line3DBox[{336, 14, 871, 283, 284, 1444, 896, 285, 286, 
                   1439, 888, 288, 257, 927, 30, 1271, 229, 247, 15, 243, 235,
                    336}, VertexColors -> None], 
                  
                  Line3DBox[{1155, 196, 1274, 231, 248, 211, 244, 236, 576, 
                   212, 876, 293, 274, 1445, 899, 260, 258, 1442, 891, 271, 
                   259, 1155}, VertexColors -> None], 
                  
                  Line3DBox[{592, 224, 869, 233, 249, 225, 245, 237, 1194, 
                   210, 1280, 295, 296, 900, 1292, 297, 298, 299, 893, 1288, 
                   301, 265, 592}, VertexColors -> None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{931, 1466, 1202, 929, 1467, 1203, 933, 1468, 632,
                    935, 1469, 1204, 937, 1470, 1314, 1640, 939, 1471, 1205, 
                   941, 1472, 638, 943, 1473, 1206, 945, 1474, 641, 947, 1475,
                    1207, 949, 1476, 644, 951, 1477, 1208, 953, 1478, 1321, 
                   1651, 955, 1479, 1209, 957}, VertexColors -> None], 
                  
                  Line3DBox[{956, 1652, 1322, 954, 1650, 1649, 1320, 952, 
                   1648, 1319, 950, 1647, 1646, 1318, 948, 1645, 1317, 946, 
                   1644, 640, 944, 1643, 1316, 942, 1642, 637, 940, 1641, 
                   1315, 938, 1639, 1638, 1313, 936, 1637, 1312, 934, 1636, 
                   631, 932, 1635, 1311, 928, 1634, 1310, 930}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{959, 1323, 1653, 958, 1480, 1210, 960, 1481, 
                   1324, 1654, 961, 653, 962, 1482, 1325, 1655, 963, 656, 964,
                    1483, 1326, 1656, 965, 659, 966, 1484, 1327, 1657, 967, 
                   662, 968, 1485, 1328, 1658, 969, 665, 970, 1486, 1329, 
                   1659, 971, 668, 972}, VertexColors -> None], 
                  
                  Line3DBox[{976, 1487, 1211, 974, 1488, 1212, 978, 1490, 
                   1491, 1213, 980, 1492, 1214, 982, 1493, 675, 984, 1494, 
                   1215, 986, 1496, 1497, 1216, 988, 1498, 1217, 990, 1500, 
                   1501, 1218, 992, 1502, 1219, 994, 1503, 684, 996, 1504, 
                   1220, 998, 1505, 687, 1000, 1506, 1221, 1002}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1001, 1673, 1340, 999, 1672, 686, 997, 1671, 
                   1339, 995, 1670, 683, 993, 1669, 1338, 991, 1668, 1337, 
                   1499, 989, 1667, 1336, 987, 1666, 1335, 1495, 985, 1665, 
                   1334, 983, 1664, 674, 981, 1663, 1333, 979, 1662, 1332, 
                   1489, 977, 1661, 1331, 973, 1660, 1330, 975}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1004, 1341, 1674, 1003, 1507, 1222, 1005, 1508, 
                   1342, 1675, 1006, 693, 1007, 1509, 1343, 1676, 1008, 696, 
                   1009, 1510, 1344, 1677, 1010, 1511, 1223, 1011, 1512, 1345,
                    1678, 1012, 702, 1013, 1513, 1346, 1679, 1014, 705, 1015, 
                   1514, 1347, 1680, 1016, 708, 1017}, VertexColors -> None], 
                  
                  Line3DBox[{1021, 1515, 1224, 1019, 1516, 1225, 1023, 1518, 
                   712, 1025, 1519, 1226, 1027, 1520, 1353, 1687, 1029, 1521, 
                   1227, 1031, 1522, 718, 1033, 1523, 1228, 1035, 1524, 721, 
                   1037, 1525, 1229, 1039, 1526, 724, 1041, 1527, 1230, 1043, 
                   1528, 1359, 1697, 1045, 1529, 1231, 1047}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1046, 1698, 1360, 1044, 1696, 1695, 1358, 1042, 
                   1694, 1357, 1040, 1693, 723, 1038, 1692, 1356, 1036, 1691, 
                   720, 1034, 1690, 1355, 1032, 1689, 717, 1030, 1688, 1354, 
                   1028, 1686, 1685, 1352, 1026, 1684, 1351, 1024, 1683, 1350,
                    1517, 1022, 1682, 1349, 1018, 1681, 1348, 1020}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1049, 1361, 1699, 1048, 1530, 1232, 1050, 1531, 
                   1362, 1700, 1051, 1363, 1701, 1052, 1532, 1364, 1702, 1053,
                    1365, 1703, 1054, 1533, 1366, 1704, 1055, 739, 1056, 1534,
                    1367, 1705, 1057, 1368, 1706, 1058, 1535, 1369, 1707, 
                   1059, 1370, 1708, 1060, 1536, 1371, 1709, 1061, 1372, 1710,
                    1062}, VertexColors -> None], 
                  
                  Line3DBox[{1066, 1537, 1233, 1064, 1538, 1234, 1068, 1540, 
                   1541, 1235, 1070, 1542, 1236, 1072, 1543, 1378, 1717, 1074,
                    1544, 1237, 1076, 1545, 1546, 1238, 1078, 1547, 1239, 
                   1080, 1548, 761, 1082, 1549, 1240, 1084, 1550, 764, 1086, 
                   1551, 1241, 1088, 1552, 1384, 1727, 1090, 1553, 1242, 
                   1092}, VertexColors -> None], 
                  
                  Line3DBox[{1091, 1728, 1385, 1089, 1726, 1725, 1383, 1087, 
                   1724, 1382, 1085, 1723, 763, 1083, 1722, 1381, 1081, 1721, 
                   760, 1079, 1720, 1380, 1077, 1719, 757, 1075, 1718, 1379, 
                   1073, 1716, 1715, 1377, 1071, 1714, 1376, 1069, 1713, 1375,
                    1539, 1067, 1712, 1374, 1063, 1711, 1373, 1065}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1094, 1386, 1729, 1093, 1554, 1243, 1095, 1555, 
                   1387, 1730, 1096, 1388, 1731, 1097, 1556, 1389, 1732, 1098,
                    1390, 1733, 1099, 1557, 1391, 1734, 1100, 1558, 1244, 
                   1101, 1559, 1392, 1735, 1102, 782, 1103, 1560, 1393, 1736, 
                   1104, 1394, 1737, 1105, 1561, 1395, 1738, 1106, 1396, 1739,
                    1107}, VertexColors -> None], 
                  
                  Line3DBox[{1111, 1562, 1245, 1109, 1563, 1246, 1113, 1565, 
                   1566, 1247, 1115, 1567, 1248, 1117, 1568, 1402, 1746, 1119,
                    1569, 1249, 1121, 1571, 1572, 1250, 1123, 1573, 1251, 
                   1125, 1575, 801, 1127, 1576, 1252, 1129, 1577, 804, 1131, 
                   1578, 1253, 1133, 1579, 1410, 1756, 1135, 1580, 1254, 
                   1137}, VertexColors -> None], 
                  
                  Line3DBox[{1136, 1757, 1411, 1134, 1755, 1754, 1409, 1132, 
                   1753, 1408, 1130, 1752, 803, 1128, 1751, 1407, 1126, 1750, 
                   1406, 1574, 1124, 1749, 1405, 1122, 1748, 1404, 1570, 1120,
                    1747, 1403, 1118, 1745, 1744, 1401, 1116, 1743, 1400, 
                   1114, 1742, 1399, 1564, 1112, 1741, 1398, 1108, 1740, 1397,
                    1110}, VertexColors -> None], 
                  
                  Line3DBox[{1139, 1412, 1758, 1138, 1581, 1255, 1140, 1582, 
                   1413, 1759, 1141, 813, 1142, 1583, 1414, 1760, 1143, 816, 
                   1144, 1584, 1415, 1761, 1145, 1585, 1256, 1146, 1586, 1416,
                    1762, 1147, 822, 1148, 1587, 1417, 1763, 1149, 825, 1150, 
                   1588, 1418, 1764, 1151, 1419, 1765, 1152}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1180, 1791, 1438, 1178, 1790, 881, 1176, 1777, 
                   1430, 1174, 1776, 1429, 1604, 1172, 1775, 1428, 1170, 1774,
                    1427, 1600, 1168, 1773, 1426, 1166, 1772, 1425, 1596, 
                   1164, 1771, 1424, 1162, 1770, 1769, 1423, 1160, 1768, 1422,
                    1158, 1767, 1421, 1590, 1156, 1766, 1420, 1153, 1789, 
                   1282, 1279}, VertexColors -> None], 
                  
                  Line3DBox[{1286, 1458, 914, 1200, 1457, 913, 1621, 1297, 
                   1456, 912, 1199, 1455, 911, 1620, 1296, 1454, 910, 1198, 
                   1453, 909, 1619, 1295, 1452, 908, 1197, 1451, 907, 1618, 
                   1294, 1450, 906, 1196, 1449, 905, 1617, 1293, 1448, 904, 
                   1195, 1443}, VertexColors -> None], 
                  
                  Line3DBox[{1287, 1182, 1610, 1431, 1778, 1183, 849, 1184, 
                   1611, 1432, 1779, 1185, 852, 1186, 1612, 1433, 1780, 1187, 
                   1613, 1269, 1188, 1614, 1434, 1781, 1189, 858, 1190, 1615, 
                   1435, 1782, 1191, 861, 1192, 1616, 1284, 1446}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1290, 1278, 1633, 1309, 1465, 926, 1632, 1308, 
                   925, 1631, 1307, 1464, 924, 1630, 1306, 923, 1629, 1305, 
                   1463, 922, 1628, 1304, 921, 1627, 1303, 1462, 920, 1626, 
                   1302, 919, 1625, 1301, 1461, 918, 1624, 1300, 917, 1623, 
                   1299, 1460, 916, 611, 1276, 1441}, VertexColors -> None], 
                  
                  Line3DBox[{1291, 1154, 1589, 1258, 1157, 1591, 1592, 1259, 
                   1159, 1593, 1260, 1161, 1594, 835, 1163, 1595, 1261, 1165, 
                   1597, 1598, 1262, 1167, 1599, 1263, 1169, 1601, 1602, 1264,
                    1171, 1603, 1265, 1173, 1605, 1606, 1266, 1175, 1607, 
                   1267, 1177, 1608, 882, 1179, 1440}, VertexColors -> 
                   None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{305, 594, 1448, 307, 612, 1460, 340, 631, 1468, 
                   360, 651, 1481, 380, 671, 1489, 1490, 400, 691, 1508, 420, 
                   711, 1517, 1518, 440, 731, 1531, 460, 751, 1539, 1540, 480,
                    771, 1555, 500, 791, 1564, 1565, 520, 811, 1582, 540, 831,
                    1590, 1591, 560, 847, 1610, 577}, VertexColors -> None], 
                  
                  Line3DBox[{309, 596, 1449, 310, 1624, 614, 342, 1637, 633, 
                   1469, 362, 653, 382, 1663, 673, 1492, 402, 693, 422, 1684, 
                   713, 1519, 442, 1701, 733, 462, 1714, 753, 1542, 482, 1731,
                    773, 502, 1743, 793, 1567, 522, 813, 542, 1768, 833, 1593,
                    562, 849, 579}, VertexColors -> None], 
                  
                  Line3DBox[{311, 597, 1450, 313, 615, 1461, 343, 1638, 634, 
                   1470, 363, 654, 1482, 383, 674, 1493, 403, 694, 1509, 423, 
                   1685, 714, 1520, 443, 734, 1532, 463, 1715, 754, 1543, 483,
                    774, 1556, 503, 1744, 794, 1568, 523, 814, 1583, 543, 
                   1769, 834, 1594, 563, 850, 1611, 580}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{315, 599, 1451, 316, 1626, 617, 345, 1641, 636, 
                   1471, 365, 656, 385, 1665, 676, 1494, 405, 696, 425, 1688, 
                   716, 1521, 445, 1703, 736, 465, 1718, 756, 1544, 485, 1733,
                    776, 505, 1747, 796, 1569, 525, 816, 545, 1771, 836, 1595,
                    565, 852, 582}, VertexColors -> None], 
                  
                  Line3DBox[{317, 600, 1452, 319, 618, 1462, 346, 637, 1472, 
                   366, 657, 1483, 386, 677, 1495, 1496, 406, 697, 1510, 426, 
                   717, 1522, 446, 737, 1533, 466, 757, 1545, 486, 777, 1557, 
                   506, 797, 1570, 1571, 526, 817, 1584, 546, 837, 1596, 1597,
                    566, 853, 1612, 583}, VertexColors -> None], 
                  
                  Line3DBox[{321, 602, 1453, 322, 1628, 620, 348, 1643, 639, 
                   1473, 368, 659, 388, 1667, 679, 1498, 408, 699, 1511, 428, 
                   1690, 719, 1523, 448, 739, 468, 1720, 759, 1547, 488, 779, 
                   1558, 508, 1749, 799, 1573, 528, 819, 1585, 548, 1773, 839,
                    1599, 568, 855, 1613, 585}, VertexColors -> None], 
                  
                  Line3DBox[{323, 603, 1454, 325, 621, 1463, 349, 640, 1474, 
                   369, 660, 1484, 389, 680, 1499, 1500, 409, 700, 1512, 429, 
                   720, 1524, 449, 740, 1534, 469, 760, 1548, 489, 780, 1559, 
                   509, 800, 1574, 1575, 529, 820, 1586, 549, 840, 1600, 1601,
                    569, 856, 1614, 586}, VertexColors -> None], 
                  
                  Line3DBox[{327, 605, 1455, 328, 1630, 623, 351, 1645, 642, 
                   1475, 371, 662, 391, 1669, 682, 1502, 411, 702, 431, 1692, 
                   722, 1525, 451, 1706, 742, 471, 1722, 762, 1549, 491, 782, 
                   511, 1751, 802, 1576, 531, 822, 551, 1775, 842, 1603, 571, 
                   858, 588}, VertexColors -> None], 
                  
                  Line3DBox[{329, 606, 1456, 331, 624, 1464, 352, 1646, 643, 
                   1476, 372, 663, 1485, 392, 683, 1503, 412, 703, 1513, 432, 
                   723, 1526, 452, 743, 1535, 472, 763, 1550, 492, 783, 1560, 
                   512, 803, 1577, 532, 823, 1587, 552, 843, 1604, 1605, 572, 
                   859, 1615, 589}, VertexColors -> None], 
                  
                  Line3DBox[{333, 608, 1457, 334, 1632, 626, 354, 1648, 645, 
                   1477, 374, 665, 394, 1671, 685, 1504, 414, 705, 434, 1694, 
                   725, 1527, 454, 1708, 745, 474, 1724, 765, 1551, 494, 1737,
                    785, 514, 1753, 805, 1578, 534, 825, 554, 1777, 845, 1607,
                    574, 861, 591}, VertexColors -> None], 
                  
                  Line3DBox[{335, 879, 1458, 872, 627, 1465, 355, 1649, 646, 
                   1478, 375, 666, 1486, 395, 686, 1505, 415, 706, 1514, 435, 
                   1695, 726, 1528, 455, 746, 1536, 475, 1725, 766, 1552, 495,
                    786, 1561, 515, 1754, 806, 1579, 535, 826, 1588, 555, 881,
                    1608, 874, 885, 1616, 877}, VertexColors -> None], 
                  
                  Line3DBox[{578, 848, 1778, 561, 1592, 832, 1767, 541, 812, 
                   1759, 521, 1566, 792, 1742, 501, 772, 1730, 481, 1541, 752,
                    1713, 461, 732, 1700, 441, 712, 1683, 421, 692, 1675, 401,
                    1491, 672, 1662, 381, 652, 1654, 361, 632, 1636, 341, 613,
                    1623, 308, 595, 1617, 306}, VertexColors -> None], 
                  
                  Line3DBox[{581, 851, 1779, 564, 835, 1770, 544, 815, 1760, 
                   524, 795, 1746, 1745, 504, 775, 1732, 484, 755, 1717, 1716,
                    464, 735, 1702, 444, 715, 1687, 1686, 424, 695, 1676, 404,
                    675, 1664, 384, 655, 1655, 364, 635, 1640, 1639, 344, 616,
                    1625, 314, 598, 1618, 312}, VertexColors -> None], 
                  
                  Line3DBox[{584, 854, 1780, 567, 1598, 838, 1772, 547, 818, 
                   1761, 527, 1572, 798, 1748, 507, 778, 1734, 487, 1546, 758,
                    1719, 467, 738, 1704, 447, 718, 1689, 427, 698, 1677, 407,
                    1497, 678, 1666, 387, 658, 1656, 367, 638, 1642, 347, 619,
                    1627, 320, 601, 1619, 318}, VertexColors -> None], 
                  
                  Line3DBox[{587, 857, 1781, 570, 1602, 841, 1774, 550, 821, 
                   1762, 530, 801, 1750, 510, 781, 1735, 490, 761, 1721, 470, 
                   741, 1705, 450, 721, 1691, 430, 701, 1678, 410, 1501, 681, 
                   1668, 390, 661, 1657, 370, 641, 1644, 350, 622, 1629, 326, 
                   604, 1620, 324}, VertexColors -> None], 
                  
                  Line3DBox[{590, 860, 1782, 573, 1606, 844, 1776, 553, 824, 
                   1763, 533, 804, 1752, 513, 784, 1736, 493, 764, 1723, 473, 
                   744, 1707, 453, 724, 1693, 433, 704, 1679, 413, 684, 1670, 
                   393, 664, 1658, 373, 644, 1647, 353, 625, 1631, 332, 607, 
                   1621, 330}, VertexColors -> None], 
                  
                  Line3DBox[{889, 883, 1791, 557, 828, 1765, 537, 1580, 808, 
                   1757, 517, 788, 1739, 497, 1553, 768, 1728, 477, 748, 1710,
                    457, 1529, 728, 1698, 437, 708, 417, 1506, 688, 1673, 397,
                    668, 377, 1479, 648, 1652, 357, 897}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{890, 610, 338, 1634, 629, 1466, 358, 1653, 649, 
                   378, 1660, 669, 1487, 398, 1674, 689, 418, 1681, 709, 1515,
                    438, 1699, 729, 458, 1711, 749, 1537, 478, 1729, 769, 498,
                    1740, 789, 1562, 518, 1758, 809, 538, 1789, 898}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{894, 304, 611, 339, 1635, 630, 1467, 359, 650, 
                   1480, 379, 1661, 670, 1488, 399, 690, 1507, 419, 1682, 710,
                    1516, 439, 730, 1530, 459, 1712, 750, 1538, 479, 770, 
                   1554, 499, 1741, 790, 1563, 519, 810, 1581, 539, 1766, 830,
                    1589, 559, 892}, VertexColors -> None], 
                  
                  Line3DBox[{901, 875, 882, 1790, 556, 827, 1764, 536, 807, 
                   1756, 1755, 516, 787, 1738, 496, 767, 1727, 1726, 476, 747,
                    1709, 456, 727, 1697, 1696, 436, 707, 1680, 416, 687, 
                   1672, 396, 667, 1659, 376, 647, 1651, 1650, 356, 628, 1633,
                    873, 887}, VertexColors -> None]}, {}, {}}}, 
               VertexColors -> CompressedData["
1:eJztXXlYzev2J3OXkDkkGSJzxohVyXxMKVE4jnnOMXYyJXPmyJRZySzDiSgq
tXcUiigNmvZurm0IyaFfz3PXt/2cdX/rfvfXde9zf+dXf67n+7x7vesd1vT5
vLWc5mg9U6tChQolVStUqFRB+HsD+9xk8cmvVBBSDFs+L8kBMXnK3aWrPHeo
IOpDrVYRv2eXyfv0K3hwbVUuDG9v93OD+JQyed6W10HdryqgJKPWzjCzR1A8
cd41Z+9sCF3+sMT6j1iYGut50mh2KCyPsZrkt14JyY03+te3fgR7V5trNdEP
gUKfnTnLDBTwzWjdp116D+D0jUjD+g7B7Pfc+Jw+Yvpz85VqN6nyAdVW6iz1
yIeYMU7BCUpFmfxCROiSPW2yYbbp0g6dTsWXyfvnzGgft0UB1rImgYtHPYRI
f5+Uo165kDzLfqaqRxKMN99Q03Z9GLj7PXWr9yILDtc+U98+4QXMGT94lV7h
A3ihndS4nzITOh6rM7rdnOewsLrJyWuOD9jvufE5fcT05+b7o/YnN77LkoiA
7Ds54Bh6qNhpQXKZfK3+Q4tlHTLh5h+7QyK9YsrkNRuannebpYCNPUZskG0M
h8JBNwc2s82HjTHj3xY+TYFtQfZVmiyWQbGvT/0V3rnwqc3yX4x6J4H2lykf
Ikvt4xNTVHl/g1x443Vre8a9BEiePnXQFJMw9ntufE4fMf25+XL2SUZ7PtXw
vHPry+nj3/1L18k7lVDZtEb1emufQuDvxmOjvqog4PaF2Z+HKWD1rhbT0jPl
sPTb7vgivwIwPJ7a79TxNCiyM9y+tLscLj2I/Jz0Lh/CjI62ND2eCivnuS3u
KpfB/CqpV9Zdy4eztvGNg4emwocwO129MzL2e258Th9Of7H5cvbR9P4UO190
P3D6f3LeZnczWQUr/baZexoqYL/NT3pWsXIYnN7X2+SRCgbvGem+uqoCvKvG
H5sRIYdzBQP6jghUQbvBHycd+5AOV73C86xC5dDimEfDb7dV0CJuw8mvqnS4
3rlxNWUw/z03PqePmP25/c/ZR1N/xN1v3Hnk9g83X0Gfn6YWB9leU0B4k56J
V4ep17fa0wEeDpWV8KvPkD2LzCPL5EeP23arbqCE8euLVlTKihT9no7P6cPp
z82Xs49gzzAN/TvnX7j7kDu/3H4Ts88EV+9HXruUkBZoEP1sk/r86t+TdwsM
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

                "], VertexNormals -> CompressedData["
1:eJztvXlYjl37NiyUKSKZFZmSZMyYWqZoIFNlFgmZispQKomIRNGAaNKs0qBJ
WIZIpubBUDIPDVepUKJ3netax30/re3ted772d7f98e3vfc/1+a8z85rXcca
jmHf9+NUNLFYuqltmzZtmqXatGnXprX/qlFr180iNQ5nDn+FVjmbDa6RzkbS
ASnjHc+Vo3Eb74w/0VyEDK5lDirshZFmu8J2L8wq0etPgwM/p+ai04a/Ru6U
OoRUBjwYOe58FTqw/1FfCadMtPiSU/OF1wl4eggu3DNbhAanumzXvJOK5vf6
Or9P0m183/ssrj8tanU85VExp8j9+INJDL1/XNEQev8UjUujyPPxoAuiP8Lz
L24pLhCeP++eXCQZD9bRnErH42q7RUkYj8qhsepk/Fij7yN5YfwOv2okhPFL
V7icIL8XDx+9dZDwe3MuSIwTfu8/tds/vV6hv754hEk+2nZk8PbXK54iwwPH
pxWbV6LHSiV7ezRlo2PeV9tOf5CGqs72bOwdXoXknX9Jm3Z6hDQUV06e89Ye
xc5od8jJQITctS0e2znfQV/VU0OK1eOwo0FvncEBIjRjSwzqeDYODYtTqUx7
dAP3sO/3/UyKCGlK1GQWPlW6pZoiiQOX3sbLorxNFG6KkKz7/LXkfuz8pbpC
uN/venG9cP+Jfgefk+djVf899Pm7Zl3QFp7/R7+8HxkPdu2eOEkYz0L15Y7C
eNJ3X7Yn48dbk4slhPFbm41oEMYve/lnCfm9+EDKlG3C7+0vETBV+L3/1G6w
LmGdwvoEO4JdwZ6HzvseziTrED6tXKtnliRUoeVGluEX36ejbI9bmz5cT0aH
ROURG8xFqNE3oEozAqM20cs6b9OwQXIKlaj2tgidblNxuMuoRDTnZ8mve1+j
cJlUUHVBoQiteF1rfn5kCLK+7fnOuWcK7l3XAUXki5C/8VSLDTmDbtlZra29
rZWGxf8WoZ+dkt3J/XhB5WF6f2xijaZw/y33tLPk+XjVl2T6/G2D9tPnN2x9
8YeMB6toDKbj+bYlio7Ha2yPODJ+LKq3oeMPkPGg4/+9SO0k+Z14sMdM+nu3
NjnR37tYd4o1sQ/eHCxF7XNDoiO1z4xSo2HEnnjPlAwnwZ5hB+dSe8I+h30P
+x3WJaxTWJ9gR7Ar2HO91pgzn6Yk/PXZoFlrnkDsoF483K+oJgp91fiklb/Y
Gl2YHbjgyTcRKrhzyXeO3mU0aeY5dH9SGP513/Pn7RpiN6tpjz7OPYvM+5lv
kNZPwOf98mZO/SRCxZu+yGZ/6HLr0TIXleevEvGPc3fWyb4VodIM+a/kfnxt
4nZ6f27+M3r/uM6ykeT5OLHcgz4/UuYkff40Z+VoMh583qeUjsck/Cwdz95o
0QUybqzhoUjHf3xyKR1/7HefneT34k4SG+nvNSzNp7831S+8M7EPrtZ5Ru1z
+NZPuv7PnCpSIvbEv9wjqD1rclKoPeHchHMUzk/Y57DvYb/DuoR1CusT7Ah2
BXv2MC9cet3Z/K/PpW5S7942i5DCro1O44xMUdq1Ex72OwOxS6mb9vRfImQo
P/7qy8UGSFPmzWn/5ihc9GCpVDF5jnpkTpN6zeObOZeebV+5IxYXGKxtGiQS
oaHfhmaR+3FoZ/H9GXfE929U3eBBno9dr4qf365A/HybvHgTMg4cZCwez3gH
8Xg8VT/rk/Hjk/fE47+vIh6/ZfexsuT3YsvD4t9rKyn+vf1FdxGxDz5kJrbP
nP5i+yi7DlUl9sTKeWJ7Gjbcp/YEPwR+CfwRnJtwjsL5Cfsc9j3sd1iXsE5h
fYIdwa5gz6D43KHdNHwwfB5bfzoyg1xvo9v1hJ36MVx2sOr1mJWXcRdVz99+
DeQ8CbwQZ/ezWSNtk0nbqRUhWPxvst/3to8l96Nxeyrp/Uusz9D7NWKfTibP
RbHjs+nzTapc6fNDCoMukPEgE531dDwlX1zoeBQDpumS8aN5/c7T8TvJuNHx
L8J17dO/RiFbt4/09w7JP09/rwJ6EUnsg9LVtlL7rFzThdqnNKG+ve/rBLTo
WFYfwZ6PvW5Re4JfBz8P/h38EPgl8EdwbsI5Cucn7HPY97DfYV3COoX1CXYE
u4I9La3G2mitPovhM2Ng2yOyv0XEj1wuWvWni2Zo4vh7ctVeOHbUwmiFP8Tf
fVf2IfehMYmj6f1TPH8fFu4P6fCxijwfhSdK0ee/UHClz/ezK/Ej40Fd9o2k
44kYrUXHkzD31VYyftR5iCod/52pmI7ft3NeOfm96PTSd/T3Lusmoue/ya7U
OmIf1F/bn9onb/wf6n9/LDmygNgTKc7YSu3Zt83OfxsvgV8HPw/+vaUfGnQL
/BGcm3COwvkJ+xz2Pez3luuyWQPWJ9gR7Ar2FI+ru2bLz2qUmazygdyPQnf4
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
C0lMLaF13bdvttclkXxhzJkrP3qWYSS9ve63Nzm3TcKHHHxEzuezut37u5SS
eOBuQj+hbvyt6aiD/INsfHd4w6tlJmH4nczg10Kd+Z/md6DnAX3Pf9L1PB8Q
qFiyKR9n/bhUrTixCC+yWDbVSaoCXZsuJU+uo/MOiuXkOpK7sGC607/Rp6S9
DGwO0SxGttYu7uhGLnLTTV7x73Q9rV0v/TqyY6hmMU6acs6LPAfHanc0+nfP
Af3LS6Z/yWD6F0X3dvsXyeWir++DVvU3uIYMlropGftUoXimfwlRbql/6f+t
Y77RwjsopTh55fU2Sbj2/hTRFG8RsmP6l1JO/zLyp9OxsAM++PuBQRKdjlzD
jQdfONq/E6GtTP9iyulfDEIHhblJZ2D8ea/CYucwLJJcvWnBbhL/MP3L9jNi
/cszpn8Z52HzVNcpH6+S+tT7VfA9tO9d2/L9XypRGdO/2DH9S6//oH+JZ/qX
GUz/YsH0L2VM57KyoqXOxYnpWUZwepZyplsp53QrxkyfImHVUp8ynulQ1jEd
SjbToQxh9YLXXN85r9d77YKt76K3oRs76bbNRnFvlb8rXq5CWUwnUszpRBSn
TJZqmpSK4iw7n2xyiUYG/glH9z8icSnTffjWtdR9+HfsP9f3Xhj63aTUduXs
GJy6Z8LUQhIf5jMdx0dOx3EvtGKaJIkv296Xr/ienYQ3+vQNnUHitGCmyxjF
6TLaP1vaKUItBofPdZ1093gA1gyXlbYi5/Y2prP4wOkshugFxNvr3MDJc/Vz
l+vcQA35Z9TW+opQCtNNtGnTs4Vu4rGxj2ND8D08cLVKD0unfCTpVNu4i9jz
JKtrbOLwlI1M1xDC6RpAv+A/vKV+oT/TKczidArbmR5Bh9Mj+DDdQZsvLXUH
75i+4BKnLzBg9SBzDt9Z5tJcoP35Mp46IfRWidxdFFKfanUujJzDLG+t4vJW
P8b/38Px/2ewesRFDg+KXBU96aDZedzgOjOt3eEA9KRk0YgpZJzLGc+/6kBL
nv9s26/zB7s64xezfp/tOCQAb05VcLclcUIz4/NP5vLf563w+UtesbyLw5U+
TVb3u0TyhwVSYUs0EsPxlsMDAjeR621ZnH2Oy5ebGZ9fi+Pzp7P4O5nDoUZ8
GVah63wGHd831zTQ+QwOtXv9bAmJS5UYbz+H4+3P+nGl1vx4AMrcopbgoxaD
6pefny+s22OMh7+c4+EvMvo0LPdIGJqpqLs1UzoDGc2IltIl59hrVi9L4XCr
CsaT/8nx5GUZHz59Xks+/BXGe4/heO/HW8G/NjLe+yuO967M+O1fOX67OeOx
m3E8dvVWcDSZ9j7XBnjfxE0m6bXHrHyQzvHKozUPRMi6lTxdqRWe+c77smaP
JyTgtTv0tVPibFDlhsZO98n5c78V3nhRVbN3dzKv30bN6bK50RzPNbxxcSL5
XW6MB+7F8cAzLkScFfprlUXPapCZZY8XTZkm5UXi7eet8LrPRNgsm5gYjtzL
O795QJ4/p3t0uLAOTRhPG3E87R55OrZV2UnoXhN6bhRvg04loZvCediH8a49
Od71kAsdHml43kbHNX7orLX2QQfMaozyUv7uf6XJ4X1ljBcdxfGi1zL+c8O9
lvzn64znHMbxnNtFiPnMTzg+cyPjLW9c0JK3nMX4yUocP/ksq0ef5fDHBQvn
1A5QvYaNVvUcceEiyaelzhVa3f47v/7F5dfHGX/Ym+MPA155icMrS2+rbFDf
EYmV+3cyNhzqiQ+7zlp7sFaE/hiK94spxxMuzkt0meh8Dusvjl/bw/kc0rq0
cNxCsk4Q4/3253i/nVvBN4dNS/LbSc6lizIJ6l1J3hrywcVPWG8fGL9Xi+P3
2m433dt+SAAKP2fgN8LVGem+q/QQzslujK87urglX3eWd+SVnbNj0OjOdgFK
98LwuAMptoL/7cL4t9KMf9uP8W/HV676uU4iCdWvvXtRb8EdrHhjlC7y/hsn
vcnhpCMYP7aB48cCD/aXTEsebBrju/7m+K7QB8mJw1vDGN91Ncd3/YvXWteS
19qB8VffcvzViwzPsGX4BvRhTowas9Q5Lw4VONRo5LZ/jPFMl4WyE0XoPcu7
f2z93/NLlRm/tA/jlzownLeNVkucN/+g7NbiZWFIQ13/1fNlYfiQb/tejVUi
5MJ4pHnjWvJI3dd+Gzp3qCcyDXfNH7UjEvVQCt8prMNurfQdkmV8UVOOL2rT
Sj+ipy/V2ibF2WD1ouAV5FxEeYUjOgvn4ZhW8veTjC+6neOLXizTPnnTKQC3
XedzS3nreaRtHzVS8O+pjP/pXNeS/4lcbxXZHo3Gqkd+LJ2qloqlvm2xciRx
Ywrjcw7l+Jx6T6dmeS26hvMGrsgPks3Flz+9tIkkeUQJw2Nec3h0KONbOnF8
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
VaiDfGJ1EaiHQH1hFqs3QJ3hfwFKrYc1
                "]], {}}, 
             Method -> {
              "ShrinkWrap" -> False, "DefaultBoundaryStyle" -> Directive[
                 GrayLevel[0.3]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "RotationControl" -> "Globe"}, {
             DisplayFunction -> Identity, 
              PlotRange -> {Automatic, Automatic, All}, DisplayFunction -> 
              Identity, Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> 
              None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
                FormBox[
                 TagBox["c", HoldForm], TraditionalForm], 
                FormBox[
                 TagBox["r", HoldForm], TraditionalForm], None}, 
              AxesOrigin -> {Automatic, Automatic, Automatic}, AxesStyle -> 
              Directive[
                GrayLevel[0.65], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], BaseStyle -> Automatic, BoxRatios -> {1, 1, 0.4}, 
              BoxStyle -> GrayLevel[0, 0.35], DisplayFunction :> Identity, 
              FaceGridsStyle -> Automatic, ImageSize -> 264., Lighting -> 
              "Neutral", Method -> {"DefaultBoundaryStyle" -> Directive[
                  GrayLevel[0.3]], 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "RotationControl" -> "Globe"}, 
              PlotRange -> {{-1.6999998285714286`, 
               0.6999998285714285}, {-1.6999998285714286`, 
               0.6999998285714285}, {-0.07437497428571613, 
               0.15130529451251423`}}, PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}, 
             Method -> {"ResolveAsTriangles" -> False}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "3DMathPlot"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[(c (1 + c) r (1 + r))/4, {c, -1.7, 0.7}, {r, -1.7, \
0.7}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max10230$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`max10232$$ = 
                 0.5, CalculateUtilities`GraphicsUtilities`Private`min10229$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min10231$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max10230$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min10231$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max10232$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$4040211$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min10229$\
4040212$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max10230$\
4040213$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`min10231$\
4040214$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max10232$\
4040219$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max10230$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
max10232$$ = 0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min10231$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$4040211$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min10229$\
4040212$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max10230$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max10230$\
4040213$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min10231$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min10231$\
4040214$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max10232$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max10232$\
4040219$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    ContourPlot[
                    Rational[1, 4] $CellContext`c (
                    1 + $CellContext`c) $CellContext`r (
                    1 + $CellContext`r), {$CellContext`c, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$], 
                    (
                    Piecewise[{{-0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$], \
-1.7], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max10230$$]], 
                    (
                    Piecewise[{{-0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max10230$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$ + 
                    0.0024, 
                    CalculateUtilities`GraphicsUtilities`Private`max10230$$]],
                     0.7]}, {$CellContext`r, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min10231$$], 
                    (
                    Piecewise[{{-0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min10231$$], \
-1.7], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min10231$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max10232$$]], 
                    (
                    Piecewise[{{-0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    1.2828539611796368` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min10231$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max10232$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min10231$$ + 
                    0.0024, 
                    CalculateUtilities`GraphicsUtilities`Private`max10232$$]],
                     0.7]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["c", TraditionalForm]], 
                    RawBoxes[
                    FormBox["r", TraditionalForm]]}, AspectRatio -> Automatic,
                     ImageSize -> 264., ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min10229$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max10230$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min10231$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max10232$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVt9v0zAQbikwfv/\
6D5B4Rhv0AR6QGN0YkwaUpLz3ljiJhWsH29kG/zz47CZp1q5STAdoSh9O9aX5fPfdd9d7eiyCpN/\
r9dR1Yz4IFidbeHpizEjMclHweP8sl0QpKnhyDZ/dMSYkeo8w+EFi57tpzHshZ6Dd+Q2+\
DywqGGjyVVNGNSVqeiAhz2ikas9Y0hPzkykTETD6kzwbbg+3d16/\
cjAYyxi0JpKrl20h80yCIkkPgW4Y844B/+aOj8vjp4KxkHwvCI+\
Iemi8EwmxgREcGObjfevVZuoeJqaBxyDjS6fJynPU9gKlJeXphMxyfONisnbaAoNMlePmfsnNOgW58\
G/hAxHamJzHJm3PlkC/MK4Yfedl9c+5G+D5bVt4KU5XE4f57TLkDTQ9IWqZzuet6+QYqbrWRj/\
n6rLmy0aDvHjK1P9LR1Tp5TBetA2DzI5NjVdrbxl+2BZe5Nj1c3E/\
MOazc5SAq4ZDJbiPIi7YPIpmygMn0fbpqtw4HMbdiu8QnT4VrHACE2fZL7Y/\
HlXg9aYQYu2mG5AOr2dAQHJiXLHldo+mVI8ykBAZ4Pl1/\
bLJJqIOxePO9rWnPKZmgDlC1i1PaA6ThbqDjrIvf1TcSi7nmgx5P+\
SapESuFf1trI805PJ4IjwjCfGCpl69OaySGoP0lv2gBAlz4BQh6S/zsd/\
cw8VKIFUHEtUlHYsDW5oz/yT6ZYGPCE911tyxPUeXd9tiNoE4rVUX0CRZnDabY7rfZLpxQ3Og+\
5LgWxL/gd5tCt2m8Fc3haU9uFsTujWhWxO6NaFbE/7fNcFGjP9KvwFqE7hu"]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "ContourPlot"}, {}], "\n "}]}],
    Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate forms", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 FractionBox["1", "16"], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["c", "2"], "+", "c"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r"}], "+", "1"}], ")"}], "2"]}], "+", 
               RowBox[{
                 FractionBox["1", "16"], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["c", "2"]}]}], "-", "c"}], ")"}]}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[c ((1/4 + r/4) r + c (1/4 + r/4) r), {c, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"c", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "4"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "r"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "4"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "r"}]}], ")"}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[r ((1/4 + c/4) c + (1/4 + c/4) c r), {r, c}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"r", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "4"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "c", " ", "r"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "4"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "c"}]}], ")"}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Simplification", "id" -> 
     "ExpandedForm", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Expand[(c (1 + c) r (1 + r))/4]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox[
                RowBox[{
                  SuperscriptBox["c", "2"], " ", 
                  SuperscriptBox["r", "2"]}], "4"], "+", 
               FractionBox[
                RowBox[{
                  SuperscriptBox["c", "2"], " ", "r"}], "4"], "+", 
               FractionBox[
                RowBox[{"c", " ", 
                  SuperscriptBox["r", "2"]}], "4"], "+", 
               FractionBox[
                RowBox[{"c", " ", "r"}], "4"]}], Identity], TraditionalForm]],
           "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False, False, False}, True}, 
   Typeset`aux5$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "5", "datatypes" -> "Sum", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.6600000000000001", "parsetiming" -> "0.441", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP717512a99cf55f99ebgb000060fg8c4d8040c07f", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "5", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa717612a99cf55f99ebgb000044b1fiagc1bii4i96235443652248981561", "version" -> 
    "2.6", "inputstring" -> "sum_{i=1}^{r} sum_{j=1}^{c} [ ij ]"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 2, 18, 16, 51, 17.3071046`8.990799361249639}, "Line" -> 
    4, "SessionID" -> 33418422269014030074}, Typeset`showpods$$ = {1, 2, 3, 4,
    5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = "sum_{i=1}^{r} sum_{j=1}^{c} [ ij ]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{729., {497.3544921875, 502.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.885745877327104*^9},
 Background->GrayLevel[
  0],ExpressionUUID->"39bdbd7f-361c-443e-bd72-0f4410da7947"]
}, Open  ]],

Cell[CellGroupData[{

Cell["sum_{i=1}^{r} sum_{j=1}^{c} [ i^2 * j^2 ]", "WolframAlphaLong",
 CellChangeTimes->{{3.8857458891001134`*^9, 3.8857458989221115`*^9}, {
  3.8857459313401184`*^9, 3.8857459387391043`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"01c21a51-f68b-4a40-94ff-a90ae90c9fff"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "sum_{i=1}^{r} sum_{j=1}^{c} [ i^2 * j^2 ]",
    Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Sum", "scanner" -> "Sum", "id" -> "Result", "position" -> 
     "100", "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Sum[Sum[i^2 j^2, {j, 1, c}], {i, 1, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"i", "=", "1"}], "r"], 
                RowBox[{"(", 
                  FormBox[
                   TagBox[
                    StyleBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "c"], 
                    RowBox[{
                    SuperscriptBox["i", "2"], " ", 
                    SuperscriptBox["j", "2"]}]}], ScriptLevel -> 0, 
                    StripOnInput -> False], HoldForm], TraditionalForm], 
                  ")"}]}], "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox["1", "36"], " ", "c", " ", 
                 RowBox[{"(", 
                   RowBox[{"c", "+", "1"}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "c"}], "+", "1"}], ")"}], " ", "r", " ", 
                 RowBox[{"(", 
                   RowBox[{"r", "+", "1"}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r"}], "+", "1"}], ")"}]}], Identity]}],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot3D[(c (1 + c) (1 + 2 c) r (1 + r) (1 + 2 r))/36, {c, -1.22095, \
0.220952}, {r, -1.22095, 0.220952}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            Graphics3DBox[{
              GraphicsComplex3DBox[CompressedData["
1:eJytnAmQVdXVtjsCrSggIKhIy9DMCCgzkYaL4kAAo1GjgoqC0E4kgKIiQaIC
CjIkogwGQaKiqCCI2DL0x21lFojKoIZJmklk0G4EA0jin6/P+7z3Z3edsqj6
rFTd6ieLc/Z5zz5rr7322rtmr3439jkjLS0tu1RaWon//n7Rve3QkqN+SPKb
mXt8TmJm10SdHc361t9VWIwP7NOwe9d2Beatz8lJ/7pe3cQzmzr+dUeTQ+Yt
fp4wts+D1yZrF13n25R9Tv8Bdfd2TX68v2an/pP2FuN3Hy1fe0GXXebzN039
zcRHrkie/Pl///vavNqSgu0na7TKalN5+4d/ue+f5isj+8TAhrn9qn++vlj7
e/65xfU9Hl5VjM+/Kf+Jn0bmmNeM2p/4bFGzyo3fGJeAb4yeN3nfGU2WPtNs
SSJs//tfbC6s1WltMc7f6BrqzO/Jpb3KrW7cyTrD31x7TskSz1e0zvDH9rUp
V2N6c+sMv2Piq+ndf59lneGH//7dtlZ3/do6w29t/NoLaR0bW2f4hT1m/779
6EzrDH80srfO8J+i61tneLeoPdYZfm/UfusMb7iu6HmtM7zSsiJ9rDM81Bn9
6J/YwdGTv/kd/fK4EkOGbW2PzvBZO/f86Z+1/rMEneF3P11w5P2PSlln+LBZ
d2eP/lMJ6wx/+PHLZ1426Mcl6Aw/+WjOpdMHH2yLzm5PZN8eneHPRde3zvAe
UXusM3x81P726Ay/eWrR8y5BZ/iiSB/rDL9c/R+d0YnvHZ3h9E/+PXy29ORv
fvu0mL/5xy3VE+gM3zl6z8Tsn+sm0Bn+3YBjDUpPrp1AZ3hGlzXpXfMuSKAz
vPPCJ7oOuahcLjrDW0b2SXSGH42un0Rn+I6oPUl0hneJ2p9EZ/hTuyL90Rk+
Wv0fneFt5H/QGT3o5+gM53tHZ3hP9U+uC0dP/uZ30ZXdO2966TLrDN8waHn+
lYsbW2f4RxVn33NenZrWGT7ypozRhYsqW2dfJ7K3zvDt0fWtM3xB1B7rDP9U
+qMz/IT6PzrDH5f/QWc4fhidee5QZzj+E53hw/W9ozP8kPon94OjJ3/zW+XT
5I6cVxpaZ/hL8+c+/Nr8atYZXvDqY5ufeOQ86wxfFNlbZ3it6PrWGf659Edn
+Fb1f3SGl50d+R90hpd5NfL/6AwPdeb5GN/RGc54ZD8rjv9EZ3hVfe/oDKd/
0g44evI3vw1y8+/Nn1/BOsMrzL1uTMsB6dYZnhXZW2f469IfneFJ9X90hp8l
/4PO8IqDI/+PzvBHNP6iMzxH8Q868xzES44zxBnfPQ6J/1vjETrD8Z/oDOd7
R2c4/ZP2wdGTv/nNWDngv/872Qad4Q0i+yx0hv8run4WOtvfR+3JQmd406j9
WegMX/FY0fMuRmf4JZE+uegMrxnpmYvOtJf4E53hjpekM3yMxnf7fXHGI3SG
4z/RGb5Q/Q2d4fRP2g1HT/7m93r1f3SGL9f3gs7w9fq+0BleU98jOsMbRv3Z
8Qb8RX3v6AxfLf/guE7tCuNnOPGn4zrx0YqXHNeJM747rhNnPHJcJ47/dFwn
zvfuuE6c/um4Thw9Hdfpt5H8v+M68S0aLxzXie/W+OK4TrxS5J8dP8MrR/45
FdeJh/Ez9w91ht+u8RSd7ec0/qIzPF/jteMS8YUa39EZvl76ozM8T/0fneHP
6ntHZ7i+Fz8nfJv05G9+P1T8g87wfyheQmf4ccVX6AwfpHgMneGhztyH+SY6
w5kfoTP8RcXz6Awn/kRnOPESOsO3qf97PBZnPEJnOP4TneGZ+t7RGU7/5Pnh
66Qnf/v6iv/RGX5/FD/bb8D/pPkFOjtO1HwEnbke83d0hl+i+SY6w2/R/Aid
4U8rnkdn+E/q/+gML6d4CZ3h52l8R2f4So1H6Ox2yn+iM7yyvnd0htM/0QWO
nvzNb/Vp0fwXneHtI30cb8C/1Pwanfl3YfwMr6z5OzrDF2u+ic7wMer/6Awf
LP+DznDiT3SGM/6iM5zxHZ3hE4g/pTP8fPlPdIY/pu8dneH0T/SCoyd/89sk
0sc6w8P4mf8/1Dnk6Axn/o7Otpf/QWc490XnkKMznPgTneHES+gMZ3xH57D9
6BxydPZ8Tt87OjsPp/6JjmH7+TvkQy9u/cj5OYeT/Ib6h/zIgQVvvT93uf9d
mA8MOX/z78JxIeT8zW9437j2h3lO7MP8JPahzvwd3rdh1sLHx1b/Ickv/Ob8
1esePLnK/z/X4W/+fzh/8xvqHHf9sP3YxbU/vD72oT7Yh+3HLq79of58j592
+Mf6p6qm+gl/h3ngEYceHZI4VlCsPTcOnbHy2IADxfLkfKer9pe5YFT14nn1
w7PXP3L83hS//7PffvI/WcXz7Uc637+y2xsbiuf59T3mZW462qhX8fz5kk57
8m69KMUnrRo358VvPyp2nVJLfjz+1DVzir0v++vXj8wbUy31XTxQY8akPkfy
YvO66BS+r4IPPj23xYkC26NLmDfjOuga9pOt12Vs/NuIA77+gasbnrlk/api
+SL0DfNFZ5//1rv3VlgTm/fgPYT3Hd69S8aGRil7dA/nO/YPem+hDo3v6vXg
8Gc2+Pqj+014d01iTbE4n/cXxvkdb7l3Qaf/9ue4eHWi3nN437npD+RntPnY
9rzXMB7gOvSLUIc3524b9/2Zc/wdPZT+0MRyW/OKjYP0D/oL16EfhH6A93dQ
75PrbNH7jhvveJ9w3lNo73mm9Oa+vI+4ce0q6Q1/TzqG9jw/enDfmdIrbM9X
o0p8s/FEYZJfeLP0q+ftKVWY3P3kdcs+eifll9bUTWv6U7Vvkw3/8/cdh+qm
vtPCTp3bf9p7b/LQqOuPv9/v/xsv+s8f9Xi99clufReWnNIj9b33Hzx20JRp
y5NtBmfX6tskxblfc90fvuTz5lV7Prw60evvW2t2m7zfnHasVbu479pea+p8
deSTRO7KOm07Hkx9L7SP9mKfff2QT155Yk2i6h8fHNazVeq7uE3t5jm4zg2F
55bq13p1YkXvn9ueN3yN7Xmefno+7C86s29muR7LE03uuaH27T3mWn+eh+eD
026eA077aC/3pR20C879uD/X+W5zxTIff5RMzG78UY2Mkyn/yd/8//Anp7bp
/9vZyQS/vzQexfWfuPEurh/GjYNxfj6u/5zu+BjXz0933Iz7Lk53PI37jk53
nI377k53/I3rP3Hj7C+N1+E4Gzcux33vceNs3Hga5wfixvc4/xM37sf5n7hx
/JfigXAcjxv34/xV3DgeN17H+bG4+CHOf8bFFXH+My5O+KV4I4wT4uKKOP92
unFCXBwS5+fj4pM4v3q643icn4+LW+LGnbj4J248Ot34Jy7OiRvX4uKluPHu
dOOl/T1HLB51S/H6JTj9YnjaHzb+dXeHxMnPpxVe3Ok722ffePPeMSPbJuHY
f/XCkay3K9ZLlv/nviavVT5o+/Gbj+yrvrOzOfZV1qX3bP5sq2Sbb4a8NXvu
N8XGETj2eZ02dTh0++XJrt+t2Nts6B7zy6b9Zdbrn7RMDjzZvWe7Kvm+Tv2H
1pd5+Np65tivXdW3V9rT5yXLn9m53Yh122w/JLJPwLGvsLrIPnF3rYea/a3E
JttPef7J/hf/qrM59m2j9iRGNk2f/fq0z4rpDMd+efRcid6tF47ce2PSvGyk
T6LMjop7awx9x9dpFemfyAvqr9Yqf4U915kTvRfbO65QXjen2i0Lptz3gfnk
6L0nz/7hjG/aDF1abHyEh+Pa3T12ZKzsd9h5tcSeS848WKeq+xW8/BmjRwwt
LO1+Ba9w9rGTUz4sXEI/gc+peXjw8K6/cn+AZ/6m7YHJ7Uq6P8D3N+1896LF
aX7vXu/q+lrLiUe3LeH9wr+OeHveI/yH6Dp+X/C60X39vuBvRO30+4IfLl30
XO3zgvqiTsqfoz+8SaSPdYZfH+lpnclTrvp+VMVu87L8XcNzBz6y7qa+l/g7
hX9wovZDNy6qmEDnVF3GtjrVf5OZQGf4hMHX/rZ+nzoJdIbXGrZyZcW5NRPo
DJ9Z7tzS5d/5uT06w6ucW8SXoDO8UXSdJDrDX4rum0Rn+MKone7n8Bej50rm
BfVFA7Uegc7wLZE+CXSGb470TKAz48OeDwe0PpFzlXWGz7r/x2GvrWlunR1f
vz7/kQmlq1pn+Hlf//lAveyG1hneY33yoT67mlhnx1ezKpZtPqqBdYbvvjBr
c5Wt6fZX8JZVingSneGXRdexzvDe0X2tM7xU1E7rDJ8cPZd1hhdofQed4Usj
fawn4+fgy6ZPnzfmSusJH7JqbNmjC5taT9t/tueN6q0utJ7wywd+U2Hla/Ws
J/zWeR+N3jPzEusJbzjzoaH7t9W1nvBjmWv+1XdQSesJv6JWEbee8FbRdawn
/M7ovtYT3iRqp/WE/y56LusJT9e6GHrCn4/0sZ6sM0yc+sqHC3u3tJ7wzruq
VJo9oLb1hF8+o/uVdx48x3rC970wo/DFjlWtJ/z5S7/d/fje6tYTvrrn+ct7
3XWR9YQvO9Go5ZdT/mU/AK/yUxG3H3Bdc3Qd6wmfFN3XesI3R+20nvBzouey
nvCztZ6Inl4/j/SxH4C/GulpnVm3Gfw/S9YNufiSLHSG512wu1q/b6tkoTP8
8DVz/nnRvF/lojN8SrfmU2tfWyEXneG1mnerfH3rSrnoDH9t/h1Dn80pn4vO
8Jf35/a59uChxegMP/NAEW+LzvBZ0XWy0BleL7pvFjrDx0ftzEJn+ProubLy
gnqhXK3PojP860ifXHSGPxfpmYvOrIPNkv7o7PoyvS90hnfXe0dneKkXo36C
zl5nU79CZ/ge9UN0hm+P+rPjB3izqD87foD/oO8CneGL9B2hM/yYvjt0htfX
d5oX1AvV0Ho3OsMf0/eOzq6Dkn9wnKZ5xlORH07FaeJPy884ThMfLn/lOE28
o/yb4zTqSuQPHaeJN5f/dJwmniZ/6zhNvFPEHW/D28ufO04Tz5b/d5wm3krj
heM08e4aX/KCeqEyqh9wnCY+SeMUejIP2xHFCdYTrjjBesJXaDxFT3gFjb/o
Cb9T4zV6Or+h8R094YoTrCdccYL1hF+qeAM94fcoPkFPeEnFM+gJn6T4Jy+o
Czqsugv0dL2t4ij0ZB17ruIx9ITPUPyGnuaKA9HT6+GKG9ETPkxxJnrCKysu
RU/4uCi+tR+Ap0Xxrf0AvJriZPSEP6u4Gj3hbysOR0/4cMXteUH9zx2qV0FP
+DLF//gB1y9rvoDO1AWk7Y3mF+gMX6X5CDrD/xrN19qjM7xhZjQPQmf4PM2b
0Bneq1k0z0JneOfronkZOsM/iLjjB/gD0XUcP8BzNE9EZ3jNqJ2OH+D9NQ/N
C+p/Kqn+B53hezWfRWd4+b2nzn/Jb03U/Bo94QWap6MnvKnyAOgJ36K8AXrC
r1H+AT3hO6K8h+NbeN0ov+H4Fn6j8iroCc9XHgY9vZ9A+Rz0hK9UXigvqPNp
pTof9IS/pbwTeob5Q/ptmNdCT/iDypOgW5iXQzf488rnoBu8UZAXct2K8kvo
E7YHfeAjlQdDH9cdKZ+WF9TnKJ9jfcL2O56XHqOf7b245apM+70pW8eu63Py
cHLbHzbOX//7q+z3sL+gwuiNHRd1tN/D/sJxLy188pVr7Pccl+l50QH7lkF+
DPtGM+68aPvYLPs97O+7J7dEnX2d7Pewb7fhtd17P73Cfg/7B2/LqLdydrti
+auMIH/FdeaV+PxI439d4evO2fXl2QdWFyT3j675XPdVqXGZ3/Ktr7pjZNNU
nhP7uc8Pr7F2xnr7N+zXd/gg9/iJS6wn9jMvqddhQ2Zd64l9g+OfHDzRs6n1
xH5nkIfE/urfnpqPwr7+7NaXDk9LxZPYn5/RYEmr9U2tJ/ar8ivVHpddx3pi
/8LCSRev3d4gEeaj0oJ8FNf5WvWHfI9c541AZ/SjH2L30D+O33h7z++TH1eu
tOKuxSWsM79b+u/4vOemyvZ72HdedvnR/VNL+vvFvtHTg3ZfuOkCf7/Yjzw2
9tYSy75o7/mR7C+/7tS8H/b7yp2aj8L+07KFDc6aWMXfNfafvVw4/ItZv/J3
jf1jvWa8kD61gr9r7HeqDjnMRz0V5KO4zmK9F3TmOvf3qZL9TOkG7t9/K/ou
9ief2Vpxa6LDFal+LP3on1wX+6NZLW7Or5thnfn9od2gwTvm1LHO2Df+c51q
rw9J5U+wf+7NFu0+HFDLfhL7iUHeD/tGQT4K+1XPzpg0bmXKf2K/el3+q9+u
qW+dsd+kOm10dt5C+of5qMNBPorr5Ay7ZcwNw1P5KJ67kvwher5b1P/3JS88
//YNPd9P5fewpx/SDuxHjhjRvVT7BtaT353n5Gac9Xkj64n9G398dOO1BfWt
J/b7gvwe9h2DfJTHtz3lPtz0aEpP7Ddrv4Dnm7JfIJ3RE/v9h2u2efmBqsXy
USWDfBTXqSv/g55fFD444mjv3cmHuz29vUNBO+vJc+MPva4k++kNr8oa06i0
9cR+lPqb14lkP7h3vZVd69S2ns7zDa1Tr/P7ta0n9mfUOjW/h/2lQT4K+3e0
bwU9sZ8lndET+2kTR1y3eUNN64n9G/InYT4qLchHcZ0yT7/y+7/XrGM/wHUa
azz1/J3+onHZ49qxDz4e3GxncnfR+FLLOmNvf8i4Jvu8ou/3XOuMPf3Q45rs
yxbpWck687szyPth/6ryVJ6/y36V8ioe12RfPrq+dcZ+v+azHtdkvyhqfzLM
R6UV/fej81Fc52CXaJz1uKbr7It0S+X/y704+OwpW5JnrY64/a2e7xqN187/
y/57tcf+Vvb4Q+f/Zd9Yz2t/K3v6p/P/sk9Tfs/+Vr+VgnwU9k31vuxvZd9c
eQDn/2W/W/3B/lb2+7SOFuaj6gf5qDq6zjmRbo4fuM7D6rfOY6u9xI32Gxn1
j1Zq9WWylL4Lx72yZ7y235D9e/oeHffKHj9pvyH7eewLJu6V/aog74d9VpCP
4nej/I/9huxHy1857pU9/s1+Q/ZPyB+G+aiyQT6qp65zpfwqel4+YPrGm75a
m+z65TMl7h/V0XrSLuJG9Py17Cv9EPl/9MSecRk9sf9C4wt6Yj9bOqMn9icz
T83vYd88yEdhP1/jI3b8HtJ4ip7YP6HxFz2xL63xGj17xeSj0K2Jxn307KX7
tNU8BT2fG7tq9X3lliWnK65AT9o1SPGJ4yfZb1E8g57YL5LO6In9AsVL6In9
wSC/h32FIB+FPf0NXUbJnngPO353KD5ET66/TvEkeubE5KOyuY7iUvzASF3n
OcWx6Hxb0xXTJ2x8IVlDcS86n637P684GZ2xb664Gp2x7yH90Rn73orn0Rl7
xmt0xj4vyPthf6jrqfko7KcfjeYj6HyW7EupH6Iv9gVLo/kOOvO7VPMjdOb3
hiAfdbeuk31+NM9C51K6zm2al6HzAv27DzSPQ+eKj/7vg7+VSNf8Gp2x/0j6
ozP2hZpvOr6UfX35GXTG/ibNZ9EZ+91dTs37YV8+yFNhf7X8HjpXkv1GzcfR
Gftd6oce12S/bHw030ffbOWdsoI8Fb+XKW+Anvm7/9i3ya6VxeqsSus9zJTO
6Lld9mOV30Af7BkH0Qf7vCCPh/0fNJ7yvNh/ofwPz3sW65zqDzzvPPYvBnmn
rbpOmH97WfkZ13PquuRtwnoh/l1YL0R7Qnt+w+tvD9oDL7b/jvlIUH8FD+ur
0R/7cVE+MBXnU38d5fGsT1x9FPPQQq0HwZlPjdC6m+t8qPtTXQSc9ZEC1Z/Q
/rDOk/4W5iH5TuET1H7HQ+LT9LyOx/Qb1gfGvXfHXxof4cwrb1Yc4nmN4pzn
NU/0uEB9iubj8Av0nWaMifJ49vNcT/fF/9BPyDfyvPAGynNyP65TK8gDjH73
yX83eexwsf5zoPo/fuzw/aJi/faGoTe1v6NaTiLUrcbiH1es/iTlH2jnwhVd
vnry3lR9Ke1p23HtD5/c+Ukx+/tGPt5jYZdUf8P+y0GlqxZ0TfVz+mevL7e3
6Xa8+He3r/WepXt6FhZ7j//O73vukXdTdX1c57qBpQ4+tnBpseeK0ye8/v9V
++PaGfde4vSPe19xz3u678vn9gTfkc/5CbjP8xGnftLn+YhT7+fzecSp//H5
POLUq7h+Qpz6Cp+3I856q8/bEf9Z9Yc+byfw5zwvelM/7LpM5s1aL+O54NQr
4jfh1NfhN+HUiaED3PVO0gFOfQ46wO9SPQn+F079A/4X/rbW8dENzno0usFX
aP0U3eATtA6I/4WHehIvUF/t84vEqcf2OUXiFbWO6XOKxKn/9DlF4tQr+pwi
8SGqi/A5ReJZqkvxOUXihap38jlF4tTn+Jwi8RGqJ/E5ReLLVRfhc4rE39D6
vs8pEv+L1qN9TpH491pX9TlF4qwPojPjCXXprlcWpw4ZPVN1iNF6PXrCqfNE
Tzj1iugJ/1b1P+jpdTzqxKQnnLom9IRTh4Oezj+pngQ9HReoLsLr1uINtI6P
nvDLtB6NnvDJiit8vpP8JXX7Pg9KPDyHAV5L6/U+90n8RdVL+Nwncepmfe6T
OPWfPvdJnDpGn/vEfVV353OfyKurTsznPlGPo7omn/skfrvqc3zuk/jTqjPx
uU/i76kuwuc+ibO+73OfxMN9hcSt7INAZzhxLDrDD6hOHp3hmapXQWdz1QWh
M5x6WnSGUxeKznDqGNEZvpe6O+kMp04MneE1VO+EzvBKqttBZ9dJqc4EneHU
S/i8LM232Cfi87XEva+EfQXkv5UHcN25OPXwPkdLnPptn6MlTh2yz9ESp57W
52iJU//pc7SYLypv6XO0xKmv8zla5O2VR/I5WuLUO/kcLfFOqs/xOVri1Jn4
HC1x6ijsbzV/ZX8NOsPZj2M/LJ6v/Rr2w+LsL7AfFqce3n5YvAPraPhhrqN8
u/2wOPW09sPi1H/aD4tTr2g/LN5CeU77YfH/qJ/YD1NvovUa+2H2JykfYj8s
Tl2K40/Ne9iX5DhT/Ij2uTjOJA+v78jnRoqzj8DnRopTD++4lPU0fdeOS8Wp
Q3ZcKk7drM+NFKfO0+epiTeWX3IcK07dneNYcerEHMeK/07+0+dGijMvRk/i
/RXyz/RbeBjPw+vJz6MznH0uPh9WvI/GEXSGs78AneGTNU753Enuq7pudIYv
1jiIzvB7NW6is+tANc6iM5w6RnSGU3eHznDqx1wXJR7GveRdyineQGc4eRh0
hr+pfVjo7Ly64hzvexFPV1yEzvBLFUehM3yL9h2gM/wF1cmjM/y44jp0hrdW
HIjO8BKKG9EZTl0oOsOpY0Rn7yNUHIue5P/YD+h9lboe+wHRGXv2G8KxZ78h
+mPPfjc49l2D8+KwZ98W3OtdwTly2LP/CI79keB8Oexv1PwCjn3J4Nw57M/W
PAWOfZngPDrs2QfhfSCyzw3OqcO+geZNcOsfnF+HPXXpPieB9gTn2mE/UfM4
nwsp+4LgvDvsqSuGY39HcA4e9tTHfhasR1QKzsfDnvpPOPatgnPzsKceEu46
3OC8evI07Felf8LD+YXz9pqP09+c59b8nX4FX6b5Pv0H7n1YnC9Mvor9KeoP
cPa/8N7hg5Sv4P36uZTf4D16H5jyIbwvt1P5E9c9i1OfjP7wt4L8jPNhyvOg
D5x9kegDV146tS9enPy291+Js68KfeDsA0IfOPtW0Ac+Rnly9IF/rzw5+jjv
rrwZ+sDPVZ02/S1cd3hXdZDku6gjpZ7M+3G1jkkdD/yPym9TV+F1D9WTtNF6
M7yz8uSsJ4V5NuoyyWNQp0p74NT70R74DNUV0B7nSVSvQnvg1AOQN4eP17oV
7WF+Sh0s7YE30foy7YE/rroI2mN71cPQHtd/qd6A+3r+ovka94VPUFzNfeHU
g3Ffc+J83Rd+QnUL6ADP1XyH9hA3Uq/rfkI9idbx3U/EqTdzPxFvprod9xPW
bVQXsYj1X/FrtB5Ke4gHVmt9lvbAqaukPXDq2WgPfK/qgqi3gFN3wTornPVW
dPN6mtYlwzgkIzhvFp4WxA/w8LzZuHgAnh6M+44HgvHd9y367+jicLxuEIzX
8PIal3sF46/rTIJx9jaNs9nB+Mi687xgHFyvcZD3iz/PV52261zFP1RdCu8X
Xlb1VNRpwcuoXos6GDj1MKwHw8P1IPznm1rvdn2FOHWM51JHQb2z5q2sL4br
I56XBf6Q9WauE64HhZw4IeT0z9D/e/6r63EOgOe/rLNoPPK8VZz9lZ63irNP
kPagX7hORH6Vc1TQAV3Zt+J1JfkBzifB3vU/wXXC98j3GOpD/BDqg/5h+9ET
v32/1mG/ZlxTOxtqHZb1Xa7POi/rhWHe+AutF4bzbtbtwudinTJsJ+t5YX6V
9bxwfsq6ZrH1ca07hv3zYq07hus7cc8V1564541rJ+umYTzMumn4fn+nddDw
/d6huiLXw6oui/0JPr9B+ztcRy5O/Tz1tXDqk6kDgFPnSZ0ZfJr8GPU68JIa
L2gn8UkzjQv0T74j9kPRfjj7TWi/6x81rrkumXUfjYO0H07dKe2Hb9Y4S/vh
32lcpv1eJ1d9Gu3ne6+i74X2w/tr/wvtd/254gTaD6d+m/bDqYOl/XDqD2k/
/AbFObSfuGi58sbWn3ys8r3Wn7pi2Vt/8SuVp7X+4tSTW39x6nKtP/XRqoek
Psz1Zcqjup/LL+Wpfo/2ex+k/Jj3HYlv0PvyPhBx9l/QftdfU++t9sPHKB6m
LhPeSPEz7YdvUrzN94mfz1I9jOsdxQ+rzpDnYt7NPju+K/h41fvxvPBdO0+t
t/Q5HKq3RAfX6WtfCf0GPlP1lugDp56f9wT/Vuss6Ab/s+Y16AKn7pf+AF/D
fijpCacOkLo0P1dQP+n91kFdH3yJdON7hrNfhu8Ezn4E+h+8o+J56mjh1NNS
9+l6W9V/8r7w59nU00pnOPsdqMf1fFzz2ZLkxcRvlQ68Xzj1XbwX+HjNf+PG
zdMdp053nI0b1+Ligbj4wfvNdN8HNt7ap+9LCfdPeC35N/cb8Zq/W5M5bkoL
t4/+0qVfwZY/PXG+xwn4ximNdr3UP7XPEb7v8LCdzbIr2n/Bdf6A99HA1+UP
+/7Oz6q437uflri17oJePy7xeSzinYJ20n879xvY/52cZqnzVcTzh7Rqtbd/
fbfT49fogQ2qfJPaNw3Hn/tcFPGXJyxtVWleI7cTPk3t93km4geHnbe+7Dmp
fQ18T1+yr5bzScSnKg/gc0jYJxqc++R10qL/jrfxuSKn2rudwTqv9YSvU37A
5zLp+x4+6s4Fyzs3SvUr8cEjcuZ8tri2/aTn9U/VyaiWUSvV39j3ofHO5yaJ
D5L+7ofia9V/coK8AftHXK8r/va7Bc/e/3EHfyde15g28tftpl7m9sOvXdxz
+5Wvp9oPz9Zz0X74WRqXaT98s/oV7YfP1HeRE+QZwv0F8L76TvkOnQ/fc+p5
F87bB+ddwMcH5114v2lw3gX87eC8C+fVg/Mu4PWD8y7g4XkXrk8PzruAvxuc
dwG/MDjvAt5b+Xz0hO8JzrWAnxWca8G/azb4uxbvtWru7w5+3itRP0EH+ET6
v54XXlXxmNcRxe+R/6H98Ebyn7TT+32vv2DZ+ArF8xLvxOQlLlVeonyQl6Cu
vkwwDt4X1M/TvwqCcxr93as99CvXK6r99J8Uj57X+x7F8W/0B/gI6cl7hx/T
d0o74QvUz9EL3kLv0fso1V7Oe+G5eM+Mg9jBN+k75bngjBc8F/yVcqfuV4Lj
D3kuOH7GeTfxTH2PPJf3qbxyqg7OV+s75bnoF3+T3+O54HvkP/n3Pn9F/pbn
gv8789R9gq47kj/nueD4Sa+bineT3+C54JP03r1uSp2S/Infl/o18Ynflzjx
g9+XOOcf+n1hr/HR7+tUe/dDeLr8vN+X+Hvyb35f4hfLD/j70n3ukd/jufAT
3yge4LngaxU/8Fxw4g2eC/6fzFP318Mf1/vluTy/U3+mnd5/Lz/Mc8HxY+F8
jX2F9sviF8lvY48fCuNJeLg/zv5S8V7cfA194MRd4XztzWB/nHmwPw6+I9gf
B1+n7yhuvsbze54of+L1b/FewfgFbxiMCz6XKGYe9/7/0Txu9y/M43rHzOO8
jzJYt6U9PMfVeu/c1+dOKc7k+nD8M9eHp2scj8uTe9yin2r8clwqPll+0vEn
eXJ9j+jG9Ynb0QdOnMnzwyfrvv8PqxcrMg==
               "], {{{
                  EdgeForm[], 
                  Directive[
                   Specularity[
                    GrayLevel[1], 3], 
                   RGBColor[0.880722, 0.611041, 0.142051], Lighting -> 
                   "Neutral"], 
                  GraphicsGroup3DBox[
                   TagBox[{
                    Polygon3DBox[CompressedData["
1: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
jr5NPked5++Fz3he5CHSOuUbqmtPh99R/Z6cH6p2V+2rffhZNXhyr0A9g6Xw
RZnroyfhczPXPl8V7kGoXp6bnHOqRn80OT9UfvpJ4T6U6ugHkmso5Y+Tk+tc
5aprk31TPvpusl/IP96Dh0nD+e7XyX4kf/oyWVukMRuTNUfa81myzkhvXkq2
PdngumS/k/+tCN2oKt2QJsIPc/818K3wLMU+eDg8G34/2Zfl0x8la8Ic1qcn
76HqO/WIlcu1U73A+smZ68cZyXFK8Wpmcq9DNcTzyT4uX1fvQfv8ufLn5Hpf
OfvG8MHdmaeyfmrmuvUD+E7dE34Gvjhzff0cPDBzfX1G6V6qctRRyTm/+gq/
JOfPJ7D+S2FtPZr5+8L+2Y7528I+06Zw7dyG77wmOyqs3R2VJxfW/aOYR4Rt
K38YHjbchPUfCvt5+8J+Id85IuK+bPsweGPhXk8L5i8K93pa6rkK+3Pbwjqg
M9LzrAjbkAZ8XLin2Uy2UbifdSTzT4VjyZU6u8K9QvV7vyzcg2tV2Gfld82V
F4cvzwubkQ20Zv3HwjGmA/PosFXtYfXIt89gXle4z6hct2phPTydefPCeviv
wnWN6peuhXMbnYXyGdUyqnHOZN6isI4pX327cI9VefVdYUtN4ZHhO8qXfgsd
PlHPmVxDHQ+nwrHg1MJ5pvI65YSjQkMOZ70sXL+cxvxXaPvJcKVwrXGKzi65
djgW/iO5Ljsp8lXlbMpjF4QNSx++KRyrtG8vhy/L716M2Cot/aBwP7RJ+Jr8
dH1oy7WhY0tC86WrqmtU33Vn/rBwf1M282r4smLCqvBT2e2i8Hdp9Wvhs4on
K0ND2oa/XB86+XpybqD4Mzf8SLY3L3RbOvZY+JRsZn5y7iGdnBN6uyC0Ttoo
G14dvimbfwK+PLNNPhf5g2LBG5HzyK4+K9wnlV9sVTrWdtM5wn/lPpca0fvq
AleDi2Tb27J0PJZdbR55WmfZWvL7CGlLddbLZDucHfFCcerXwrHwGObfCsfL
TrLD0jW5bLIqnJLtuQqcJ9tMCVeSbSyH/8xtGxX4j9w2WZTZ38WPbCmDf8+t
OW8VrkNUJ35UuE8tm9xQuA8uO/9Lz5Tbnv8snDcfJzssnJfIJj8v3HeW/27D
eDbz/nQrXb+pPm1R+l2dtP2L5Fr+24gp4yO+KI6o9pcGqtZWf0D7PzFiuuL1
Q5EDzIl4MS7i1FfJtbZi0L9Kv39SDa44pVpbe9sx9kT9BMVl1bDa5+al358p
1nyX3A9RvP608Du5K5jXFn6nohrzm+Sad1PEO/U3pL0XF+4FKb4cG2ek2n9K
xGLF1jERO6STW5fOF8/SvpXO4eRfR4e9qWfSvvT+q2fybuH3MarHlZ+cGXnL
UXHu6re0LP2OUzF6XMQ75SdD+Ny34h71MWEP6qVsVTg/lK1OijxB+cAtfD60
4prgZvjAivehU9ib+jPqvag+0vO/V/hdjnoXNzG6RO+tQ9ibejs9S9fJqlm6
lH53qJ7SmaXfL6oX1Kt0LaT+0vHhX+otnBC+o57DceEL6p+sjzxEucTdEa/V
t1Ht9k7mXm4Prj8rd52ueD0x8oeupes69azUj1qTuSfcm/UWyXWfYn3vyAFU
O6vPo5p618K1hnLeVqXfNys/eafwezv1KNqUfkeo/ES5kHpZitdHln7HrJxh
oDQus0+pHlffSXW3em5vZO6Tf57cT1Me9T8lkf3F
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
/wNvMjch
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
fmPsSdVUn0fIzeBnRl2U/x/uJGUd
                    "]], 
                    
                    Polygon3DBox[{{1172, 647, 449, 347, 346, 1137}, {1227, 
                    798, 601, 295, 392, 1064}, {1069, 606, 398, 253, 254, 
                    1132}, {1103, 762, 817, 279, 368, 1140}}]}, 
                    Annotation[#, "Charting`Private`Tag$2286259#1"]& ]]}, {
                  EdgeForm[], 
                  Opacity[0.25], 
                  GraphicsGroup3DBox[{
                    Polygon3DBox[CompressedData["
1:eJxFkb1KQ0EQhecm14AKsbAxCoKYWJlCY2keIDEIXn/ARiSNRvKjjS+gTXwA
ewXfxDeIpXYxFhESMKBlvsMOWJz7nZ3dOzM7u1bvJO2UmW2iNDrgcxyZFeGI
9Sfqo11i77AAb9ALPgf3UQZvsM4/J/AuNjvEL+O34QXrVY5swSqxGfwebKJH
fAtesfeKv4RjOEE9tMh6hf0u7MIPYhtwnbxZ/FMUzn+hAWrEgcqjM+o9D2/V
A2cf4rDuez/X+Fni9/gl/BvxJBXu/oMWvJ7qlmHe56B5zKEyfl73dK+YeiiQ
65yLnrGuEd+BHZ+b5lfxOVS9/z+/g2qq9tD562/wbeHcwHMpZzYK+yPvs+Zv
oTdp+Wzb0X8u3Tmhr1Niz+hIc4GldKg/9plP3KvmFBDeQmI=
                    "], VertexColors -> None], 
                    Polygon3DBox[CompressedData["
1:eJwtj6sOwlAQRPfSgqzBEAQJoXxA65vgaUJSAcWRGh6idVUYvgAUHhL+CAmO
h4CP4GwWMbkz+5jZ2y+qrGyISBv4YOKJjJ1IE37gXUA61F7oNQNnanMwAyH1
J7jQq9A7+jk6gd+p5RhvqQXoFL33bEd3p6CAx6ALH4EhvGb+Kpap2epZ0juK
ZannDR46y1LPBB07y4pAT+xOzdI/tNCps79pZoAe/G/R+Yd6gyV85dtf32AD
z8j7itX0phM+H7Ed9fgBv/sidQ==
                    "], VertexColors -> None], 
                    
                    Polygon3DBox[{{1128, 196, 818, 805, 1129}, {1156, 850, 
                    418, 30, 880}, {1376, 805, 320, 286, 1142}, {1161, 851, 
                    818, 196, 1043}, {1155, 849, 813, 14, 866}, {1162, 852, 
                    819, 212, 1142}}, VertexColors -> None]}]}, {
                  EdgeForm[], 
                  Opacity[0.25], 
                  GraphicsGroup3DBox[{
                    Polygon3DBox[CompressedData["
1:eJwtkL8vw1EUxe9rO7H4kZh9O/jVpVNJTWaiNAwaAxUGEiyiIiaL+Af8WRLx
a6RdSlJJJSRYfE7uHU7Oee+ee9+7J2se1Q9zZlYGebCWzAbhAlwBV+gR+Lhg
NoRuwfXwyDsHbtBj8H5o3e2ABnoXfqSnBTfhB1BOPifjwQv0ErwX8xvoA/Qd
ugSvUB9Aryb3tNEVPH34B7yZ+7vwBPdFfM/oeXgcPKGr8BZYRG8n79ecInxL
7y96I+/9mjMJz4IS3oW896i3mfzdL/AauSif0eR7at9h+J6Z5/Ap/MHdu/l7
mqmsr6lNh9YfqvHPLLn/O3ouYxftdBKZKMNaZKJsOuY97fiX/tczz/YF3sz5
PHmScuR8hlinPhUe7av6Z3hmOP/By5GzMu5GXb5OZN+PHHqh5fkH231KSQ==

                    "], VertexColors -> None], 
                    Polygon3DBox[CompressedData["
1:eJwtkL2OgUEUhs8YFY1qsyVb+G1UFC5AoUEkQlQkGonViG+JZMuNGxCJq9L4
SqFB4gaWwnMcxZt53nfOzDkzqf53cxwRkU8URSUvkncidzgP/xL28TX8Fp9B
Z/iCst6yLjxwVpvGN7hwRzbCf+GP8BXl4A76F+uhvZbUfMBrstCb/nQOZ3vp
d88D2QzfhU9idw51NhRQO0PTqNUs4Lmzs9pDZ9A3am/NdO/H2Zx1nReOsb9h
DThfZK2iCVxAN7E363te/4MS7/4t7tjDSerb5D18TmdHKW9ZBQ7FalfwAy6w
lr31jOObzmZ5Aki9KpM=
                    "], VertexColors -> None], 
                    
                    Polygon3DBox[{{1144, 16, 810, 846, 1237}, {1143, 224, 801,
                     844, 1236}, {1122, 210, 593, 853, 1238}, {857, 2, 823, 
                    833, 1231}}, VertexColors -> None]}]}, {}, {}}, {{
                  GrayLevel[0], 
                  
                  Line3DBox[{246, 1, 242, 227, 858, 16, 1136, 327, 304, 1237, 
                   846, 251, 298, 250, 1231, 833, 299, 252, 394, 2, 809, 234, 
                   246}, VertexColors -> None], 
                  Line3DBox[CompressedData["
1:eJwt0s9L03Ecx/Hv1swExQWFHRQRDwZtRdSIQBKn5lK8NJq1FUFEtYJKnaAg
rkRdoHaJ8KJCl04d8yAdu3SspEEKdew/qFM/Hh/o8OT5er+/L/b9fL/7dt16
dPlhLIqiV1gVDnCWBzBmWEhE0aA8hIsYsava5eRD6NSftDvJE/ZFuxKuY8l8
g28iiS29kt4bvs/veJan9O64fhf3UDOX+QGO4Yfea72f/Avb4Z72H/Wy5im5
gml8Cue165S/6OXjUVTns3bzdlU8Cc9jfsoL6MYVva96Bd7jcd7njN5ieBYs
h3dgrvEz9OCa3je9IpfwXZ6zv4CC7orzHJf70RHeaziH3Xm5He/1D5uTeCtX
+LF9G86F+5iPcgZHUA/31/vAM7zD5fA+9G673ooz4azmFj6NZqzp9epVOc1X
7XZ1Rs2Nch8O4rPdJbsGuUVvkzfCb8gp+7x8KnwnyIX/neOIYR1Nei/Dt8Ev
uJFP6I3Jafw1D5tT8h/5N57Lif/f3z+5hEJn
                   "], VertexColors -> None], 
                  
                  Line3DBox[{400, 5, 329, 330, 331, 847, 332, 334, 256, 6, 
                   400}, VertexColors -> None], 
                  
                  Line3DBox[{409, 10, 335, 336, 337, 848, 338, 340, 260, 11, 
                   409}, VertexColors -> None], 
                  
                  Line3DBox[{417, 14, 813, 341, 849, 1155, 342, 343, 345, 850,
                    1156, 265, 880, 30, 1127, 229, 247, 15, 243, 235, 417}, 
                   VertexColors -> None], 
                  Line3DBox[{267, 61, 911, 76, 350, 308, 270, 1148, 306, 266, 
                   267}, VertexColors -> None], 
                  
                  Line3DBox[{924, 75, 352, 353, 354, 1152, 355, 357, 273, 90, 
                   924}, VertexColors -> None], 
                  
                  Line3DBox[{275, 136, 984, 151, 362, 312, 278, 1149, 310, 
                   274, 275}, VertexColors -> None], 
                  
                  Line3DBox[{997, 150, 364, 365, 366, 1153, 367, 369, 281, 
                   165, 997}, VertexColors -> None], 
                  
                  Line3DBox[{1043, 196, 1130, 231, 248, 211, 244, 236, 594, 
                   212, 819, 374, 852, 1162, 286, 320, 282, 851, 1161, 283, 
                   1043}, VertexColors -> None], 
                  
                  Line3DBox[{289, 215, 596, 216, 387, 290, 315, 855, 288, 314,
                    289}, VertexColors -> None], 
                  
                  Line3DBox[{293, 220, 600, 221, 393, 294, 317, 856, 292, 316,
                    293}, VertexColors -> None], 
                  
                  Line3DBox[{604, 224, 808, 233, 249, 225, 245, 237, 1067, 
                   210, 1141, 375, 376, 1238, 853, 377, 378, 379, 1236, 844, 
                   381, 297, 604}, VertexColors -> None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{31, 419, 32, 420, 33, 421, 34, 422, 35, 423, 36, 
                   424, 37, 425, 38, 426, 39, 427, 40, 428, 41, 429, 42, 430, 
                   431}, VertexColors -> None], 
                  
                  Line3DBox[{882, 632, 881, 1242, 1074, 883, 634, 884, 1243, 
                   1075, 885, 636, 886, 1244, 1076, 887, 638, 888, 1245, 1077,
                    889, 640, 890, 1246, 1078, 891, 642, 892, 1247, 1171, 
                   1313, 893, 645, 894, 1248, 1079, 895}, VertexColors -> 
                   None], 
                  Line3DBox[{45, 433, 44, 432, 43}, VertexColors -> None], 
                  
                  Line3DBox[{909, 824, 908, 1321, 1178, 907, 1320, 658, 906, 
                   1319, 1177, 905, 656, 904, 1318, 1176, 903, 654, 902, 1317,
                    1175, 901, 652, 900, 1316, 1174, 899, 650, 898, 1315, 
                   1173, 897, 648, 896, 1314, 1172, 1137}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{91, 477, 92, 478, 93, 479, 94, 480, 95, 481, 96, 
                   482, 97, 483, 98, 484, 99, 485, 100, 486, 101, 487, 102, 
                   488, 489}, VertexColors -> None], 
                  
                  Line3DBox[{926, 1180, 1323, 925, 676, 927, 1181, 1324, 928, 
                   678, 929, 1182, 1325, 930, 680, 931, 1183, 1326, 932, 682, 
                   933, 1184, 1327, 934, 684, 935, 1185, 1328, 936, 686, 1329,
                    937, 1186, 1330, 938, 689, 1138}, VertexColors -> None], 
                  
                  Line3DBox[{940, 690, 939, 1256, 1085, 941, 692, 942, 1257, 
                   1086, 943, 694, 944, 1258, 1087, 945, 696, 946, 1259, 1088,
                    947, 698, 948, 1260, 1089, 949, 700, 950, 1261, 1187, 
                   1331, 951, 703, 952, 1262, 1090, 953}, VertexColors -> 
                   None], 
                  Line3DBox[{105, 491, 104, 490, 103}, VertexColors -> None], 
                  
                  Line3DBox[{121, 507, 122, 508, 123, 509, 124, 510, 125, 511,
                    126, 512, 127, 513, 128, 514, 129, 515, 130, 516, 131, 
                   517, 132, 518, 519}, VertexColors -> None], 
                  
                  Line3DBox[{955, 1188, 1332, 954, 706, 956, 1189, 1333, 957, 
                   708, 958, 1190, 1334, 959, 710, 960, 1191, 1335, 961, 712, 
                   962, 1192, 1336, 963, 714, 964, 1193, 1337, 965, 716, 1338,
                    966, 1194, 1339, 967, 719, 968}, VertexColors -> None], 
                  Line3DBox[{135, 521, 134, 520, 133}, VertexColors -> None], 
                  
                  Line3DBox[{982, 1146, 1270, 981, 1096, 1269, 980, 1340, 
                   1195, 1268, 979, 730, 978, 1095, 1267, 977, 728, 976, 1094,
                    1266, 975, 726, 974, 1093, 1265, 973, 724, 972, 1092, 
                   1264, 971, 722, 970, 1091, 1263, 969, 720, 1139}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{999, 1203, 1349, 998, 1271, 1097, 1000, 750, 
                   1001, 1272, 1098, 1002, 752, 1003, 1273, 1099, 1004, 754, 
                   1005, 1274, 1100, 1006, 756, 1007, 1275, 1101, 1008, 758, 
                   1009, 1276, 1204, 1350, 1010, 1277, 1102, 1011, 1278, 1103,
                    1140}, VertexColors -> None], 
                  
                  Line3DBox[{1015, 1279, 1104, 1013, 1280, 1105, 1017, 1281, 
                   1106, 1019, 1282, 1107, 1021, 1283, 1108, 1023, 1284, 1109,
                    1025, 1285, 1110, 1027, 1286, 1111, 1029, 1287, 1112, 
                   1031, 1288, 1113, 1033, 1289, 1114, 1035, 1290, 775, 1037, 
                   1291, 1115, 1039, 1292, 1116, 1041}, VertexColors -> None], 
                  
                  Line3DBox[{1040, 1364, 1217, 1038, 1363, 1216, 1036, 1362, 
                   774, 1034, 1361, 1215, 1032, 1360, 1214, 1030, 1359, 1213, 
                   1028, 1358, 1212, 1026, 1357, 1211, 1024, 1356, 1210, 1022,
                    1355, 1209, 1020, 1354, 1208, 1018, 1353, 1207, 1016, 
                   1352, 1206, 1012, 1351, 1205, 1014}, VertexColors -> None], 
                  
                  Line3DBox[{347, 449, 62, 450, 63, 451, 64, 452, 65, 453, 66,
                    454, 67, 455, 68, 456, 69, 457, 70, 458, 71, 459, 72, 460,
                    461}, VertexColors -> None], 
                  Line3DBox[{269, 814, 74, 462, 73}, VertexColors -> None], 
                  
                  Line3DBox[{279, 817, 164, 549, 163, 548, 547, 162, 546, 161,
                    545, 160, 544, 159, 543, 158, 542, 157, 541, 156, 540, 
                   155, 539, 154, 538, 153, 537, 152, 536, 361}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1150, 1299, 1055, 791, 1054, 1371, 1224, 1298, 
                   1053, 1370, 1223, 1052, 1121, 1297, 1051, 1369, 1222, 1050,
                    1120, 1296, 1049, 1368, 1221, 1048, 1119, 1295, 1047, 
                   1367, 1220, 1046, 1118, 1294, 1045, 1366, 1219, 1044, 1117,
                    1293, 1042, 1365, 1218, 1232}, VertexColors -> None], 
                  
                  Line3DBox[{1151, 1305, 867, 618, 868, 1165, 1306, 869, 620, 
                   870, 1166, 1307, 871, 622, 872, 1167, 1308, 873, 624, 874, 
                   1168, 1309, 875, 626, 876, 1169, 1310, 877, 628, 1311, 878,
                    1170, 1312, 879, 631, 1235}, VertexColors -> None], 
                  
                  Line3DBox[{1154, 1377, 1068, 859, 605, 860, 1239, 1069, 
                   1132, 607, 1133, 1378, 1070, 861, 609, 862, 1240, 1071, 
                   863, 611, 1134, 1379, 1072, 1135, 613, 864, 1241, 1164, 
                   1304, 865, 616, 1234}, VertexColors -> None], 
                  
                  Line3DBox[{1157, 661, 910, 1249, 1080, 912, 663, 913, 1250, 
                   1081, 914, 665, 915, 1251, 1082, 916, 667, 917, 1252, 1083,
                    918, 669, 919, 1253, 1084, 920, 671, 921, 1254, 1179, 
                   1322, 922, 674, 923, 1255, 1145, 1158}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1159, 1196, 1341, 983, 735, 985, 1197, 1342, 986,
                    737, 987, 1198, 1343, 988, 739, 989, 1199, 1344, 990, 741,
                    991, 1200, 1345, 992, 743, 993, 1201, 1346, 994, 745, 
                   1347, 995, 1202, 1348, 996, 827, 1160}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1163, 1382, 1147, 1066, 1375, 1228, 1303, 1065, 
                   1374, 1227, 1064, 832, 1063, 1381, 1230, 1062, 1125, 1302, 
                   1061, 1373, 1226, 1060, 1124, 1301, 1059, 1380, 1229, 1058,
                    829, 1057, 1372, 1225, 1056, 1123, 1300, 1233}, 
                   VertexColors -> None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{3, 859, 18, 868, 33, 883, 48, 897, 63, 912, 78, 
                   927, 93, 941, 108, 956, 123, 970, 138, 985, 153, 1000, 168,
                    1016, 1017, 183, 1044, 198, 1056, 213}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{396, 605, 397, 1306, 619, 421, 634, 436, 1315, 
                   649, 451, 663, 465, 1324, 677, 479, 692, 494, 1333, 707, 
                   509, 722, 524, 1342, 736, 538, 750, 552, 1353, 765, 1281, 
                   567, 1366, 780, 581, 1372, 794, 595}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{398, 606, 1239, 399, 620, 422, 635, 1243, 437, 
                   650, 452, 664, 1250, 466, 678, 480, 693, 1257, 495, 708, 
                   510, 723, 1264, 525, 737, 539, 751, 1272, 553, 1354, 766, 
                   1282, 568, 781, 1294, 582, 829, 820}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{7, 861, 22, 872, 37, 887, 52, 901, 67, 916, 82, 
                   931, 97, 945, 112, 960, 127, 974, 142, 989, 157, 1004, 172,
                    1024, 1025, 187, 1048, 202, 1060, 217}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{403, 609, 404, 1308, 623, 425, 638, 440, 1317, 
                   653, 455, 667, 469, 1326, 681, 483, 696, 498, 1335, 711, 
                   513, 726, 528, 1344, 740, 542, 754, 556, 1357, 769, 1285, 
                   571, 1368, 784, 585, 1373, 796, 598}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{405, 610, 1240, 406, 624, 426, 639, 1245, 441, 
                   654, 456, 668, 1252, 470, 682, 484, 697, 1259, 499, 712, 
                   514, 727, 1266, 529, 741, 543, 755, 1274, 557, 1358, 770, 
                   1286, 572, 785, 1296, 586, 797, 1302, 599}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{9, 863, 24, 874, 39, 889, 54, 903, 69, 918, 84, 
                   933, 99, 947, 114, 962, 129, 976, 144, 991, 159, 1006, 174,
                    1028, 1029, 189, 1050, 204, 1062, 219}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{407, 611, 408, 1309, 625, 427, 640, 442, 1318, 
                   655, 457, 669, 471, 1327, 683, 485, 698, 500, 1336, 713, 
                   515, 728, 530, 1345, 742, 544, 756, 558, 1359, 771, 1287, 
                   573, 1369, 786, 587, 1381, 831, 821}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{412, 614, 1241, 414, 628, 430, 643, 1247, 445, 
                   658, 460, 672, 1254, 474, 686, 488, 701, 1261, 503, 716, 
                   518, 731, 1268, 533, 745, 547, 759, 1276, 561, 774, 1290, 
                   576, 789, 1298, 590, 799, 1303, 602}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{597, 1301, 795, 584, 1295, 783, 570, 1284, 768, 
                   1356, 555, 1273, 753, 541, 739, 527, 1265, 725, 512, 710, 
                   497, 1258, 695, 482, 680, 468, 1251, 666, 454, 652, 439, 
                   1244, 637, 424, 622, 402, 1378, 608, 811}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{601, 798, 1374, 589, 788, 1370, 575, 1289, 773, 
                   1361, 560, 758, 546, 744, 1346, 532, 730, 517, 715, 1337, 
                   502, 700, 487, 685, 1328, 473, 671, 459, 657, 1319, 444, 
                   642, 429, 627, 1310, 411, 613, 812}, VertexColors -> None], 
                  
                  Line3DBox[{603, 800, 1375, 591, 790, 1371, 577, 775, 1362, 
                   562, 760, 1350, 548, 746, 1347, 534, 732, 1340, 519, 717, 
                   1338, 504, 702, 1331, 489, 687, 1329, 475, 673, 1322, 461, 
                   659, 1320, 446, 644, 1313, 431, 629, 1311, 415, 615, 1304, 
                   413}, VertexColors -> None], 
                  
                  Line3DBox[{834, 778, 1365, 565, 1279, 763, 1351, 550, 748, 
                   1349, 536, 734, 1341, 522, 720, 507, 705, 1332, 492, 690, 
                   477, 675, 1323, 463, 661, 449, 647, 1314, 434, 632, 419, 
                   617, 1305, 842}, VertexColors -> None], 
                  
                  Line3DBox[{836, 1300, 793, 580, 1293, 779, 566, 1280, 764, 
                   1352, 551, 1271, 749, 537, 735, 523, 1263, 721, 508, 706, 
                   493, 1256, 691, 478, 676, 464, 1249, 662, 450, 648, 435, 
                   1242, 633, 420, 618, 395, 1377, 845}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{837, 830, 1380, 583, 782, 1367, 569, 1283, 767, 
                   1355, 554, 752, 540, 738, 1343, 526, 724, 511, 709, 1334, 
                   496, 694, 481, 679, 1325, 467, 665, 453, 651, 1316, 438, 
                   636, 423, 621, 1307, 401, 607, 839}, VertexColors -> None], 
                  
                  Line3DBox[{838, 832, 588, 1297, 787, 574, 1288, 772, 1360, 
                   559, 1275, 757, 545, 743, 531, 1267, 729, 516, 714, 501, 
                   1260, 699, 486, 684, 472, 1253, 670, 458, 656, 443, 1246, 
                   641, 428, 626, 410, 1379, 612, 840}, VertexColors -> None], 
                  
                  Line3DBox[{392, 1064, 206, 1052, 191, 1033, 1032, 176, 1008,
                    161, 993, 146, 978, 131, 964, 116, 949, 101, 935, 86, 920,
                    71, 905, 56, 891, 41, 876, 26, 1135, 259}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{254, 1132, 20, 870, 35, 885, 50, 899, 65, 914, 
                   80, 929, 95, 943, 110, 958, 125, 972, 140, 987, 155, 1002, 
                   170, 1020, 1021, 185, 1046, 200, 1058, 384}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{841, 616, 416, 1312, 630, 432, 645, 447, 1321, 
                   660, 462, 674, 476, 1330, 688, 490, 703, 505, 1339, 718, 
                   520, 733, 1269, 535, 1348, 747, 549, 761, 1277, 563, 1363, 
                   776, 1291, 578, 791, 592, 1382, 854}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{843, 631, 433, 646, 1248, 448, 824, 814, 825, 
                   1255, 815, 689, 491, 704, 1262, 506, 719, 521, 826, 1270, 
                   816, 827, 817, 762, 1278, 564, 1364, 777, 1292, 579, 828, 
                   1299, 835}, VertexColors -> None]}, {}, {}}}, 
               VertexColors -> CompressedData["
1:eJztXXlUj3kXj0lIKaQsU5Q9a4iKXEuIaQZDlDVKImtCTJaEkmXsBpFkyd5Y
yj6WbEVEY6m0UL+1TWOt5HWO+/Sdue+556f3Ne9wztuf9zzn93ue+9zlcz/f
z/1lPm7aj+MramlpeVbS0vpGS/orgPUh15LTH+fD5SIIeuujAk32/ovsWx1+
roLZx33aNq6aAUU6ue/XLZGDi/uLvZ7e96Bosp2rs90VeLFvlcq3YRaUNlv4
enW9K7Dr+C0LoxGXWPvr0D4pjzqq4UJKXOODhqmQ9cRoenivq2XfG2UQu147
WAEtFod2sox9VGY/rFt6ZU9JLjS8M2ZB0NNsjffP2bvNcqwcWZQH8epmnX0G
KsrsxTv6F48wk0Gt7YOr681OLPdzafrejYejxmvXz4dC84Mxh8PE984M6pJ5
N0QJ0YXrH56/nwK1N9SG7wryoXOVfEMnmyzwbDwkcnLGdfAyc7Ra2C0XzPfL
f3M/lgGL3uvX2e5+DWJqjNAyaZEHV42bBZllZ0JFw5CdDbKvlX1+9Tcl7Xq6
ZEORErwXdE0osx9BPzckfnZqtuLVtRg17Ay6tU3XOrPMfi3pfVFnq1yombVM
MbPgWZm9+zc6L3+cnguRjotTXoZkldnX7hicERudAxuSzvvuiX1aZk/d7NTH
ZqkcJtbYs3HTid/BssqMSn305HApvPrFu+0SwePC2AD168sa/Uzjk/OnZJ/6
w7nbKTsVcBVSx7oZPC6z9zyZdL7ETAFrXO7Ma77sYZn9zbYt88cVyGF53wVh
1d8+KLNvetrgcRctBTQ1KXKq1kJc32Sif2iMrQKSEwdrmTwU9kPo53rEz+2j
q60Y9EABw9tnT7b/VdzPpa5eP9w2UEL13G4N+41JLrOPCczbv7eBEg6cO3O7
98/CbjTp+ES95wqIODixsGVFYVfcjXdtPU0BU2JHVnvhJ773KfrfH/0v2fXC
PsZ/H4x/Lt+5+NTkzzPmq47Wc1BBj4zgE79pp5XZ5yVDdJOqalBOGzbmUCvx
Hic7HVlpcU0FTrZNm8xcnV5mD8zaklv7/of3m3B/5uojqWX2A+hnE+Lne3Z5
tn90lcNc6/Fvrz5OKrMr7z3eKusnA1lcTcfMt4ll9jQHxxnPdGQwrnHIkeI2
wr79XdGcvHgZvGoUdWpD4P0yuwn6/xDx/waM/1AS/z2x/iRh/eHinMt3TfHJ
+bNCr3tBO5rkwAFtV8shKSKv9eJrr0yPVUP6z8oKaY7CXs/rzsji8Sq4smDU
1B+90/7Nz8bEz3Yxp+L0D8jAe2lKaQVT4Z9+Q3y2tfguG2Q34u+1y71dZh+a
ejJskioLrrzUt3KJiC+zp6P/JxD/u2P8nyLx3wvrTxSpP7QOc37WVD+5fOfi
k/Nnz7puDvZT1XDcKep+9FXxXtKeb7LQ6agC61ltEgySnmiMZ7/Wz7W/SZXB
m9W6YQ4nhJ9r6TR/Fh+eDZt/j1px++0dUSfR/wXE/zkY/7kk/mOx/piQ+nMD
678Rqf/Uz5r6O9ePuPrJ5TsXn5w/zy+cNCdpgRJ69F4yY+bRFI1+3hJmGtVx
rRwKLpwozngk6uRc9H8p8X9XjP8ZJP4fYP1ZTOqPNdZ/N1L/uf57APFPHYJ/
OLzE9XeuH3F+4PJd0/XUzn2vZDf9RLv0XA3K+Tnc89Yi9n1o1/tE/Mm9L66/
c/2Iq59cvnPxyfnhN4z/viT+MzBfupJ8+Rbz6wbJLy4fLTB/k0j+VsZ8T8R8
V2F92Ir1IZXUBw4/c/iTw0tcf+f6EVc/uXzn/Mz50wHrfzSp/9WxX2SQfiH1
F0fSX9ZhP/oW+9Eh7F8x2L9KDD72r/90TuHwPIc/n2C/diP9WurvF0l/5/oR
Vz+5fDfF+LxJ4pPzp4R/9hP844d4SU7w0gvEV/MRX7khHjNGPPYT4jFNfubm
TW4+4vA8hz85vMT1d64fcfHM5TsXn5w/TyH+tyP4vzvOC8E4L9TC+cKazBfa
lT/OIzNwHtGa8nEekT6Hzu+Snc6bkp2bjzg8z+FPDi9x/Z3rR1z9pPnOxSfn
T8k+Heffm2T+9cd5OYHMy6Nwvl6L8zUX5y1wfr9A5nfpc7h5k5uPODzP4U8W
LzH9nfYjqX5GY/18h/VTyncTzHd/zHcuPjX5czvyP5Ut/sr/fOqcoqnO0Pld
stN5k/teTXYOf1K8xPX38j6XpnwfifG5hvA/5X2uT7WX9/4/N3/4d93n/z//
f/Nevva4+rvv/5/6/PJ+7+e6/p+K26/d/197nH8t9/9P3c+XFv9fmv+/tPf4
pfnta8/Tr90//38vX6b9S3tf/4+Tr8v+tb3H5Dc1BgZk5UL32/u7eO/LhpXL
ogPT5udCcVxRFFTKhBsej8dsWSbOedcVhnvEacvAbWP+zvDmibAjOPZGwphs
ULn8sffyzptwY049l7HVLsMyk8SfR+rmw1JFj+/2V3sG9eqsu+0/9jp7n47e
78dnJedCdug5h4wFmbBYN9r0xelr0GSeuflJh3w4Fv4qoXDYM4iZbRJzLEDw
SHYy/TTd99lg9KxLJzsTwef4HQswresnhwvvCjNSVgo+rZntvH6lhmrYsWZB
/VU2gg95NllHt2CzEhbq9FnpVyz4KLdxdx/c9cqH3hMse7UYrSyzdxtw6m1O
Vg64r7tTI9KaP+eV7A5ZFd5275MLDlHJq180Enyd+UVb+Y4XORA68P2m2iPF
57is35/VZ0wu+K7MS7YZK64vQf7WmPBXF1vJLnerpgb3mMaej9uK55J43UnI
K0bnblz7y2o1bJv36qeRxanwrZbMt/Ws8vNO0ud7Jst2T6uoghl1j2rn2Itz
HB9fz6VJXZVgGDM0aodc8L177efU6dtfAa+Kmpt2qSr4RsuKl97NNFDA6nej
UxsME3xs9CzH8X8UySHU/ycvvbrCXu9Mt3rjaylgnPOUDgbuwp60uEKOaooC
KhW2udNolvj8JaHLupjtUoBVTd0d7WoJXtd+fD/93SUKSDoSb9u7ibjPnfvh
cu3aStgcdF7bcZqwtzG93mKjlhL26iSv6Wgl7FGZhgaXryqgS1XDgXUXis/n
+POsA+a7Ot6Xg/n3T8+d3Cl46QKH8MVb9OVwUbXcy6t/ElQbP2rhKfNcqGJ8
I/HKygzoKd9pc2awyMdWwyyPBK7Ihsipvx5J9xHncfaRA04YrlKC9vGX361K
FvFcXNWs8s2lKrgWsnHc9nhxvvBtYlq+X6oKEqaXVqx9T5xTNFi4b5jZLBVM
v6irarpFXO9YIfrXMa8UsGub687vago/6Jvdm7W/rgJWeqXfqjJbvJfOOzPu
qLbK4FKvNoGt8++J/P1hf+c1HWTgvt5uEkSLeB5de1LD7iEymD43QjfmnLj+
2zk2M98slkP7Qb3Mrx8Wec2dR7S9MWru0iVqmN20oL+PXORFwpqizYZ+uTA8
dcVJ5fYsWJt7UGlspYTxr9xsX8c/gNmPSwJkTWOhVvDIwUlP86F+2GS7X5tm
wUTL7y+8eyTqz+6royKytFRgeHhH1e62Iv5/fHd175sJalgYXjHC9pz43hPb
h1g3yFZDIz0Pg6i5gof3fB+ZqBighpNhWhNvbRbX3314/cHQZkoY8CD1j5V7
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
Fc4jb0v/Oo9wcfjO+OO840jmnTCcjyaQ+Ujio+IJH1UT56xoMmeF4FzWBuey
EzjHpeMc14jMcdJ8PY3sncWh/3sQ/y/DefMlmTcpPpTs23GebUbm2cXYT1uR
fjoL5+UTZF5ejHVPRereaJzHncg8TuNQsh/AeX8nmfc5nsoFeYM45A04/ucs
+vkFMy97IL9hQvgNrg+mId/iQ/gWqZ+WYj/1Q/5nOPI/Scj/SNcvx3hoReb0
8vJOX8q+w+eyHzKupGugzoZxzTPW6s69BRd7bPbo4SL2MasMut6+z+p82LF/
sDL9tFLj/cfgeZAtOQ/KxXO3hXju9hx1EadQF9EJdREhqD8ZjPoTH9Sf/Kf+
rIb3vxfvfxc+bxt83rPkecvrz83YH1uR/qhCHCJHHJKAc2IMzolhOCd64Tx+
H+fxmTiPS59TijxeLOHxuO+lfOMe5DkzkOdsjDyn9L0P8Ht9yff+r/ebvrR9
pc+VX//U/tSX9lya7FQ/yen9NOl/OL0Kp6/gzlvp+aCm56X6YcnO6T+pXlGT
vo7TiXF6J06fw+lJOP0Dd47PnUfT89MYPAcM+0SdrfQ5VF+tSY/N6Wk5/Sen
V+R0d5x+jNMpcfocTk/C6SK4833uPJo7V6Xng5wuXbqe0yFzullO58npTzjd
HedPTtfE6XA4PQmni+DO8bnzaD3EFfsQV3C6fU1xzum6OR0yp0vh9J+cjpHz
M6cT43RNnD6H05lwugjufJ/2C24PQhOO5XTynK6b0yFzelpOF8r5WdLdvSS6
O1YnxuidON0OpzPh9BLcngi3V8LxANy5GMerczrkz8Wrc/wbxyNxeidOn8Pp
TDgdBbdfw+3jcN/L7RewenjmHI3TJ3N+5vSfHD/M8ZwcX8fpnahuR7JTXYpk
5/aSuD0Xbi+D2yPg8pTTdXP6YU43y+k8Jb1iNKlLnO6O6sTqE73TMayfmuZi
bm+Lw/Pc3hC358LtZXB9h9PJc37mdMicbpbrs5yOkeruOP2YJjzA7cFRHkay
c3tY3N5QZcRFdgQXcfsa3N4B52dO183hQE5Py+lCqY6R6vHqEBz7qfuAkr28
+4bl3Xcr795WefePpP2avZ+4X8Ptj2j6PbpP3YMor56/vLr0T9VdS/by6orL
q4/9VP1nefWQ5d1XlT6H26/k9gHp/ppkp3tYkl3iE14RPoHbf5H2NToTvoLu
F2jSyVO9t2Tn9MmczpbumUp2uhcp2aOR37bRwG9Ldm6viu4BcXsrBciTRyNP
bo08+QrkyZ2RJ/dFnlyT7t0HebaNZE+Z6+NUR8rp8R4jv30V+e09RAfF6Uno
eb2meOZ0qpzej9NZcXoVTg8wHs+t6pJzK04Hy50vczouTg/D6Q04PS03f3F6
MK5uc3MTdx7H6XU53SOnN+N0O5wugjsP5fTAnK6S07NxuiBOd0HPWzWdS1Jd
d1leMPrkz/V7s5we75/6vVnu3Jn73U6q05bskt7VlOhSOJ0h1Wtp0sPQOinp
w18x593cuTanB/tSzoO43wHQtM/O7Vdye4L0e7nfUZGu5/ZW6O+T7MLP0SF7
KOX1M3e9Jjs9h92N57Bp5BxWup6e835pvzv3d8fn57rPz/29ki5rHNFl0f0O
Tfp5Tp/M6Tw5fR2nU6J6MG4fSrqe2zfh9PxSH2xF+iCnO+X0fpxuiurTpP2s
ImY/i9t/4fYLOP02p4Pl9Iecjovbr+H2xbjrOZ6W68sc78rxq5yujNPvcftr
3H4Qh1c5fTunE+bwM6dz4/bpOJ0ht2fH6S25/SZOb8ntlXB6S07Pz52zcHpp
Tm95BucjXTIfcTpAqpeT9JOZjH6S00lyekhuH4HTdXM6Rk7/SffIJDvdd9Ck
y6U6UsmuSd+1g8y/XwquK699vqLO3ZtdcuBwjnWdnhfT4FVy2qi4JOEf6Twr
kNS35oHLQ47F58AQ58D2z17/SQdrPidn2Q9yKM0+UPiuusgX/zUZ1X5LUELI
qIpFk8JF3D4ccbu+f7ASTo8Z9PrIrX+vn6tJ/QycETizfUM5mL74Y2TMYpFf
vxTMmlrRTgFTFjxY/vZP80tLvM8R5D7rTkk7GeabBal595V6yTfK7CV7hm4d
Z6WGeVVD926aKOLKoPBIsZuFGgxGrVGm/SjsXD23sdMereuVDX4Wdc4ahIr/
a7YU778Ruf/JcyZdbdI9D473D34THyTqG3du+3fzAJw+XOIHfEk8ZNmNvn0h
VA2VXaOGmumJ8xSXeK8mFfrIIDT8hU3tvD/9P6CGR972nikD1eLdQ5vMEXnH
9TtD9H8N4v8HGD8nSPzQOuOWPTfgbIQaNtRN0tvV/gmoNluFP1r0pzowYMa0
kU1z4JLMM3Jmqrh/s9aPb6x1lIE6YdPIxy/F/bvic+0iz8X1ZS6u5mFeLCF5
QeuhP+bpQczTlyRPFchz7iU8Zybyw8b/5e9d7MbzvvC/6fcu6uA5pgvzexfr
/svfu+B4Y44v3Wp76vB5lyzwr3kgsKOVqA9rME5ukjiRYfzrkviXzrWPkfyt
hfXnNKk/YVg/tWV/rZ+nDAKmxV3M/1APfnf82VoFZ7BfF2C/bsrwEpMZXqKU
8BLB2ActSR/k4uoo3o8b3o9k5+o/V2+5+sbVEy5PuTiX3qMfeY80/jX1Qa5/
cXnN1WeuHnJ1hstHLg5pnk7EuncY614BqXuPsH7GkPrJ9Tuuv3D1nKuTXN3g
8oirJxw+4fDD3z1/adK30DrA1T1vxAPHCB7g8A+HN7j+zvVTLp65OszVMW6v
kKvbHJ7k5jUO73HzGoe7Ptd+HIdDuHmN6/tc/+L6Aq3b0hz3lPndmPLOcdz+
WnnnOK7/WjL4PB3zejbmtab6TPu4prkpCvvXOOxf3lgnf2XqpJSPUSQfKW7X
hDOlPj4Hv/dfvynobw==
                "], VertexNormals -> CompressedData["
1:eJztvXk0l9/3NyxRShpokAaKRJpUSoVDMqRMpZIo85DMY6JIGqSBkiYlTTRK
I8lRUZFCE4kmIpE5pchz7XPO9V3fn2fp/n3u9b3v51n3uvvnvTqf8znXPvva
Z+/X3ue1r8bZeix1EBQQEHAUFhDoLdDTn0bU0/jlXLeC13I70NL7+y5EnF6K
BthnVK/vakBiEdPlNjT6oybFn51t132w89xDrx9y4/90/ZwvI3C+sQ8u7Ls1
dYKtG/5cYTjzLbfOOPfv16tl/LH1uB83/xy3VXu9ebrDR25cW0zyKsx/I0/m
oxRhIzL/nz73/fVpFiC/yQnrP5z8aF98HJE/9op8A+xXuWIv7BeLf04n+/2n
6/c0njTuQaXH0VC0vGIn+e2akyTpz61/NbOx4fl8X/Rd8cnFHWGL0IsLnx5+
Bj1EP01WmWuHfmwMzRBsW4dn71J7V8+N28yY7KJyRAVFHOqlPsffB3/9dmL2
F248q+K3yIxZS7HZK3WXQDcv3NhPNK0W9LY3ZUbTVGvcYB19I3ikPd48zfXQ
d268LGW/6vxdtlh25JWkixtWqamv3JzwixsfcbBRHuZfsCfzkZcKnb9cuOON
Mrf+zxKyPjo+mK6vaa0UNpuTJ+0gkQf9+ErlWe1sWAzyN9kT+dEnDyq/+IWd
/V9w+13Rmgf7xXuc6X6D9IV+gF6MVpqAfrBu4jmin570GXywndhlIrPTDjtq
nxOS1C+BHi8zvT5l+kS9HigMlkDotPo18uszdMn2Lm784PMdJ4ojpqDHF05Y
OK23xmL9/O/85sZndMkKRh8UQCkJXtOqbzjhIy/aZv8AOXNqnDpaR2GNwON7
A+Y74GM115p+cuN9jR+ePFiqgJXdBQ3yg83x2pobxzu5cTzbQy4haDKumKEx
2KWfsVrN42Ut8FwXk4d7Yf58Oh+5sfnOr2qkYf1FdH10ka3/4YFsKchznsqD
Ypg8Urkin0H+stw4kB8ViVD5R+XuNIV9itL94lcSdL+9jifngn5y7xL9YLvz
VD8FrVHpoE+Rx0SfuMyG6jOvk5wT7LIlhZz7n7Ppeb/F7PLKPsPz8J6/RtL3
G7P7HNFjDNNrP6ZP3bDxfVtnGWP+9/TXwSP/cONqb402PtsxDte3VJQWb1uB
ozrvdoEeilUKatV3q6N8l6GOQyeb4cwloTNgfr92PGurjgEajqZcytPWw6k+
svkwbiNvFbBRyghdPJFx5nKwulrUEO8xsN8dv/A4mP8AXYL56KwvnT9+fsEJ
WD9kHVkfvTak69/MN1pbwMkTR+VBg5k8kYGJJiB3TTCRH02qovKXHlTxhP0a
PhZJ4PaL2zv9yH5fLjYrBf0cDCP6wY+92PmdViP2g9NnlTPxo3i8+N/9p1Hx
PHLOBdm5X8PO+5OJ0cQuJzA73cLsQbjVjuhRn+k1kcnv6qcgsNVEETv6KYjA
7xin9lrQT7FlgWunmQ6yE0/7NvGCPJ46QmUbjOPUxwNeti1FU9f8mVMsJ4Vb
k1JiYb8PjvoYNKYvR8M7wrXdogeryQjlT4Tx7df1u15w8wvXkvmo9TydP31t
wSxYX3xoWg23PgoaSdd/6KNgEsHJsd+XyIMkHKk8Yl8rBpVw8ku/JvIj1VYq
f3bjcSPYr2oL2S8OzaD7RbbZS0E/pwYS/eD221Q//9Q/836T96O8/yyYf5mc
cy927mPYeSxkdvlLpaAG7Cib2aePONknLmF6nc70qW4+/JSylPa/fp/9iFoE
4w3howTsf5ugN2+iM2v6zkavXuneg3Uubp3dGuy3DPmOi7tlWqeUsXvzqggY
XxJxtMWOm99cGo25+XhjMZ0fYDHcC9a1WEXWxxfb6fqBYmlDFDl5llB58Jrh
VB5X2wOxIP/gaUR+rK9D5fdX33cB9qt/g+wXiRfT/ZrfSQoG/Vx9QvSDTr/v
T/TTkz79ri2/BnH9eE1cJsTtVZU0vqsm5JE4FLx3OolL8SwezWB+c7TxwwTw
izbMH0qzcz6mHc+Ec5zJzrsGs8vCVH1ipyLJ1N44PYJeUEf40S7QUwXTZ1T4
aNHPsdpob/ix/vCbOWqWJuihJaRrpoqXLrpctdT8/XPVjCfKw7fA+Lytxzoq
uXlVdD5eMprO31kWHQHrm2wl6+Pw13R9ReM/20s4ec5RefB9dl7U50+pBPkH
/SDyYw0vKr/H0OnrYL9mBmS/aG4F3a/E8h9PQD+eO4h+0JVxVD8BRhuegD41
yog+0bRnVJ+Df6y9BTiJx008XuLjejmL83x839RmSOJQFotLfDy6ckKN+E3e
j/L+kz/n/Lnnzztvl5eYnfL2ebHqOdEjr1den8MeeY1+5KWWwf/ydtJS9VwX
5otuIvMxP/+xXJwHrH+dro/59RO5A+POyXOPyoN5eR7EZ3wF+fWp/JiXf4un
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
qsH/MZyvhYw/38n4lhMZ33I241ueGT7rGPCkxS4eOQK86c5RNK9RZXzLwm58
y0VKvpOAtzrJdksO8Fh1GH+1r+ClX1w+hX4ZPmjm8il8eAHNpz4z/iTPm0tk
fDnM+JNa3fiTsxhPckY3nuQMxofU68aHFGS8x5GM96jFeI/vGb/xQjd+46oe
eIw77+u95vwwtlNAYwP2y6Ihd6gfvvBJrQP6xy7s1/Tg/DaOlqB8Wpk8pXAu
D0WHDkb9gX4Rm6U0D93ZdXo1l89i7cnlZcDPbXOh+awx279jN97gRZdtqqs6
tVHX5xeBwPMKCaR5q82GfsJc/osmNk+ayeW/6NNhmv/2FHcmmaVFLRDdiGMG
iYwFvlLo+o+Ep1Rw41Q+8JBiNm55u10yFIlX3SB8pCNHL34G3tWiI1eecOPY
fRkdd7kWfQb4VUPL9v1JnB2J265/Iuv80zjY0/jL4cWSLw87opdlElfvRnlh
/QfF2YDrzjwaqSxotg7HzLsWDX7FxCIrAPQfKxtx0PSQF3pp+VnzfZcdishL
dYTzuGn54xSRi+b4Yvb2gZLh9qhvi+EAiHdTWnXz/J/NwH9c5UtvJK3E/qMm
pIM9xEjvLxfsNxf1KZ5/5dQ9c9yyp9kHxq8Pc1s5xlUTLZ38KJ74ufaYS+S7
De4eern24sh46ovoRXaWyOrrsxKwf8sNvqf6FxvijdpDxogWG6Jyx9wFcO4E
JuV4vOuyw+p9bPZy8uJ6y2tEzhWiL1WPX/DAwUsWfDvqOBPvXOusBnYb3j94
3kcLI2y0LVRcV14Fzf18pZPkfXuv55/L10dnxuWu+7JkOlL8cWo5iS9zN69v
tFuGSpUd14CfHup4eiupHyrrBx6aMgcd7tj8ifvFrU9LMkjcTLl+l5Mb+50w
C8mzF8d+H6j8r498M+1b5otTHGeoLJ+/FAVtSg4D+zz4c9U5qAM07NQ5vW+F
Od7eNbID5g//rB0IdYCXXmb+Z06ZoMDckWXw3FmdHg6Q1x+QH+G19KExGnBb
VQCea3HWWRnqAH0P0n4ly3qhSnKvV1cP/R7IZqKpJ7cPvM+Byn8h9s43WP+w
+C9n7j1gUab/R7uU/c5z8hyMqSjqZbYO3T1G7cFZxdHF0MEFjX3zaFWApyl+
UD8iA8YL22OTDozQQ+cLHpf0f7IQFR84PBDWGXFpdryxpQ6+orQhlPtFAUVl
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
AeNyLe65+M7Kb2Hcc7Gy3mPy3P8HFyATJg==
                "]], {}}, 
             Method -> {
              "ShrinkWrap" -> False, "DefaultBoundaryStyle" -> Directive[
                 GrayLevel[0.3]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "RotationControl" -> "Globe"}, {
             DisplayFunction -> Identity, 
              PlotRange -> {Automatic, Automatic, All}, DisplayFunction -> 
              Identity, Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> 
              None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
                FormBox[
                 TagBox["c", HoldForm], TraditionalForm], 
                FormBox[
                 TagBox["r", HoldForm], TraditionalForm], None}, 
              AxesOrigin -> {Automatic, Automatic, Automatic}, AxesStyle -> 
              Directive[
                GrayLevel[0.65], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], BaseStyle -> Automatic, BoxRatios -> {1, 1, 0.4}, 
              BoxStyle -> GrayLevel[0, 0.35], DisplayFunction :> Identity, 
              FaceGridsStyle -> Automatic, ImageSize -> 264., Lighting -> 
              "Neutral", Method -> {"DefaultBoundaryStyle" -> Directive[
                  GrayLevel[0.3]], 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "RotationControl" -> "Globe"}, 
              PlotRange -> {{-1.2209515505725697`, 
               0.22095155057256974`}, {-1.2209515505725697`, 
               0.22095155057256974`}, {-0.0008819282255722653, 
               0.0008745490049032504}}, PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}, 
             Method -> {"ResolveAsTriangles" -> False}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "3DMathPlot"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[(c (1 + c) (1 + 2 c) r (1 + r) (1 + 2 r))/36, {c, \
-1.22095, 0.220952}, {r, -1.22095, 0.220952}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max10522$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`max10524$$ = 
                 0.5, CalculateUtilities`GraphicsUtilities`Private`min10521$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min10523$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max10522$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min10523$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max10524$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$5613260$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min10521$\
5613265$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max10522$\
5613266$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`min10523$\
5613267$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max10524$\
5613268$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max10522$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
max10524$$ = 0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min10523$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$5613260$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min10521$\
5613265$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max10522$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max10522$\
5613266$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min10523$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min10523$\
5613267$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max10524$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max10524$\
5613268$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    ContourPlot[
                    Rational[1, 36] $CellContext`c (1 + $CellContext`c) (1 + 
                    2 $CellContext`c) $CellContext`r (1 + $CellContext`r) (1 + 
                    2 $CellContext`r), {$CellContext`c, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$], 
                    (
                    Piecewise[{{-0.5 + 
                    0.7707297371631001 Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    0.7707297371631001 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$], \
-1.220951653565663], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max10522$$]], 
                    (
                    Piecewise[{{-0.5 + 
                    0.7707297371631001 Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    0.7707297371631001 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max10522$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$ + 
                    0.001441903307131326, 
                    CalculateUtilities`GraphicsUtilities`Private`max10522$$]],
                     0.2209516535656631]}, {$CellContext`r, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min10523$$], 
                    (
                    Piecewise[{{-0.5 + 
                    0.7707297371631001 Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    0.7707297371631001 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min10523$$], \
-1.220951653565663], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min10523$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max10524$$]], 
                    (
                    Piecewise[{{-0.5 + 
                    0.7707297371631001 Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    0.7707297371631001 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min10523$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max10524$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min10523$$ + 
                    0.001441903307131326, 
                    CalculateUtilities`GraphicsUtilities`Private`max10524$$]],
                     0.2209516535656631]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["c", TraditionalForm]], 
                    RawBoxes[
                    FormBox["r", TraditionalForm]]}, AspectRatio -> Automatic,
                     ImageSize -> 264., ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min10521$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max10522$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min10523$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max10524$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/APkPiMtBfgExLQwZg0oCTle2+\
x01i4drCdbfDnwWc3SbN2lWI6QFP64VRfmsd3zz13vSdHMkr7vV5PX7Xmg+\
QkvYGnx9YM5SyXhSDvTnNFtWZSpFfw2W1rYmr2KIcflHjfdWveSzUD48+v8H3gScHB0K+\
GcWYY1ZN9BXnGEl17Rood259MuEyAs5/06fMXWzvbuy89DMYyAmOoEnqnLWSeKdA07SHQNWvechDf/\
PFRefxUcB7T7wUVCdUPrHesgFgYKYBjPsG3Xm6m7mJiBgQBRS6cJifPYdsLtFFMTMd0luMb55O11RY\
Y1FR7bu6V3KxTkA//Jj6QsYvJe1zS7uwIDAvjktF3Vlb/nLsBnl+\
3hVfyZDVxmN8bjryBYcdUL9P5rHWdPCNV17ro51xd1HzZaJDnT5n6f+\
mQabMcxnbbMOjsyNZ4tfaW4Xfbwsscu34u7vvWfPaOEnDVcKgE91GSgs+\
jaKY88BJtn67OrcNj3Kn4jtEZUsEKJ7Jxlv3i+\
uNhBV5vCjHWbrIB6Yh6BkQ0p9ZFHLd7bMrMMAMFiQWeX9cvm2ws61AC7mxfeyYIswPME7JueUJzkC7\
UHUySffmj4lZyOdNkyPuBMHRK1VrR38L6KEuuIGMZGEmMFzT1GsxhldQIVLDsByVInINgCMl+2Y/\
75h8uVgKp2leoLuVZHLjSnIYn0S8LfEjF1GTNHTtwdAW3LWYTyZNadRFL08Vpszmm+\
02mGzc0B3ooCaElCR/o3abQbQp/dVNY2oO7NaFbE7o1oVsTujXh/10TXMT4r/QbXpi4fg=="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "ContourPlot"}, {}], "\n "}]}],
    Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate forms", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[c (r (1/36 + (1/12 + r/18) r) + c (c r (1/18 + (1/6 + \
r/9) r) + r (1/12 + (1/4 + r/6) r))), {c, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"c", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c", " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "9"], "+", 
                    FractionBox["1", "6"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "18"]}], ")"}]}], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "6"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "12"]}], ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "18"], "+", 
                    FractionBox["1", "12"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "36"]}], ")"}]}]}], ")"}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[r (c (1/36 + (1/12 + c/18) c) + r (c (1/12 + (1/4 + c/6) \
c) + c (1/18 + (1/6 + c/9) c) r)), {r, c}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"r", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "9"], "+", 
                    FractionBox["1", "6"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "18"]}], ")"}], " ", "r"}], "+", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "6"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "12"]}], ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "18"], "+", 
                    FractionBox["1", "12"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "36"]}], ")"}]}]}], ")"}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Simplification", "id" -> 
     "ExpandedForm", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Expand[(c (1 + c) (1 + 2 c) r (1 + r) (1 + 2 r))/36]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", 
                 SuperscriptBox["r", "3"]}], "9"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", 
                 SuperscriptBox["r", "2"]}], "6"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", "r"}], "18"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", 
                 SuperscriptBox["r", "3"]}], "6"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", 
                 SuperscriptBox["r", "2"]}], "4"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", "r"}], "12"], "+", 
              FractionBox[
               RowBox[{"c", " ", 
                 SuperscriptBox["r", "3"]}], "18"], "+", 
              FractionBox[
               RowBox[{"c", " ", 
                 SuperscriptBox["r", "2"]}], "12"], "+", 
              FractionBox[
               RowBox[{"c", " ", "r"}], "36"]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Alternate form assuming c and r are positive", 
     "scanner" -> "Simplification", "id" -> 
     "AlternateFormAssumingAllVariablesAreRealAndPositive", "position" -> 
     "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Simplify[PowerExpand[(c (1 + c) (1 + 2 c) r (1 + r) (1 + 2 \
r))/36]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox["1", "36"], " ", "c", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"2", " ", 
                    SuperscriptBox["c", "2"]}], "+", 
                   RowBox[{"3", " ", "c"}], "+", "1"}], ")"}], " ", "r", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                   RowBox[{"3", " ", "r"}], "+", "1"}], ")"}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False, False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "6", "datatypes" -> "Sum", "timedout" -> "Simplification", 
     "timedoutpods" -> "", "timing" -> "2.727", "parsetiming" -> "0.555", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa41391480b57i59f8ca3c0000576ffg5hce5e8g945481992349747128482", "id" -> 
     "MSP41401480b57i59f8ca3c0000269362282692966g", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "11", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa41411480b57i59f8ca3c000067i0bd955hd9fcag5481992349747128482", "version" -> 
     "2.6", "inputstring" -> "sum_{i=1}^{r} sum_{j=1}^{c} [ i^2 * j^2 ]"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "0", "datatypes" -> "Sum", "timedout" -> "Simplification", 
     "timedoutpods" -> "", "timing" -> "2.31", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "3", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "3", "related" -> "", 
     "version" -> "2.6", "inputstring" -> 
     "sum_{i=1}^{r} sum_{j=1}^{c} [ i^2 * j^2 ]"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 2, 18, 16, 52, 22.1111037`9.09718535055962}, "Line" -> 6,
     "SessionID" -> 33418422269014030074}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
    19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "sum_{i=1}^{r} sum_{j=1}^{c} [ i^2 * j^2 ]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
         Typeset`pod36$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{729., {511.3544921875, 516.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
          Typeset`pod36$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa41391480b57i59f8ca3c0000576ffg5hce5e8g945481992349747128482", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.8857459421971035`*^9},
 Background->GrayLevel[
  0],ExpressionUUID->"55b38ae0-ab3b-4e63-a885-ddb39ca830c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
[sum_{i=1}^{r} i ] * [sum_{i=1}^{r} i ] * [sum_{j=1}^{c} j]  * [sum_{j=1}^{c} \
j]\
\>", "WolframAlphaLong",
 CellChangeTimes->{{3.885746004490329*^9, 3.885746095371332*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"dbe83878-5ce6-4d87-ba70-dde3490467d8"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "[sum_{i=1}^{r} i ] * [sum_{i=1}^{r} i ] * [sum_{j=1}^{c} j]  * \
[sum_{j=1}^{c} j]", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Sum[i, {i, 1, r}] Sum[i, {i, 1, r}] Sum[j, {j, 1, c}] Sum[j, {j, 1, \
c}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"(", 
                 FormBox[
                  TagBox[
                   StyleBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"i", "=", "1"}], "r"], "i"}], ScriptLevel -> 0, 
                    StripOnInput -> False], HoldForm], TraditionalForm], 
                 ")"}], " ", 
               RowBox[{"(", 
                 FormBox[
                  TagBox[
                   StyleBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"i", "=", "1"}], "r"], "i"}], ScriptLevel -> 0, 
                    StripOnInput -> False], HoldForm], TraditionalForm], 
                 ")"}], " ", 
               RowBox[{"(", 
                 FormBox[
                  TagBox[
                   StyleBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "c"], "j"}], ScriptLevel -> 0, 
                    StripOnInput -> False], HoldForm], TraditionalForm], 
                 ")"}], " ", 
               FormBox[
                TagBox[
                 StyleBox[
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "c"], "j"}], ScriptLevel -> 0, 
                  StripOnInput -> False], HoldForm], TraditionalForm]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox["1", "16"], " ", 
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                  RowBox[{"c", "+", "1"}], ")"}], "2"], " ", 
               SuperscriptBox["r", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                  RowBox[{"r", "+", "1"}], ")"}], "2"]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot3D[(c^2 (1 + c)^2 r^2 (1 + r)^2)/16, {c, -1.31081, 0.310808}, \
{r, -1.31081, 0.310808}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            Graphics3DBox[{
              GraphicsComplex3DBox[CompressedData["
1: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
64/IOW5I/nzHvEl9Gmh+xL7T/lS78uy71qS2/SV/PsW+pfQekzX/Yt/FOjep
Y/Pmc5IzTfM79j1OckZpPYB9F1v+PvZFDnnu2Bc5u2R37LvYzqHCXyo5+2fk
r3+w7zGSc5r6F3Z9XXKybd6cKDlf5+avx7Avv7O0fsO+OZLzgs2byOmo9SH2
LSI5r2g9iX2Rc6nNm8gZqvUq9qU+X2h9G+eVev4grYex7xMDt3ecWu+N1MNa
P2PfJnqPB23d+6rkjNb6HPs+Ijn1tZ7HvsjpYute5PRXe8C+yJmm/QX2Rc7Z
tu59WXI6avzHvqMlZ4n2O9i3geRk2Lp3juS0Ub9Dj/dKzrnaf2Fffi+ydW/E
g2h/h31HSs507QexL3KGzUhf9yKnu/ab2Jf6PK/9afjDh/3c/M43Z2Yd1n4W
+057Q/sq7X+xb47dk4B9Z0vOOeLYt0gqX84y2R37IucdO89CzkDt97Evck7R
+hD7Iqe47VvnS06Zvvn+B+zbZkW+nGM1r2Hf2ZJzyM6zlkjOqa3y/SHYd8Wb
+XIWqt9hjymSU8/2rcslp4X8M9F/9Xub/DnYFznn7U/ftyLnHfmLsC/1Oa9M
vn8J+9bl/5M/Cvv+dexNjw2svTyrl/xX2Heenr/A/E4NJKea2gP2vV9yBsmf
hn2R8+zMdL8TcpZqXsC+yJkg/x72Rc5j7nfi/FbrQOz7oOSMkL8R+74qOcPN
74Rej9V8h30fl5xL5P+M8VlyhpnfCTn0O+z6hOR0kj82xmf9Nr0x3e/E7+Py
92LHFpc91Wfh4E2FzjuKyP6LZV/smK1zkz7mH24lORPlr8aOxSXnRY3z2BE5
n5t/GDmT5T/HLudaPdH/c5LTwfy656l8C/nz0T/tmvko+pfk3Gx+XeQs0PkC
+i8lOa2tX5zIuYbqyfNKJ/C/6f/zPIVDF+b/u5fn13kD0w88Kc/I8yPiPJp8
Sp1zxfmseH2dE6XH8X6fGqpzTzhxg20UVwYnDm2N4gbhxDV5+bjHQ/Lp17xX
W9WH9uDvS3+At7J8k5Cj90U/95ldGDcmJeT7uH2pT7aV573wS1yt/Qucfe6f
tD+Fs2+aL/8DfKzGgU91voN+6HddJJ/60++uUH+h/seq/BzJj/lC5QeOSj+n
oF9s0/kd+lox9ZmPNywsrDfPq+W5T351pPtNFxTWm+fJ8r6pBPnrLc8O+cWn
jrltWavC48YmK8848+bA6ZW+61w4b6jYr8u23vXg+kLlL5jyXde5P2ws1O9+
PJpe/o/qJ6k+/196S3qvpPon6TlJD39U/4wv3u/I84n8AMVdkB8CJ9+HvAI4
8XLEo8PJLyDeDk78JHFaLof4HjjxWsSFwInzYXxkfCUOhPeFM95G3hTn5Io/
4X0jHkFxR7wvnDhA3hdO3gTjMpx4e8ZlOPHbjMtw4oHRG5z4UvTm9UFvcOLZ
0FusO/S+jPuuN/TJeoT4GTjrEeJn0DPlU3b/FeXJk73EzknJ+4NTnry/uNeY
vDy7543y5JEdtPNT4jPhlCc+M+6lJQ9O++7IS8HPobjTyxPOVSPuX+XJm8Du
lCc+H0554vNpD5QnHgwe+VWSTzuhPPHGcMoTb0z7cf3AXT9xD53KEw8Jpzzx
kLQ3yhNfB6c88XW0Q29vcG9vrCcoT1wQnPLEBdFuWS8T30X7hJN/TTuEk2ca
91yLk58Y90eLE99L+4n9luKZIz9HnDwa2gOcvAzsDifOH/u6/Lhf0uqDveDE
qWIXOPGN6N/1hp7hxFlF/rD0QbwcnP0H8XJx34XKk88Opzz57JfY+Sx5vpEP
jL9fcYyR36jy5I1G3qbKkzd60M5ticeO+7hVnnhs7Ev5tXY/asRrKO79cjvP
JU8KTnnypGgPlCcfB0558nFoJ5Qn7wNOefI+aD+UJ78g8hnY96v+56TF5xTo
J+4PNf3Q3iJ/1+63pDzxz/9Ii9vJTRFPC6c88bQRd2jtDe7tjXZLeeIA4ZQn
DpB2y3qfeE7aG5z8cdoVnDjquIddnLh92gmcPEfaA5z8OOwOJ98q8meIP1V5
7AgnHyTuabX6YBc48edxb6Y4ccvo2fWDPuHsH+OeAr0fcbBw1rnEwTIOhD/J
1rGU93Us5cnfh1Oe/H3sRXnyweGUJx8cO1KePIvIH1Z58iywL+XJV408UpUn
X/VyO0cm/xFOefIfaQ+U72r3h1OePDvaCeXJ54JTnnwu2g/lZ9r9zJQnb4h2
5fqJPBPTD+0t9j3SP5zy5DXQDinPuiji3VWeOPmIV7b2Bvf2Rrv19hb3PVp7
o92Gf8LaLdzbJ7yPtUP4GGtvcb5s7SrOtaz9wMmHpT1EnLK1B/hhs3vsL82+
Xh/sBX/a7BX3ZJhdXG/o2fWGntnXZti4gf+MuHf0D8efhv6RU8/GB8pvtvGc
8ktsfIh8YhvnKX+ejQ+Ub2HjP+Wn2vhA+eU2L8S5tI0PlB9j8wXl29v4EPWx
eYTyPW18oPxom18i/sjGh8gLtHnH9QN3/cR92Sq/2sYHyve3eYryFWx8oPxq
m7+8XcG9XdE+Ke/tE/93e1vfwj+xdSx8qK1X4XNtXQr/wNaf8Aq2zoRfYetJ
+Au2boR3s/Why8deXh/sAs+xdV3k9dr6zfWGnuGf2nqM84RBtr/gPKGS7e8o
P8/2F5R/3fZ9lL/H9heUv872g5Qvb/sLyne2fSLlO9j+gvLlbP9I+bm2v6D8
pbavzLDzbjjlua+A9kD5i21/Qfkatg+lfF3bX1Ce/GvaD+Xn2P7C63+OnbN3
sP2F64f2Rvnqtr+g/FW2z432Y/sLyve0/a+3N7i3N9ot5efb/oLyi22/zHlX
F/Onwa8xvxm8r/nH4v4Y84PByaul/cDfNr8WnPsraA/w9uangpNfj33hq8zv
5PXBXvCj5keKezXMX+R6Q8+R92/+n8gLMX8m5y3kqaFnynNfFpzy9cxvTPmZ
5p+k/JPmT6Y8ec1wymeZn5nyE8w/Sfmd5n+m/CrzT1K+v/mlKc+9FvAob/5q
yr9l/knK9zM/NuXHm3+S8jvMv+36gbt+Ij9Z5Reaf5LyU80fTnnyUuGUr2x+
cm8/8R0Faz+0Q8pzHgqnPOehtEPOhTiHpb1FnIidy8D327kMfI2dy8C5L4j2
AOdcGLuHHJ0jY18vH98BEn/Uzne8PtgFTh43+oeT/4ueXT/o08/ryceLOCmd
25LnA1+meCryB+CVFCdJHDOceGbiJuNeAcVPPq34HvjPissi/sPP3cgnxF+9
Vvll5KfBj1P8Cfk88PmKKyNPAD5D8aLEPcOrKY76WdU/zjUUtzlX9Y97LNSP
zlH9I+9M8ScRDyw/8CDFz/Be+NPIA+W94OQn8l5w8p54r4gfVDwt7wWfq7hu
3gtOHCnvBR+k+DTeCz5F8TC8F/6rHcof4b3wAzykc3zeC95e8Uu8F/xzxSXy
XuEPUbwx7wXne2TEs8K/U1zrS3qv8GMoXo44HvdXkN/I/vo0xV+RNxXn3oqr
JD8k7slTvDR6YH9UQ/EP6AHeXfFg5OPBtyoOnLwy+BbFf5L/A/9Ocb/kscCJ
9yYPAU5+BHHtcOLtiaON8orvXSx9wk9R3CBxGAX70/x4J/TJPuURxcWRzxbx
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
icNe8ntQD/79Kb1XfDeNuBHp538A3WX6NA==
               "], {{{
                  EdgeForm[], 
                  Directive[
                   Specularity[
                    GrayLevel[1], 3], 
                   RGBColor[0.880722, 0.611041, 0.142051], Lighting -> 
                   "Neutral"], 
                  GraphicsGroup3DBox[
                   TagBox[{
                    Polygon3DBox[CompressedData["
1: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
//+E6k6lg2tBqu18HlxX1/+Z/A8Zrn1d
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
se8V2lll9PVZqb1bw/nM1NzV3reF26XQdN3ntvFZDVst25xzjRT3ovZnTuI9
qfHbR5vxeaLPs4w5iNdT3IP3ch77+nE9H8FvwxfCuzSFRqVWZc1j7WONbG5l
jqU255ySc0uOMcfa6fQ9vh7f+Pj8TfptfluFzTkv576e5fjnU8wpObekxvoM
fHYZ80c+M5/HRfCoelyT12bNYe1hTfZECg3XuZ5Xa6HtWiNYKwwrQts15zf3
P7gILVdN9z740CK0XudczO3N8V9OMWfn3J3fiO/vTPqeWA8f5vtVY1BrUCNZ
KkXNbz6gRq4WYI1u/qXGbu2uxqbWZg1/Roo5tvVy/L00RQ5pjN6ojNzSnNv8
xzmHw1PkR+YfaviDU2gK7dm3cxFagzm++ZFzMEenqLnNJ0bCx6XI2c2v/guf
mKKGsJZQszglRU5tzO9URq49oAz/trM5WCM0frXb2dk/qvGq9T6Y/adzBmrf
92f/N74etYg1ibXUhHpoY9bYr+Wa2dpZTVBt8LF61GLWZM4lqglZ61vzO5ez
yGek9lCEtjapHlqoNbS1tBqlWqU1vbW9mqNamjWztbMaqlqemoPag5qs2mw7
+IMyNE+1z9XhL8rQTNVO28Of6J/qUSuZk5ubq2mZy5vTq6WrKVkLmlObW6sB
qwV3gL8uQ9NV2z3MHIXt/cqIJ7ua0+rLabvkeHIzx59uzpDjzW0pNH3nDqxR
rVXV4NXi5+T4ZH5o/naFOViKmt/aX035sRQ1vLX8vBy/1NjU2pzD+rsMzUft
R03o+zI0I7UjNbify9Dc1N7U3H6Hjypj7mVujn9qDmoPahxzzU8ZQ3vl8fJo
Ck3BfHM8fEWKOW7zrWvhiSlq6Fuz/zafsGaclfP3v3K+oX+/xZjYiJpuZs7/
jQ8t8/swv/8p5zPmPzfSlm5EjXhv/l7/ze/zoZz/mx85nsbl/MX46vgdm8eH
8ffxMuZq9Zf6TWvmm3N+Zb7k+L0/5+vGI32KvkXNQe3B8X9pzl+M94Oawl/q
7z7IceNAeIg5ZVPs01ctyH3VkNWSV7OG4Hxv6gOMl7R+VXwfjn2/AfV1fZ6+
b6gxWi2hCv1heq7/h1VRe1mDqae/zG/leKYdU8U79d0eWUau45hx7AwvIxfS
x+pr/6cPagqdU71zhyI0uQPVP9j+sx7ze8a1YWwfRNupKTTuMTmfNH8r8vfZ
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
7xvuWI/5u6tSaMie03OpH/8fBHQJ7Q==
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
eq/SQnVV+wCV1HtW/BdoiGf36uTE/QuAS/yZ
                    "]], 
                    
                    Polygon3DBox[{{1259, 655, 374, 253, 254, 1345}, {1303, 
                    820, 1826, 1369, 340, 1352}, {1524, 909, 644, 283, 953, 
                    1702}, {1442, 744, 478, 327, 326, 1350}}]}, 
                    Annotation[#, "Charting`Private`Tag$7297205#1"]& ]]}, {}, {
                  EdgeForm[], 
                  Opacity[0.25], 
                  GraphicsGroup3DBox[{
                    Polygon3DBox[CompressedData["
1:eJw1kzlMVWEQhf95zyvQKJoYiIkYQ4wxQmJn2NyIsVBcUEPYXDDGYKEtGGNB
TCyMjeLWmrjUqJ12NFoqjdIICAIiPBQBlcJvcsbivHPuvJk755/575auK82X
cymlkyAPHvLzGX4Az8O/wAgogGXwFfwEc+AbaMhSukduc1FKszxPg9HIXwAf
QC05pfA78vag36MnVyn/B7AkvRj158nZTrApU2w2ctyLe/oecD0Jzpk8bzL1
9N4z4dG9rgW/I38k4ktgHHTRYxt1h+EjcDexoyZf3ncM7OD5I1wOP+EMFfAA
fAtUoV/DZZHjue2mM3bAZ8Kbe5wPH1NgI8/DcDXcwix60CV4OAu2EjuUqZfP
8k5ec55A18N1oMLPQd1d/luDvk3NI3Qu8u/nNZv/e5yKWe2mdjDe00bNEHqD
aUfey3veyCt+Nac5zcUMx2Imo3EXCrHfp+Sz/tRj0nXwC3iXae+V8D6Tz/2m
e+Pv/BI8Hnqzyf8KeEZ9MXyN2HN0Cfo6+gI+j5tm5fP/RLyPokH0TtNdbGUu
l5J2+pbnbuKP4Xri7UmzrQxvf8GfpL7evyN212ny0AC/hGtMZ6yF15lmuB4+
YNrFargt093wGfpe/Ez9PhtT32LT3fI7dgw+AW6iT8F9eCuFL/KOg6A36f4X
4pvz3fu34zv03c7E/D3u89lL7St4iZxG75cp7zT6TcTdSwuH6MwU9///AQkl
jxw=
                    "], VertexColors -> None], 
                    Polygon3DBox[CompressedData["
1:eJwtkL0vQ1EYxt/b05tqxCxMOhok5mpLYjCoRK60HRikgjCwqkHiIzGIBY12
7YC9bAaJRPAfYPNZXzFa/U4ew3PP8zvPee95z5sqL0dLMTPrQXH0w+eZ9QUN
hGZRwqzqzPoDsyn4Fv9E9ojScIvz3/gWGoQz6BX/hnL4EvWX1AxT/wuPokmy
BDyNz6NFuB0u45ucTeMpsyP8GHu9cB6N4Ndp9o6sE74ir7C2wRnWC3iOfrbh
Cbj0f/+B05v82/z/KvgO8plQZyL8iqm2AI/DC3AxrvdvOb0pS7bK/V8m9vtr
nA3QEDqBr1Ef/oF8Mybd47sCZbusn6Z+9uE9p1l+oDo+GaoX39Ms/tBptu+o
ho9CzcrPLEt/507/9nfs4OfJC4FmsEF+6jQbP6Nj/BnKwUlTvw2nXrvZu8H/
ASK8QkE=
                    "], VertexColors -> None], 
                    
                    Polygon3DBox[{{933, 914, 2, 250, 1370}, {1263, 30, 325, 
                    963, 1879}, {642, 641, 966, 300, 907}, {1085, 1084, 1355, 
                    293, 1362}, {960, 315, 934, 376, 377}, {380, 9, 318, 317, 
                    935}, {1372, 277, 212, 900, 1874}, {918, 957, 349, 210, 
                    1343}, {933, 946, 251, 16, 1338}, {918, 919, 224, 351, 
                    1373}, {1289, 337, 1365, 1110, 1111}, {1356, 295, 269, 
                    121, 1113}}, VertexColors -> None], 
                    
                    Polygon3DBox[{{1340, 196, 273, 964, 917, 1341}, {1371, 
                    322, 14, 915, 916, 1527}}, VertexColors -> 
                    None]}]}, {}, {}}, {{
                  GrayLevel[0], 
                  
                  Line3DBox[{246, 1, 242, 227, 970, 16, 311, 291, 251, 946, 
                   286, 1370, 250, 287, 252, 2, 921, 234, 246}, VertexColors -> 
                   None], 
                  Line3DBox[CompressedData["
1:eJwl0ktLlkEchvF5PUGmlihtDMwQCSXFQ6JQtDHTzI2KqYvMYwZpktCmM3ne
BVpQKzEFN0bQSQPDIvwCmiVli/wamr8nF9d73TP874cZ3snpvNUwEAshLOCm
EM8v/JTIpSjD1cQQzvCK/XKuQCLWrbPN/+UdFMohIYRzdJTTcVmu1q82fxFN
cg13cC038yWuQ4tcz0dwQ3dcd5if8xRPY15+w++4Nuqi2fwVfHKGFu6z18rH
cDcuhA2z9/g+vssPeJMf8iP8kGd0O813oRsfrHt4jXv5I1+Pvo0lOYuHdX/p
jvBvHuUxbMvj/Idnzb7CNfOFOB7dzfmK+Zv9TM5HBrbc6ye+6q3wW37Ni5iT
n/IzrtFvMt/KaXwKvXIKN3JedAdO5lwcQqVum24B56NOTuWzvOccuzgtX9Cr
Mp+A9/aKuN1ePMdhEhNINTvGKdF/xE9wWH7MyfxS97x8El+iR8U5WJX/WS7z
CevPvGe9izvWSTzEt6M3Jg/G/j+p0B87eJ/7LPVJjw==
                   "], VertexColors -> None], 
                  
                  Line3DBox[{376, 7, 313, 314, 947, 315, 960, 316, 948, 317, 
                   318, 949, 320, 257, 382, 9, 380, 8, 377, 376}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{397, 14, 321, 322, 1371, 323, 963, 325, 262, 30, 
                   1339, 229, 247, 15, 243, 235, 397}, VertexColors -> None], 
                  
                  Line3DBox[{264, 91, 1084, 1085, 106, 1113, 121, 1351, 332, 
                   297, 1379, 269, 295, 1378, 267, 1362, 293, 1376, 263, 264},
                    VertexColors -> None], 
                  
                  Line3DBox[{1110, 105, 334, 335, 336, 1365, 337, 1381, 338, 
                   1367, 339, 341, 1383, 272, 1154, 135, 1126, 120, 1111, 
                   1110}, VertexColors -> None], 
                  
                  Line3DBox[{274, 196, 1342, 231, 248, 211, 244, 236, 634, 
                   212, 346, 277, 1372, 304, 964, 273, 274}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{280, 217, 641, 642, 218, 643, 219, 930, 361, 969,
                    282, 301, 968, 281, 956, 300, 966, 279, 299, 280}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{285, 224, 920, 233, 249, 225, 245, 237, 1256, 
                   210, 347, 348, 349, 957, 350, 1373, 351, 353, 285}, 
                   VertexColors -> None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{980, 1392, 1711, 979, 665, 981, 1541, 1393, 1712,
                    982, 668, 983, 1542, 1394, 1713, 984, 671, 985, 1543, 
                   1395, 1714, 986, 1396, 1715, 987, 1544, 1397, 1716, 988, 
                   1398, 1717, 989, 1545, 1399, 1718, 990, 1400, 1719, 991, 
                   1546, 1401, 1720, 992, 1402, 1721, 1349}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{996, 1547, 1264, 994, 1548, 1265, 998, 1549, 687,
                    1000, 1550, 1266, 1002, 1551, 690, 1004, 1552, 1267, 1006,
                    1553, 693, 1008, 1554, 1268, 1010, 1555, 1409, 1732, 1012,
                    1556, 1269, 1014, 1557, 1412, 1736, 1016, 1558, 1270, 
                   1018, 1559, 1415, 1740, 1020, 1560, 1271, 1022}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1021, 1741, 1416, 1019, 1739, 1738, 1414, 1017, 
                   1737, 1413, 1015, 1735, 1734, 1411, 1013, 1733, 1410, 1011,
                    1731, 1730, 1408, 1009, 1729, 1407, 1007, 1728, 692, 1005,
                    1727, 1406, 1003, 1726, 689, 1001, 1725, 1405, 999, 1724, 
                   686, 997, 1723, 1404, 993, 1722, 1403, 995}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1024, 1417, 1742, 1023, 1561, 1272, 1025, 1562, 
                   1418, 1743, 1026, 708, 1027, 1563, 1419, 1744, 1028, 711, 
                   1029, 1564, 1420, 1745, 1030, 1421, 1746, 1031, 1565, 1422,
                    1747, 1032, 1423, 1748, 1033, 1566, 1424, 1749, 1034, 
                   1425, 1750, 1035, 1567, 1426, 1751, 1036, 1427, 1752, 
                   1037}, VertexColors -> None], 
                  
                  Line3DBox[{1041, 1568, 1273, 1039, 1569, 1274, 1043, 1570, 
                   727, 1045, 1571, 1275, 1047, 1572, 730, 1049, 1573, 1276, 
                   1051, 1574, 733, 1053, 1575, 1277, 1055, 1576, 1434, 1763, 
                   1057, 1577, 1278, 1059, 1578, 1437, 1767, 1061, 1579, 1279,
                    1063, 1580, 1440, 1771, 1065, 1581, 1280, 1067}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1066, 1772, 1441, 1064, 1770, 1769, 1439, 1062, 
                   1768, 1438, 1060, 1766, 1765, 1436, 1058, 1764, 1435, 1056,
                    1762, 1761, 1433, 1054, 1760, 1432, 1052, 1759, 732, 1050,
                    1758, 1431, 1048, 1757, 729, 1046, 1756, 1430, 1044, 1755,
                    726, 1042, 1754, 1429, 1038, 1753, 1428, 1040}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1081, 1882, 1528, 1080, 1782, 1451, 1588, 1079, 
                   1781, 1450, 1078, 1780, 1449, 1587, 1077, 1779, 1448, 1076,
                    1778, 1447, 1586, 1075, 1777, 1446, 1074, 1776, 1445, 
                   1585, 1073, 751, 1072, 1775, 1444, 1584, 1071, 748, 1070, 
                   1774, 1443, 1583, 1069, 1281, 1582, 1068, 1773, 1442, 
                   1350}, VertexColors -> None], 
                  
                  Line3DBox[{1129, 1881, 1293, 1128, 1611, 1294, 1131, 1613, 
                   1614, 1295, 1133, 1615, 1296, 1135, 1617, 1618, 1297, 1137,
                    1619, 1298, 1139, 1621, 1622, 1299, 1141, 1623, 1300, 
                   1143, 1624, 813, 1145, 1625, 1301, 1147, 1626, 816, 1149, 
                   1627, 1302, 1151, 1628, 819, 1153, 1629, 1303, 1352}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1156, 1484, 1827, 1155, 1630, 1304, 1157, 1631, 
                   1485, 1828, 1158, 1632, 1305, 1159, 1633, 1486, 1829, 1160,
                    1634, 1306, 1161, 1635, 1487, 1830, 1162, 1636, 1307, 
                   1163, 1637, 1488, 1831, 1164, 834, 1165, 1638, 1489, 1832, 
                   1166, 1490, 1833, 1167, 1639, 1491, 1834, 1168, 840, 1169},
                    VertexColors -> None], 
                  
                  Line3DBox[{1173, 1640, 1308, 1171, 1641, 1309, 1175, 1643, 
                   1644, 1310, 1177, 1645, 1311, 1179, 1647, 1648, 1312, 1181,
                    1649, 1313, 1183, 1651, 1652, 1314, 1185, 1653, 1315, 
                   1187, 1655, 1656, 1316, 1189, 1657, 1317, 1191, 1658, 856, 
                   1193, 1659, 1318, 1195, 1660, 859, 1197, 1661, 1319, 1199},
                    VertexColors -> None], 
                  
                  Line3DBox[{1198, 1848, 1503, 1196, 1847, 858, 1194, 1846, 
                   1502, 1192, 1845, 855, 1190, 1844, 1501, 1188, 1843, 1500, 
                   1654, 1186, 1842, 1499, 1184, 1841, 1498, 1650, 1182, 1840,
                    1497, 1180, 1839, 1496, 1646, 1178, 1838, 1495, 1176, 
                   1837, 1494, 1642, 1174, 1836, 1493, 1170, 1835, 1492, 
                   1172}, VertexColors -> None], 
                  
                  Line3DBox[{1201, 1504, 1849, 1200, 1662, 1320, 1202, 1663, 
                   1505, 1850, 1203, 1664, 1321, 1204, 1665, 1506, 1851, 1205,
                    1666, 1322, 1206, 1667, 1507, 1852, 1207, 1668, 1323, 
                   1208, 1669, 1508, 1853, 1209, 1670, 1324, 1210, 1671, 1509,
                    1854, 1211, 877, 1212, 1672, 1510, 1855, 1213, 1673, 1325,
                    1214}, VertexColors -> None], 
                  
                  Line3DBox[{1241, 1885, 1531, 1239, 1868, 898, 1237, 1867, 
                   1521, 1235, 1866, 895, 1233, 1865, 1520, 1231, 1864, 1519, 
                   1688, 1229, 1863, 1518, 1227, 1862, 1517, 1684, 1225, 1861,
                    1516, 1223, 1860, 1515, 1680, 1221, 1859, 1514, 1219, 
                   1858, 1513, 1676, 1217, 1857, 1512, 1215, 1856, 1511, 
                   1353}, VertexColors -> None], 
                  
                  Line3DBox[{1354, 1674, 1326, 1216, 1675, 1327, 1218, 1677, 
                   1678, 1328, 1220, 1679, 1329, 1222, 1681, 1682, 1330, 1224,
                    1683, 1331, 1226, 1685, 1686, 1332, 1228, 1687, 1333, 
                   1230, 1689, 893, 1232, 1690, 1334, 1234, 1691, 896, 1236, 
                   1692, 1335, 1238, 1693, 899, 1240, 1694, 1358, 1242}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{1363, 1601, 1109, 1801, 1463, 1600, 1107, 1288, 
                   1599, 1105, 1797, 1460, 1598, 1103, 1287, 1597, 1101, 1793,
                    1457, 1596, 1099, 1286, 1595, 1097, 772, 1594, 1095, 1285,
                    1593, 1093, 769, 1592, 1091, 1284, 1591, 1089, 766, 1590, 
                   1087, 1283, 1589, 1083, 1282, 1880, 1377}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1364, 1783, 1082, 1452, 1784, 1086, 765, 1785, 
                   1088, 1453, 1786, 1090, 768, 1787, 1092, 1454, 1788, 1094, 
                   771, 1789, 1096, 1455, 1790, 1098, 1456, 1791, 1792, 1100, 
                   1458, 1794, 1102, 1459, 1795, 1796, 1104, 1461, 1798, 1106,
                    1462, 1799, 1800, 1108, 1529, 1883, 1380}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1366, 1802, 1112, 1602, 1290, 1114, 1603, 1464, 
                   1803, 1115, 1604, 1291, 1116, 1605, 1465, 1804, 1117, 1606,
                    1292, 1118, 1607, 1466, 1805, 1119, 792, 1120, 1608, 1467,
                    1806, 1121, 1468, 1807, 1122, 1609, 1469, 1808, 1123, 
                   1470, 1809, 1124, 1610, 1471, 1810, 1125, 1530, 1884, 
                   1382}, VertexColors -> None], 
                  
                  Line3DBox[{1368, 1811, 1127, 1472, 1812, 1130, 1612, 1473, 
                   1813, 1132, 1474, 1814, 1134, 1616, 1475, 1815, 1136, 1476,
                    1816, 1138, 1620, 1477, 1817, 1140, 1478, 1818, 1142, 812,
                    1819, 1144, 1479, 1820, 1146, 1480, 1821, 1822, 1148, 
                   1481, 1823, 1150, 1482, 1824, 1825, 1152, 1483, 1826, 
                   1369}, VertexColors -> None], 
                  
                  Line3DBox[{1374, 1344, 1875, 1257, 971, 1533, 1386, 1705, 
                   972, 1534, 1258, 973, 1535, 1387, 1706, 974, 1536, 1259, 
                   1345, 1876, 1388, 1707, 1346, 1877, 1260, 1347, 1878, 1389,
                    1708, 975, 1537, 1261, 976, 1538, 1390, 1709, 977, 1539, 
                   1262, 978, 1540, 1391, 1710, 1348, 1375}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1384, 1243, 1695, 1336, 1244, 1696, 1522, 1869, 
                   1245, 1697, 1337, 1246, 1698, 1523, 1870, 1247, 1699, 1359,
                    1248, 1700, 1360, 1886, 1249, 1701, 1361, 1250, 1702, 
                   1524, 1871, 1251, 910, 1252, 1703, 1525, 1872, 1253, 1526, 
                   1873, 1254, 1704, 1532, 1887, 1255, 1385}, VertexColors -> 
                   None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{364, 650, 1533, 366, 666, 1541, 400, 686, 1549, 
                   420, 706, 1562, 440, 726, 1570, 460, 746, 1583, 480, 765, 
                   1590, 499, 784, 1603, 518, 803, 1612, 1613, 537, 823, 1631,
                    557, 843, 1642, 1643, 577, 863, 1663, 597, 883, 1676, 
                   1677, 617, 902, 1696, 636}, VertexColors -> None], 
                  
                  Line3DBox[{368, 652, 1534, 369, 668, 402, 1725, 688, 1550, 
                   422, 708, 442, 1756, 728, 1571, 462, 748, 482, 1786, 767, 
                   1591, 501, 786, 1604, 520, 1814, 805, 1615, 539, 825, 1632,
                    559, 1838, 845, 1645, 579, 865, 1664, 599, 1859, 885, 
                   1679, 619, 904, 1697, 638}, VertexColors -> None], 
                  Line3DBox[{370, 653, 1535, 372, 669, 1542, 403, 689, 1551, 
                   423, 709, 1563, 443, 729, 1572, 463, 749, 1584, 483, 768, 
                   1592, 502, 787, 1605, 521, 806, 1616, 1617, 540, 826, 1633,
                    560, 846, 1646, 1647, 580, 866, 1665, 600, 886, 1680, 
                   1681, 620, 905, 1698, 639}, VertexColors -> None], 
                  
                  Line3DBox[{374, 655, 1536, 375, 671, 405, 1727, 691, 1552, 
                   425, 711, 445, 1758, 731, 1573, 465, 751, 485, 1788, 770, 
                   1593, 504, 789, 1606, 523, 1816, 808, 1619, 542, 828, 1634,
                    562, 1840, 848, 1649, 582, 868, 1666, 602, 1861, 888, 
                   1683, 622, 941, 1699, 929}, VertexColors -> None], 
                  
                  Line3DBox[{385, 658, 1537, 386, 1717, 677, 411, 1733, 697, 
                   1556, 431, 1748, 717, 451, 1764, 737, 1577, 471, 1779, 757,
                    491, 1794, 776, 1597, 510, 1807, 795, 529, 1820, 814, 
                   1625, 548, 834, 568, 1844, 854, 1657, 588, 874, 1670, 608, 
                   1865, 894, 1690, 628, 910, 645}, VertexColors -> None], 
                  
                  Line3DBox[{387, 659, 1538, 389, 678, 1545, 412, 1734, 698, 
                   1557, 432, 718, 1566, 452, 1765, 738, 1578, 472, 758, 1587,
                    492, 1795, 777, 1598, 511, 796, 1609, 530, 1821, 815, 
                   1626, 549, 835, 1638, 569, 855, 1658, 589, 875, 1671, 609, 
                   895, 1691, 629, 911, 1703, 646}, VertexColors -> None], 
                  
                  Line3DBox[{391, 661, 1539, 392, 1719, 680, 414, 1737, 700, 
                   1558, 434, 1750, 720, 454, 1768, 740, 1579, 474, 1781, 760,
                    494, 1798, 779, 1599, 513, 1809, 798, 532, 1823, 817, 
                   1627, 551, 1833, 837, 571, 1846, 857, 1659, 591, 877, 611, 
                   1867, 897, 1692, 631, 1873, 913, 648}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{393, 662, 1540, 395, 681, 1546, 415, 1738, 701, 
                   1559, 435, 721, 1567, 455, 1769, 741, 1580, 475, 761, 1588,
                    495, 1799, 780, 1600, 514, 799, 1610, 533, 1824, 818, 
                   1628, 552, 838, 1639, 572, 858, 1660, 592, 878, 1672, 612, 
                   898, 1693, 632, 944, 1704, 931}, VertexColors -> None], 
                  
                  Line3DBox[{635, 1695, 901, 616, 1675, 882, 1857, 596, 1662, 
                   862, 576, 1641, 842, 1836, 556, 1630, 822, 536, 1611, 802, 
                   1812, 517, 1602, 783, 498, 1589, 764, 1784, 479, 1582, 745,
                    459, 1569, 725, 1754, 439, 1561, 705, 419, 1548, 685, 
                   1723, 399, 665, 363, 1875, 649, 922}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{637, 903, 1869, 618, 1678, 884, 1858, 598, 864, 
                   1850, 578, 1644, 844, 1837, 558, 824, 1828, 538, 1614, 804,
                    1813, 519, 785, 1803, 500, 766, 1785, 481, 747, 1774, 461,
                    727, 1755, 441, 707, 1743, 421, 687, 1724, 401, 667, 1712,
                    367, 651, 1705, 365}, VertexColors -> None], 
                  
                  Line3DBox[{640, 906, 1870, 621, 1682, 887, 1860, 601, 867, 
                   1851, 581, 1648, 847, 1839, 561, 827, 1829, 541, 1618, 807,
                    1815, 522, 788, 1804, 503, 769, 1787, 484, 750, 1775, 464,
                    730, 1757, 444, 710, 1744, 424, 690, 1726, 404, 670, 1713,
                    373, 654, 1706, 371}, VertexColors -> None], 
                  
                  Line3DBox[{644, 909, 1871, 627, 893, 1864, 607, 873, 1853, 
                   587, 1656, 853, 1843, 567, 833, 1831, 547, 813, 1819, 528, 
                   794, 1806, 509, 775, 1793, 1792, 490, 756, 1778, 470, 736, 
                   1763, 1762, 450, 716, 1747, 430, 696, 1732, 1731, 410, 676,
                    1716, 384, 657, 1708, 923}, VertexColors -> None], 
                  
                  Line3DBox[{647, 912, 1872, 630, 896, 1866, 610, 876, 1854, 
                   590, 856, 1845, 570, 836, 1832, 550, 816, 1822, 531, 797, 
                   1808, 512, 778, 1797, 1796, 493, 759, 1780, 473, 739, 1767,
                    1766, 453, 719, 1749, 433, 699, 1736, 1735, 413, 679, 
                   1718, 390, 660, 1709, 388}, VertexColors -> None], 
                  
                  Line3DBox[{932, 945, 1887, 633, 899, 1868, 613, 879, 1855, 
                   593, 859, 1847, 573, 839, 1834, 553, 819, 1825, 534, 800, 
                   1810, 515, 781, 1801, 1800, 496, 762, 1782, 476, 742, 1771,
                    1770, 456, 722, 1751, 436, 702, 1740, 1739, 416, 682, 
                   1720, 396, 663, 1710, 394}, VertexColors -> None], 
                  
                  Line3DBox[{950, 924, 1721, 683, 417, 1741, 703, 1560, 437, 
                   1752, 723, 457, 1772, 743, 1581, 477, 1882, 937, 925, 1883,
                    938, 1601, 926, 1884, 939, 927, 1826, 820, 1629, 554, 840,
                    574, 1848, 860, 1661, 594, 880, 1673, 614, 1885, 940, 
                   1694, 928, 965}, VertexColors -> None], 
                  
                  Line3DBox[{951, 1700, 942, 623, 1685, 1684, 889, 603, 1667, 
                   869, 583, 1651, 1650, 849, 563, 1635, 829, 543, 1621, 1620,
                    809, 524, 1607, 790, 505, 1594, 771, 486, 1585, 752, 466, 
                   1574, 732, 446, 1564, 712, 426, 1553, 692, 406, 1543, 672, 
                   378, 1876, 959}, VertexColors -> None], 
                  
                  Line3DBox[{952, 1701, 943, 625, 1687, 891, 1863, 605, 1668, 
                   871, 585, 1653, 851, 1842, 565, 1636, 831, 545, 1623, 811, 
                   1818, 526, 792, 507, 1595, 773, 1790, 488, 754, 1777, 468, 
                   1575, 734, 1760, 448, 714, 1746, 428, 1554, 694, 1729, 408,
                    674, 1715, 381, 1877, 961}, VertexColors -> None], 
                  
                  Line3DBox[{953, 1702, 908, 626, 1689, 1688, 892, 606, 1669, 
                   872, 586, 1655, 1654, 852, 566, 1637, 832, 546, 1624, 812, 
                   527, 1608, 793, 508, 1596, 774, 1791, 489, 1586, 755, 469, 
                   1576, 735, 1761, 449, 1565, 715, 429, 1555, 695, 1730, 409,
                    1544, 675, 383, 1878, 962}, VertexColors -> None], 
                  
                  Line3DBox[{954, 1707, 656, 379, 1714, 673, 407, 1728, 693, 
                   427, 1745, 713, 447, 1759, 733, 467, 1776, 753, 487, 1789, 
                   772, 506, 1805, 791, 525, 1817, 810, 1622, 544, 1830, 830, 
                   564, 1841, 850, 1652, 584, 1852, 870, 604, 1862, 890, 1686,
                    624, 1886, 967}, VertexColors -> None], 
                  
                  Line3DBox[{955, 615, 1674, 881, 1856, 595, 861, 1849, 575, 
                   1640, 841, 1835, 555, 821, 1827, 535, 1881, 801, 1811, 516,
                    782, 1802, 497, 1880, 763, 1783, 478, 744, 1773, 458, 
                   1568, 724, 1753, 438, 704, 1742, 418, 1547, 684, 1722, 398,
                    664, 1711, 362, 958}, VertexColors -> None]}, {}, {}}}, 
               VertexColors -> CompressedData["
1:eJztfXlUz9vXf4jMs4wlQ+ESMlPZ5vlSmTMXhRIRMl9CZpmuqXuJuJkyjxn6
NNOAZEpo+HyaROaZntbqdWo95669Pr0tv+f3fZ6lP8/6rPPeZ59h7/3a+7Wr
ZzfdZlJRHR2dcXo6OsV0xN9L2rImLP7pw2xSfSbPTzMziRtvXbuuunFiBjmH
LHkTuu0B9Wld89Y6zxCKHnjLKLSWhl5OrON3sn0E9W57yL6HRpU/z28n+4d2
aq+hCU71vBa6ReePHxxaZWX2zBfkOf7CWmPdNPa7PzrOzS/LI+R/K8nfAuu1
x3p7Yb0/W85L9z+FTYjS0LkhW4vcX3SLZq2N91iuk0ozo1+O75kRRfMrPK9X
a2IQ7ZtRtktZVzVZXHHdWjYwhIY825WxyVNFK8imbnuXdJrh4vlxbEwc7a1R
ztY6IJgGlDsca1jpBc0ut2xxeGgSHTw7uYr6flj+d8u62p29ViuVLtW/vs3A
6Xb++KwyTcwG9Uujoh2cr3coejd/vDR+fwG/F/O7SfNz8gj5O0vyz8R6p2K9
87BeTj9KzyenT70a4z8MHqemzVHLn46zz93X9q12XV+kItWyaeUONFHT6Qbv
dnv3C6Zi3SwPmYxX0SHzEU0ST6np6omRCYNrhNHhDjvbZRxR0bfx5bpHuGlI
f7PfG7fyN6jsFj2fd/pB1PpapbT5FVJpvcm5rivbR1OXjn9cHe0cRJ9uLW03
o2+uPOXatj7gEENWHmYJo9YFUSv8fp30+6+Yv5o0PycPJ79Y7yZpvZx+hD5d
CnnfufPJyfP2n/WZbkZq+t5oyYcNtXLPx+mo+lVHqej018xTr9qrKdB7wNVJ
24LJpPchrzKTVVRve1pAvZFq2rL9u+ZDtxBq7TUsbcx8FVX0vB63e5Y693zu
6uYaHUJ1ji+4+2VV7r7cvdTLc5GaToSsXmlTJJQeWaUEz97A/56bn5OHk59b
L6cfoc9XhXw/ufvFnQdO/sGzjJ6YzdRQqwPO+7N0btBLry6vPasFUbO5C0I7
NU+jcw7LLLxX36aG/0xwPVw6mO6FPVsw3yudUstsKfGx0V0yHFf+hHlMMCXr
xZRtXS2DEoMGe5b0uEcLY3sn/FE9JP/3Gun3TZn5OXk4+f2w3itY7yGsl9OP
0GdT6HOiFnvEvZ/cfefOD6fPwfY1695o/ow66NGXOzoJVKTnp6F9u4TS7hF1
r5mOf0G/2y2KNTZNphL9TrVfXSyc4l58jJ26OZt0T7QIXH8lhdaVSu2x82g4
7cLvB+D3xfF7G8zfHvPrYH5OnvqQfyvkbwP5xftTWVqvNvviB32uKaR9l+0R
935y95c7n5w+xXfrntOdu84plbI0V7NU42Lzx6NyIpat8k0j4xIUOqnKvfxx
Q/w+Hb/n9M/JUwnyl4H8tSG/eP9XSuvVZq+V+huyfefsEfd+cvedO5/a9Bkf
WPdm8aIZ1KV7xctebePzx2/g9w3xezF/Mcy/FvNz8gj5T0H+BMj/Eet1ktar
zf9RqmfZX+Lsu7bzLL+f3HnjzienTzFugN+nSue5P3OeZXl+9DzL+tGmT+59
lv1Pzl/i3mfOHnHvJ6d/7nxy+hTzt5Xm5+Spp+V9roj1lpPeZ1k/Qp//QJ+r
tcRHv/yNn+tvcPEmFx/9LP+Zs+/c/eXeT+733Pn82f6zrJ8YhfE7F29y8REn
D3ceOH+Jew85e8T9nrvvnDxK40FOPy2hTweFeMgvfOPn4BtKx7XF71y8ycVH
Sv15peOcPZLl4e77j57PX+O/xn+N/xr/Nf5r/Nf4r/Ff47/Gf43/Gv/fPt7F
dPKNAxuz6ObhnefuL0gmx9Asi7r6L+hx2xwf66gkanMv+NXB+DA2bsranDkh
9WQquVx40npRj1u0u828VnphQfnxrLMUz26ed3BYm/dqelvd+4GbeziV3lfm
n6q3VTR1dU/18qYZVMLapKXDlXs0ooZr1zsNQqjn+Jin00M1FBdudbr3mUiq
ecBp4sLuBXFxS8R9nlIcOm3v5ka2aVn0rN6rDzvMU2gV4nF3xOP7EY/bzWqf
ZdIyiwzXxVvF+Twhq6V77o6JCc2fJ75RbZWnfzb52EQEPyyZSQtulTpx1yub
HqgsSy0MSKGsM7d3XzwS/sP6F/jDZQl/sDa1GFNXk0pdVybaxd+8o3UeK/y+
cyF/XwrfPYnvumFdMVhXmrQuB+gzHvq0hd5KQm8DJL3Vw740x76MwP7et8rb
34HY36XYFwfsy9/Yly7Y93PYd33s+xuctyU4b3tw3rbiXOnUyDtXZXGubHBu
A3FuR0rx/tKIKT5l576gmOXHP7cvn0YLcW4P4twuwbmdi3vxBvfCEveC07Oe
w6v9Ffun0d8tb4UVu3ubptS2PrmtVjD5VtAb6jZbQzFz5yZ+rHSDvriO3DOk
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
hl5nrl5XKzWcqt7cvPufhH/zAsS6VjS/PaS7da7ehhrsvFUzhD49rRhXfI72
+nw5b8idB029+3bZpzXUbWhO9NURkVSlztLk2I5B1CfbZLaDTRq52Z7p2ir9
NjWv33XMPsNg9t5x8tg1US0wba0mB7cWJd0XBlPtly1eTJmkoql/XjUvtUlN
k7+6PxrhGEqV/fpc6bRTRWfhP0dI/rPtwP7X5pqlkvmVOl69M6LJxHOeidGS
IBr/Nf1LRqCGRgeVebPHO5IeLun827cuQVQF/rw+/HkD+PN7PKN8ddbkrou+
btwxL5bGuvovH2IZTH1MIo+ZPtTQzMQrJT1rR9Gbw68c7QYGUWXMU02a59bt
zLqjeqbS8JFJDv2tY6hBTtX0Wmty/aLEQeG3z6kpulcD47fNwmiWl+82fX8+
LuDGV2Lf/8S+f8a+h0LPEdBzCei5z5ETLiWKptGbhsWq6erfpukmBnW7vw4i
P7zzHnjnL+GdPw971A/2KBP2qMherz8cZ6SRT1mfBn7tYsmla5nwVi3+Hddr
u3eexrUvnsn1n4sea/PPsGsRZOK46dG2XP95GOLfHoh/XyP+HVbFtVS3nhk0
3uhy0Bmd+2Qz1uFpyVYh9N1Zz6Xd1tzxRzmlmt28T2GtGo3dMyYkH1d/KeF4
y5P6lplh8ZyOD+iw9NTxRLp2q0+V+XZhFFM/4/WjB5nU2GVtqqHRIyp6IPDz
g4qh9ADzPJPmadqidGfbQZlUb+yJQ2suPKRzv+u4ZYeE8Lw/Jq5fifMQgvMw
E+ehvqHP+g0+akrq7mQceCWUDMsY/jlyn4pOQs9Z0LM/9GwIu7AYdmE47IKw
L4+nDzmtqqGhGJvF9d4FROWP39ygl/rlYQatWl9xvGtwAmXB3g2HvXsAeydw
uaoSLlfKOHHg0Ou58fXCt7HhuXZa/8uQmoMuqNh71xL6CYR+GkE/N+226Lf6
/IyKWS26H1D1CU2+mtVv64lQ6rPmo0HSjec0o+Y+95dTkihQ86q8wckw+ht4
mjXwtJISXzUwZ6fbFeNUqnbQP3PiuoJ4Ic7svpV1TG48mlC7ktmnGyzvkhs3
wb5Xxb6fwb5z+SznZrbzF4zWkIHmypCxG6+T4fCIsWtLBdFivP/P8f6n4P0v
CVzOBnquAj13tW1bMtQsNy5Y5Hpn7sskOuI3fXBmRkFcsAN+oB38wJVLTvr/
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
x+PWxv/l8tRcvCDz8gTfZ47E9xG/j0GdpIdUJynXM4txuX6Sq8vi5GyIOodT
qHP4iDoHjg/I8Yw4/sIYpo6aq9vkcH6u/oTjSXE8UI6fyPGeOD4FV9fN1ZFu
kOrTqqE+TexLXdTDNEU9TAbqi6wZvqTgq45BHr8j6pciJL4kx8MS83D8Dvn/
kYWhrrUq6lq/oa6Vq5fjzpsz6q9Go/7qNeqvOF6YmIerk6+P+ofKqH9Yh3qw
PhLfcwHqAB9LdeA3Uf85TOKXCV5SfYX13jI/QozL9faivrcH6ntVqO/l6gbF
PHK9k+CxDpR4rBw/juPdcPX/G1Hf1V3iL39n+LAcj5Ll3zG8LY7vI/gjVhJ/
hOMjcPXtHqiLfibVRXP1llydGFfvyvEKOb4Sx5vg6kVFfdoTqT6tJMMT53jH
nPwcz5Hjx3G8Ko6nw/E+uDrzFKZ+9RPqGKMl3rTgY66Q+Jja7PV/Sj9wMS73
URTjcl8+MS73edM2P1cHKPff1ia/3F9Caf/nn61Prm5NWz3eZKYeb75Uj/ef
dn5+jf/vGG+MdztM6ucgeOL9JZ64mGcXzqGDdA474Ty3w3nejndvON69E3j3
isIuPJTq+cU8cp+WZKm/hA3e26J4n/fhfZ6O95njyc7G+++I9/8D3n9T2IuH
sBd7YS84/hfHG9LWf0PmKXB171z9GDcPF6dw/G6u/oqr4xK8xWTJX+V4cFw9
Fcef+tG+FjKPg+MLiL49b6W+PZx/xfUxELxpHfc8v64z/DrBw3WGH/gafqDg
dbaSeJ3CH46S/ExtfSFk/pHgrURKvBVf3Lv5uHcXJH9D7lPE9c/h+nJwfH+O
d6yUx6qt3wLHpwuT9Mnxs47hfMYxvB5X3PchuO/a+CNyHyeu/wzX10LMw/Ho
7yCOG6elv4GIp/SleCoKcWVPiVco+Gjp0r3+G3HrHMStjxC3Cnnk/khc3xVt
/Rw4/nhhecpcvlXkVRMLyZfk+HfmeA/PFZK3JfoFvQb+kAH8getDok0Pgn+d
cyAPD1mAuHg/4uJLiIs5vuckhico+GVvJH6Z+K7ct4rrd8T1yeH6q2jDK7g+
D3LfAI6nzOX7OF4kx6cT3+V4XnK/Na6/E4e/cX0qOL48x8Pl4nHB+7sk8f6E
/HJfOK7PGNefShvfWc5Xcnlbbr+4PCyXb+X45pycHP+O64PH+SdcPx/RP2Q1
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
4CTFJZxE5kFwuIf4vchb7ZfWJeNC/wVoEqHV
                "], VertexNormals -> CompressedData["
1:eJztfXVYVtnbLrbYooidiIUSBgawCLEVURRBwQDbscZARbFQVEQlbGwxsMVW
FnZhdxcYYAsWKmevvZ7b82Od8858c64513f+OPPPe81ys/faq5647/vZVfoM
69Q3p5GRUc98Rka5jAz9954Zar/bb1Ll+Mu9WN2thwIeHHFlI0qE18/Mesda
Th119IZLC/7wweXIR/nKsYizzlOytPaHgW5z34X68Z3mJyvPWNqVmZzd2eO7
1n702iyTz2l+fOmzXntulxjEzPtsX/tBa/+n/THUPvPsrCra/dnGx/L+M/zk
/b0mnxyv9YddqiH7E3RB9qd/6KhmWv/Z+aey//0uyf5HrBsfoL0vr7ZIvu++
d3P19/23+ln0j9nL44z6/P795eHwKEO7v1XoTJdVWW5syoiUDsd86rPQOUuH
if54rLV+PaFSXZ4eH3q41uQCrMDNoh9Fu/WZmDlO31x5w5G7fQvX0t6j/qQq
oj1uua1FwabNuX/euLPp873ZNlaq0E+tff+5glXn92zMfxVyeX10Xh+WtDwh
UIzDg4IjK3/POuTQr6/93G8HAtjPl7Gtv4nrjxXsoF3PdtD1Lej6SctsrbX7
MxO6fyu6/5UzvsFaf9hs6o9bA9mfuuve22v9Z2P3yP5vpP4bpXZfpr0vtxkm
33fvTPm+D1vdTdTGhS/oLcdnvoMcH0PjiXWJdYr1iXHEuGI8E47O/zQl1uz3
7+6OqzNFe8c810d7uGcl5K42K+O79XvH+d12ZYn2I54+qxuOM+VvioTMa1ay
Dqt+/oje/7eP2+R+lGDKf3RZNifOgbHBTWscFe2HllT9Wq5BAb7E5Nm70dta
sMCwfZNE+7KTGwdmZc11GPusdNldnVuz1PQ1PUV7viVVzcs3KMAW0/Vj6Po7
j9sU0e7PvtP9B9L9j3v6RGn9Ye+oPzWoP555PA90dM9yzEP9j6D+f2uQp/PU
WDO+g953Nb2vS6PU0dr48Dcz5fjUpPFpbFNtsjaevB2Np7+JHE/sc+x77Hes
S6xTrE+MI8YV4zl28VzHnsNuJOC35MAfevsW/6SRKf3eJHgHBpyPfV2cWzfc
+Uu0j5x9aHTLU28S3myoHpWy1Zynxbh+E+31/MzWjHj/JGF2Jf/j7/PW4y5j
kj+I9rABrz9lZfV18KywfHPicWseX23YW9Fexc8sUbveUb1+2OxD07T7O77Z
YJrt/lv92/XS+uOo9mfs4olH/IbdcFT7P3jP10aZ1u8TOuZJz/a+nwqM/qCN
D29P45OXxmdzx/cHtPHkzjSes2k8cW7iHMX5iX2OfY/9jnWJdYr1iX5jXNH/
jgE/wswX1uT43Z6//BvR3t2ja8sXKTV5tYtdY6b62vNzr/OeEO03s9oOW2hU
kdcxnrLp16Lm/Kz36AjRXrrW2j1ZWasd0vdlTU7+1YLfPJg0QbSbZrVdq13P
Khsf1a8/QNc7enTtrN2flaf7H6P79wn4MVHrB/Om/hyi/vQLDOip9Z8d8m+n
99+J+n8n8cUP7X15ML3v2XPyfVe1HjhbGx/+/ZQcn3s2cnwKfAp20saTT/9T
jueY43I8YYdgl2CPcG7iHMX5iX2OfY/9jnWJdYr1g3HEuGI837wfFD7zgD3H
78UJ9xeL9pWlTMaGdLDhVaLeT7twtzlvejdssmgfGNg8Litrt0P3nl5Wk1q3
5KPm/hGon5+lTBZp17OsyPdTxfVGdP3S94OWafdlJ+j+q+j+gRe7hmn9YbOp
P3nfyP402xhtpvWfHaH+N1sh+1/j0TrjLQ6Mr3ok3ze4sXzfo6nFfmrjw+st
lOMzqKEcnwJ5i9/VxpM/2CvH07H5X9t32CHYJdgjnJs4R3F+Yt9i32P/Yl1i
nWJ9YhwxrhjPE69zjG9dpQnH77OBRXeK9vkm769naXYwMt/t96uLauu/ydmL
ov1JWo6N2nWsM13fma7fE/l+rnZ/1p/uf/WOvH+ssXOM1h/Wzqid3p+WPrI/
4ypPK6L1n82l/r+m/vf0jGk7ZlsL3n+hfN8BofJ9F2+OKn5sXh/e7KAcH4uZ
cnz+qb8Buw47D/sOOwS7BHuEcxPnKM5P7HPse+x3rEusU6xPjCPGFeMp+5Xo
kP33PduS93bVNUXt2efi8vqydP1FP6+m2v2ZGd3/Y5i8/6r9WSO1/rCR1J8x
h2R/vlfY4qb1n1UYKPsfai77n3n7z8na+/L7ifJ9776T79v2WO592vhwq/QR
+vi8uSDH55+OM/wk+E3wl2DXYefHKOsZdgnrGecmzlGcn7/3Oe177Hesy9/r
lNYnxhHjivGclJYjVlyH30sD5PUzaT0fM5X3D6P1vNo4h76eF1B/HJT1HOxn
dkz0H+u5B63nzdFVLcT7BtB6bov1vEuOz6oZf72e4cfDr4c/D78Tfij8T/hJ
8JsG/j6fpV2Hncf5DDsEuwR7hHMT5yjOT+xz7Hvsd6xLrFOsT4wjxhXj2e/9
oOXivvgdRPcfQefzH9SfX69xPq/Xz+eD1H+cz9XpfJ7zSL7vRDqfh9H5nCNa
jk9uOp/Ncsnzee0WOZ6rnOR4Ii5CnIT4CH48/Hr48/A74YfWUPwN+E3wN2DX
Yedh32GHYJdgj3Bu4hzF+Yl9jn2P/Y51iXWK9YlxxLhiPAdTP/B7WvE3DlP/
4W/cI39jBr3vefI30snfWHZajk8XWzk+NT9Lf+PHeDmej0/L8UScibgT8Sbi
IsRJiI/gx8Ovj/hf/Gfph8L/hJ+E90D/f9t1svNYP7BD2MfYvzg3cY7i/MQ+
V6//vS5pneL+GEe1P//Tf87e/yHkP/8v71swQ/ef69D4xNL4LOoi/ec+NJ5+
NJ6I2xHHI35HnIm4E/Em4iLESat/x4PSj4dfD38efif80N/+J/lJ8JvgL8Gu
w87DvsMOwS7BHuHcxDmK8xP7HPse+x3rEusU6xPjiHHFeL6m98TvPHrfT/Vl
PJj4So5PNxofu3IyHiy+zkcfzwNv/zofgrgdcTzid8SZiDsRbyIuQpyE+Ah+
PPx6+PPwO+GHwv+EnwS/Cf4S7DrsPOw77BDsEuwRzk2cozg/sc+x77HfsS6x
TrE+MY4YV4xnTwc5LvitWuuv8xv/tB1xO+J4xO+IMxF3It5EXIQ4CfER/Hj4
9X/nz//Tdtgh2CXYI5ybOEdxfmKfY99jv2NdYp3+3fr8/+3/v/3/5faUJmZ2
TQd255XCdhUvUH8Ym/Ag57032np2PeyRdahxO76h2+GmJkuHMesrtVa809qf
2lVY9iHrvEOdcQ83ODQZzqK27g4T7S6rPWwON27H1h+f10Rcv/iSvN7Qc6eM
rX9qVPmx/M2Bhm0cNg1mTu07bbqqXf91u/+QWetG8/AqNnNG9R/Gtr6Y0PGa
8PNLux7R/p8/7JvLWft39rROkN7evWkj/e+bBZ2M0O7Hrj2R9/m3xufh1e0O
2rjwmqZynBbvkuPjdtz9D+09ud18OU6OK//6fWe51zyhjRffkUeOX6NRctwM
XT8nUd7fapQc16Dl8v7lZ8p5elrDzF3rD/O6Lfvzb71vme89Rmjjyd/1/HRS
zE8VSzmetutd9PE/HC7nZ/ZeOS+G7nPeX85H6jhf/X4/+b87L4baLXLJcXlw
Qc7bmK1yfNBvvMff9f+fto+sW33qyTuu/MTKeVdehA1nt0MvTXqr3X/U0Jy7
d15pwOp/rN4t3nI4K9oga7aYxxKLfLqtPeTBZrmeMo3pMZQ1i6vr9/4v+vPF
M6SVdh3vO8vHWfs77jbpr69fMOfICO15vNGsnEx7Pp+YQz7X0PWmqy6+1vrN
7V6aJ2jvwWp0kP03dL3Vghs7N04byEu/2mwelfInX9Y52fTBvzieuC+eg/uH
N+jVNHHcCF4581BZ7ZedX9Hs2p2/eO6lIvJ6/G7zltfjvMD5gXNjxjjPL5Ep
f7L2OZqEas9lYSnyuWVnynNnf5Q8l/L6yvPnUeXDej/wm/ZM3h/X4e9wvaF+
4nl4Pp77b43nv9WOcwfn0L99/hhqxzmCc+XvzhPYM9g32DXYM9g32DXsW+xj
7F/YOdg92DvsZ+xv7GvYP9jDv7OD2P84D/7uHPjvasd5ivMV56qh62HXYedh
32HXYedh37Gfsb+xr2HvYf9h9/+7xsFQO+wl7CfspqHr4U/Av4BfgfMd5z3O
efgZ8Dvgb+B8x3mPcx5+BvwO+Bs433He45yHnwG/A/6Gof6/yHF58pSM/qxi
08T3vg5/sJd9fsa90q6PrN/ywOS47qx7Yc8/z8d4s+WBliNFPHWR4kRzhdex
4ri3b6hHPRacv5rVvM027EJMlYcizqpEOHqgwk/Ym/rMKe+NEqyd76F3Dzyq
sHpnT+n5n9M3etd0WeLBL13tX8arkzOrmtoi+Jdoj+lTOiuPHQ/78+fZ3pnW
rOi820nieuCdRxXeyDHP5FXp5/z4zzLem35Y9GVHBlXsIOJlG8JBW1CeMonw
0G1Puvcdad6cf7jXqsHlw56sRK8Zr0X8vnJSj95Hb2jz+zDUPz5qKPvabFgP
Mc53bxS6nz7HmV+u9miR+WBfNi0l0uPH/8F63kI4llFhiQNcoPy/yzqj9ntY
ZV4/qWtP+xwBLN/MMof+Cl/YNM9oj3Y9K07XX53x19efIrxhC+EPLem5l68V
StXei7Wj98pP7/Vw/YF12niysaXleF4eKMdzdKMP/bVxY/E0bt96ynFzo7zw
IYU/s256WIbzEg/24Yac30of5PyeonxxIM1LC8obP2h14cavPHYsjub9Is37
4Ztuded41OMnf1bV11vVZXK9HYkZZpb/RgnerYdcVyln5LqKp7xeuMLPyd+4
Xqpl5Cg+6nDFQXuP9Gfz8lY/fF/sI8r3bVB4Jg2PBX/V9gX//quzvi8+DJL7
wtA4R3UscGdQsaasvd3+crnmdGLTV+yaKN53Qu87FkN5XRZQK3hxr/aMHf7+
Nl7cfyv4JQrPxMg11MW1U4rj/A1bV2bVysNSUkP1vNylGZ1YVGJ+XjSt4myP
xJIsxm7/T9GeQPnGnEWz8z12rH49P3aDKWc/hn218GrC3O7nvynaB1xrnKv5
AxMeW8pscq9vzqzj7ltb9f4QnrpU4aUUnb9vokngh4Tyo0/2/jSiFbO+ETpI
tK99VihNa3csTe1W1G5KOFaEwldpc61xce25bCk9twM99/tn50itn8xc6ec+
ylveITyhFr3XphlXv0Qm5mdnU+U4rKZxuDp2oL1bp5SEkzRuyTRulg1lHtPp
WHZ+S88JZwZp88JdaF4m0rw8ntIpz+BiTfmXRnIe02PkPLY7dq1KrtvF2eRN
Rab3CWvM3642u6PjREF9fy71zc1+Pq7r3Xa/OV9S+NlX0f61qszPuyj8lu3P
yiYtsDniuKjQaP+43K8TYmd80ttT4l6llPr4OCHT5NqS44GZCQ7dkrLxXvop
PJPSz+9XCop9k/B4QpRVgVOV+cw7Yfp7jXxxfHqX668SNruO+hZ5vgYffqD8
F9FuTvn8MIXf8vLi1Y/OaacTTm/5Zd+5njX3ab7mnZ53Na853yXttONJpb0O
4ZFTlftcsy+zWHuu48fFA7M9N3F+vmpaPx2rX5ml9zOU+rmM8v+tlfc6H3cg
XhsHx8U0Do40Dk9auk6JsjmS0KTP7GzjFk756yJ5s/NqWq6NrrPMNzcf3shK
n5dFNC9d8tR10uaRx9A8ptI82jrHld9/qz3bl2zVutjNjjwuNCWPmPfSF5sv
3Z/Pmb2cHN/u5GB7vqRFzhA9P0/rMp72H/ad/flOB8IGfnUc4RSZo41dLt5v
+CS9P1OvuTjYepXn7+0r1Op6y4QXuzpOHweP/4l/6b87CG96ks+okMf5mtx2
e/vb+XLa8QAL9xui/eLsOW99l1Tn8wNXHL/h4cQtdlXeK9pPEb/BUuHh/Mx8
WjbAKDe/Pu5tkzc2Lfhkn1HTRfvbdXNjtHZW5VKupqJ9PLVbEF5WnnDmg3Qf
z4aNsrTnspsXduvPLUvPvZbPqKjWT2ZG/exD/fQk/MyN3uswvVffay5pNl7l
WeEIE30cqtI4LNyQ+2f4wK8JNmkT9XHrSeNW8qjELXJ1keN8jvCLS6+tj2rz
wucGy3lp7ybnpVTe1e7aPPL9T+U87g6R8/i0+6pd7xr1ZtPfP1kSV8iD11jw
oZk4z9eMnJvv9PrOrO2jT6W+nLbnJoPrtxHXvyC8OIX4PEMIL25ya9mvorUL
sWlZzutXjc7F/8h7T1+3leIHJFT1tuaFVtScOLpkCX474ZH+vuaEIw8lPPM8
4YyVHLyd7y2150Gj6y2Oa2fHN7R6u1m0Lx72cJZNWmMePdk1/+kZTvzdp5dR
+vgQvlxV4f/sKL15SI8SZjygaY9vb8Zp83tiZbC+Pgdn5fAtYcZ+JefV2wdS
uzHxA74rvKDwE/VjtOeyMnXe5hPP3UvPzeXg3VzrJ/Ogfi6nfg4g3HQ0vVc+
wmft4xvP08aB/YiR49CYy3HI8enRUpPahXgJGrdWNG6DCa+qTuM8mXCraMtO
DbR54S635LzUD5Dz0qXAz0vaPPIeKXIee0yR8xiypWTHjI0D2LTiQa2mbnfl
PfJtqPhZa8+c/6DUkJk92LVZJ1418rLhA33bc+HnzCL7tF3hEQU1at5i3ciS
bI3n5y7PRn5JCAxppvdzaP48Rb8ftuOHfWwXJf3My9tddb2vn4e039IUflF6
tOeC0BPNeVjLoF2jS1hym+R7M3W7E7NkySAzFz4398rq5VPr86md/KN1P5l4
GqcU3tG4Or9C7iVW5vnaD5kw3bQZfzD/xAV9XU3u/E5rZ7fbyfZYan9LPI/2
Ch+pw8e3G7TnMit6rhE9t3baq0itn6wJ9bMU9XMp4eu2Ck9pze55574dtmNv
aBzMrslxOO9YwDJ2ZEnu0FmOW20at/mEU+ZdlJ2/9Opkqpc2L3xSsJyXVx3k
vAwdmKOGY6/BrKZdwyyXDycdUrY3bpMuzoE8eQOd7vVkZs3iLDek7nbY06O2
sbi+L/GUwhWeUh7nrXH1bpRiR08YVevSZYLDqM2fdT8hdnuzoONTmvJuV4+5
b948x6F6zVLX9fki/pK5wl/60GN+m1XWLfnKSqOKdemyw2FIUPg40d46Jf7c
kvrNeUtr2/6bN+91OOf/bYmOlxGvKULhNR0o1Sao1J6qPKn0+djNmxMcPlcN
/a6fJ0fTP2rtbDa176T2Q8TLea/wncbM63lXey47ayWfa0nPHZevWXutn2wA
9bM99TOC+BB9FB7U8B3LrLRxYAdoHKrVkuPwbdK5s9Y3SvH4Y3LcStC42dyR
OHTk0ez8qOic5xO1eeH2lnJelrSR8+JXNtRd7Mf0BlGDtf3IhuWV+zGW9uNx
q3f57bxsWHXaj6G0HzMXZ+dBTaf9eHBT24naunIcS+uq5G4rfT+m536QoK1D
1pr2YxWyW3XIjsF+hTrx+WI/pi+7kqKtc1aA1vmcj28Xi/04c1vrNtq+YJa0
L9ywDxXelDXtx7ufS23R9h1rTPsurPavN2I/5m43JE6056b2OcSjClT4VOeX
L9H349RcK1uL527ykM/dH31d349LqZ+pz2Q/o4m/MlbhWaXn76vvxyAfWy7G
wZT24wnaj502tg0W44b9GE77sc1CySPoS/txIe3Hk+NzG4t5WU/78ZePtJtT
XezWaOctKzhfnrdjyW4uCa1YXTuf2aNB8nxOIbt5mXhWg8hu3plySrebQVnO
27Tznw2h8/+0n79uN9e36jxDsxfsJtlN8K86Kvyr3GQ331W6s0azRyyU7NEf
ZDdz1nlbVLNfbAfZLz+ym3sVXlYA2c15yXlzvx3XguUn+ziL7OZ4an9zXLaf
J77WVIWvlXfYQ91u1p7sWkw8dxg9d+6LXG7CbvY/N22t6Oc46mcvspteCo9r
vrGjbjejaRzsyG56tNqj283CNG4tadwGkt0sRuM8iezmQLKbCybLeTEiuznC
WNpNLzs5j06T5TyauUq/1/jFO0fNX2K5Z0t/qTn5vR9utm6m+VfsJvm9D8nv
PUjxGeKy5uT3/ul0LaO1XS7Wn/y3GeT3ukdEVND8PVac/D0f8gtHkZ8I/9Ao
v/R7S/oEntP8SRZG/mQW+b1XAx8e0PxPNpr8T3uyTxsUPljbH9LvPXFpmqXm
3zLT7tK/dV4v/d5B44fq7cWpfTXtq+UKT2wm+b3Dq53VnzuYnvuB/N6v3rKf
s6ifPeh9uir8sQHk95rROJjTOKwgv3cWjVsvGjcz8nsLdJHjfIH83p/k9y6+
IedlDvm93/JJvzd/ipzHQjPlPJ45LuNW260d3vcOa8x2r5XxTgDFrYFPJt5v
s9+cpVJ89I3i1hYKz2rv77j15MHNuV87Iv5iObget/Yc0DH9WGCmoxPFa+Cb
/anwu1Y026XHrf2vzDpnfKoyO0zx4FGKW2+8rThIix/ZPYofp1HcOkHhlfW7
JONWv63h9zrVs2aV3WR8OvrS1QgRt3ZX2mcRP22Ecp+kF8f1uHXkklrZnvuB
4tYcQVHZ+rmZ4tauyntdpLj1e//s45BMceszZdzmUdxqkjf7OKd8TdXj1mia
l5c0L0E7vfS41Z3mcTvNY0tXmXd6UW9Dv1xzOvFNkTJfkekn804HCiaX6t2e
8YtfZX5jJeWb3ip8NtvFvnreadb4yhlZtfLwp5Q/8bPx1fNOE9w/PfBILMnn
U75lMnRPxCtDXHZ9lcw7TRm906+GVxOe457M5+S/KvNOu7ZvPdPrmzM/vkPm
f7yJ/9ZL4b/dmSvzTkWnR5/4NKIVD7ws80tHGvV5LfJOBZX2A8SL86L7wK6x
GuF63mkjPfcoPbci5Z0GKP0cT+faSXov7Lu5lHeypXGIpHHYQXmnBBq3JzRu
lSjvFNQwO4/uUaDMOy2ieQmneVk4SuadXO4s0OexPM3j7kuX9Lx9VLUJdfwc
/uAOdWXevkYNmbcf8/FX7PkYb+42VOYnHxKPrinx6GpRHr405eEPLJlv8tCj
Ci9HefhmlG/fWKDh696Z1vxUuMy7ZhK/bifx2e4Tv27QA5k/rzbUyO/yYU/u
4S3zwMaXZJ58zOXc18wH+/K0WzKfbEW8u6XEo6tBvLv2S2Teu0zUmpn2OQL4
zT9kHnv3dJnf/hIp21dTe2vi47Wk+6wmPl5Wksxjf7wknzucnmttK/PVz/+Q
/bSjfs4nnt5Teq+uxNPrTPnnkXuYPg4zKP9ckfLMZd6u18ftKuWZ3xF/b2CD
7Py9M3tk3rhEspyXpb3+Om9cqsqxA5aRo9jnH7vn7D3Sn9cbJPPSToS/WCk8
vZREib+cX3ms5bzNNnwh4S8R1yWecsDjsI1XJ2fu/krm20OIv1eO+Htjib93
ylniJqO6lD79w6IvL+El8/z/FNcw1P66WIvAoze6s1+D1oXHRw3l5wpLPOVZ
hMQX3nWWz63RVT43lXh9JRVe37BpEke46ynfq/17+V6zai2zFLhAqWg5Dm+W
ynGobHnU12flcHahgEnY5rJ9WZXv006+0Nov03hWU/Csmr5Fn+Zd4MxsI/b1
tDpSj1W1Mlun253CDUzWBbvxtHjTZ91a1mcnazUZLdqvEQ61W8GhnLxnlN6U
1pFP8Nw3vXpUN9bza1SIWIdzq+Z85ba+Kw9zifAIiujPWj2I6Cje1+fjqbGF
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
                "]], {}}, 
             Method -> {
              "ShrinkWrap" -> False, "DefaultBoundaryStyle" -> Directive[
                 GrayLevel[0.3]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "RotationControl" -> "Globe"}, {
             DisplayFunction -> Identity, 
              PlotRange -> {Automatic, Automatic, All}, DisplayFunction -> 
              Identity, Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> 
              None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
                FormBox[
                 TagBox["c", HoldForm], TraditionalForm], 
                FormBox[
                 TagBox["r", HoldForm], TraditionalForm], None}, 
              AxesOrigin -> {Automatic, Automatic, Automatic}, AxesStyle -> 
              Directive[
                GrayLevel[0.65], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], BaseStyle -> Automatic, BoxRatios -> {1, 1, 0.4}, 
              BoxStyle -> GrayLevel[0, 0.35], DisplayFunction :> Identity, 
              FaceGridsStyle -> Automatic, ImageSize -> 264., Lighting -> 
              "Neutral", Method -> {"DefaultBoundaryStyle" -> Directive[
                  GrayLevel[0.3]], 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "RotationControl" -> "Globe"}, 
              PlotRange -> {{-1.3108076991009967`, 
               0.31080769910099676`}, {-1.3108076991009967`, 
               0.31080769910099676`}, {0., 0.00046841184495585253`}}, 
              PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}, 
             Method -> {"ResolveAsTriangles" -> False}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "3DMathPlot"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[(c^2 (1 + c)^2 r^2 (1 + r)^2)/16, {c, -1.31081, \
0.310808}, {r, -1.31081, 0.310808}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max2117$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`max2119$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min2116$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min2118$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2116$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2117$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2119$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2714377$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min2116$\
2714378$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max2117$2714379$$ = 
                 0, CalculateUtilities`GraphicsUtilities`Private`min2118$\
2714380$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max2119$2714385$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max2117$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`max2119$\
$ = 0.5, CalculateUtilities`GraphicsUtilities`Private`min2116$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2714377$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2116$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2116$\
2714378$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2117$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max2117$\
2714379$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2118$\
2714380$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2119$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max2119$\
2714385$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    ContourPlot[
                    Rational[
                    1, 16] $CellContext`c^2 (
                    1 + $CellContext`c)^2 $CellContext`r^2 (
                    1 + $CellContext`r)^2, {$CellContext`c, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2116$$], 
                    (
                    Piecewise[{{-0.5 + 
                    0.8667900142826954 Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    0.8667900142826954 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min2116$$], \
-1.3108078149306845`], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2116$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max2117$$]], 
                    (
                    Piecewise[{{-0.5 + 
                    0.8667900142826954 Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    0.8667900142826954 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min2116$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max2117$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2116$$ + 
                    0.001621615629861369, 
                    CalculateUtilities`GraphicsUtilities`Private`max2117$$]], 
                    0.3108078149306846]}, {$CellContext`r, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$], 
                    (
                    Piecewise[{{-0.5 + 
                    0.8667900142826954 Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    0.8667900142826954 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$], \
-1.3108078149306845`], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max2119$$]], 
                    (
                    Piecewise[{{-0.5 + 
                    0.8667900142826954 Tan[1.5040801783846716` #], # < 
                    0}}, -0.5 + 
                    0.8667900142826954 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max2119$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$ + 
                    0.001621615629861369, 
                    CalculateUtilities`GraphicsUtilities`Private`max2119$$]], 
                    0.3108078149306846]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["c", TraditionalForm]], 
                    RawBoxes[
                    FormBox["r", TraditionalForm]]}, AspectRatio -> Automatic,
                     ImageSize -> 264., ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min2116$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1, 
                    ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max2117$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min2118$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max2119$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3t/+\
ARKfkbZV8AkJ1rExaUBJyvfeEiexcO1gO9vgz4PPbpJm7SrFdICm9MOpvjSP75577nrPT0SQ9Hu9nr\
ppzAfB4mQLT8+MGYlZLgoevz/PJVGKCp7cwGf3jAmJ3icMfpDY+W4bcyDkDLQ7v8H3gUUFA02+\
asqopkRNDyXkGY1U7RlLemp+MmUiAkZ/khc7r7eHu6+\
GDgZjGYPWRHK12xYyzyQokvQQ6JYxewz4N3d8Wh4/FYyF5HtBeETUY+OdSIgNjODAMB/\
vW683Uw8wMQ08BhlfOU1WnqO2FygtKU8nZJbjG5eTtd0WGGSqHDcPS27WKciFfwcfiNDG5Dw2aXu2B\
PqFcc3ouyirf87dAM9v28JLcbaaOMzvHUPeQNNTopbpfNm6To6Rqmtt9HOurmq+bDTIy6dM/\
b90TJVeDmOnbRhkdmJqvFp7y/DDtvAix66fi/uRMZ+\
dowRcNRwqwX0UccHmUTRTHjiJtk9X5cbhMO5XfIfo9KlghROYOMt+\
sf3xpAKvN4UQazfdgHR4PQMCkhPjii23+zSlepSBhMgAz6/\
rl002EXUoHne2rz3lMTUDzBGybnlCc5Qs1B10lH35o+\
JWcrnQZMj7EdckJXKt6O9ifaQhl8cT4RlJiBc09erNYZXUGKS37AclSJgDpwhJf5mP/\
eYeLlYCqTqUqC7pWBzY0pz7J9EvC3xMeKqz5o7tObq82xazCcRZrbqAJsnitNkc0/\
0m040bmgPdlwTfkvgP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCTZi/Ff6DeSWuHY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "ContourPlot"}, {}], "\n "}]}],
    Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Alternate forms", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[c^2 (r^2 (1/16 + (1/8 + r/16) r) + c (c r^2 (1/16 + (1/8 \
+ r/16) r) + r^2 (1/8 + (1/4 + r/8) r))), {c, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               SuperscriptBox["c", "2"], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "16"], "+", 
                    FractionBox["1", "8"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "16"]}], ")"}], " ", 
                    SuperscriptBox["r", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "8"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "8"]}], ")"}], " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "16"], "+", 
                    FractionBox["1", "8"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "16"]}], ")"}], " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Decompose[(c^2 (1 + c)^2 r^2 (1 + r)^2)/16, r]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 FractionBox["1", "16"], " ", 
                 SuperscriptBox["c", "4"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", "r"}], ")"}], "2"]}], "+", 
               RowBox[{
                 FractionBox["1", "8"], " ", 
                 SuperscriptBox["c", "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", "r"}], ")"}], "2"]}], "+", 
               RowBox[{
                 FractionBox["1", "16"], " ", 
                 SuperscriptBox["c", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["r", "2"], "+", "r"}], ")"}], "2"]}]}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[r^2 (c^2 (1/16 + (1/8 + c/16) c) + r (c^2 (1/8 + (1/4 + \
c/8) c) + c^2 (1/16 + (1/8 + c/16) c) r)), {r, c}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               SuperscriptBox["r", "2"], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "16"], "+", 
                    FractionBox["1", "8"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "16"]}], ")"}], " ", 
                    SuperscriptBox["c", "2"], " ", "r"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "8"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "8"]}], ")"}], " ", 
                    SuperscriptBox["c", "2"]}]}], ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "16"], "+", 
                    FractionBox["1", "8"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "16"]}], ")"}], " ", 
                    SuperscriptBox["c", "2"]}]}], ")"}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Simplification", "id" -> 
     "ExpandedForm", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Expand[(c^2 (1 + c)^2 r^2 (1 + r)^2)/16]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "4"], " ", 
                 SuperscriptBox["r", "4"]}], "16"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "4"], " ", 
                 SuperscriptBox["r", "3"]}], "8"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "4"], " ", 
                 SuperscriptBox["r", "2"]}], "16"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", 
                 SuperscriptBox["r", "4"]}], "8"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", 
                 SuperscriptBox["r", "3"]}], "4"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", 
                 SuperscriptBox["r", "2"]}], "8"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", 
                 SuperscriptBox["r", "4"]}], "16"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", 
                 SuperscriptBox["r", "3"]}], "8"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", 
                 SuperscriptBox["r", "2"]}], "16"]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False, False, False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "6", "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.7850000000000001", "parsetiming" -> "0.903", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP11432289091ce5a1053000001db8b149c009i327", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa11442289091ce5a1053000004bi3g8ihgdc6cee58884920455003441207", "version" -> 
    "2.6", "inputstring" -> 
    "[sum_{i=1}^{r} i ] * [sum_{i=1}^{r} i ] * [sum_{j=1}^{c} j]  * \
[sum_{j=1}^{c} j]"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 2, 18, 16, 54, 58.2793219`9.518089320924586}, "Line" -> 
    9, "SessionID" -> 33418422269014030074}, Typeset`showpods$$ = {1, 2, 3, 4,
    5, 6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = 
   "[sum_{i=1}^{r} i ] * [sum_{i=1}^{r} i ] * [sum_{j=1}^{c} j]  * \
[sum_{j=1}^{c} j]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{729., {531.3544921875, 536.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.885746098306322*^9},
 Background->GrayLevel[
  0],ExpressionUUID->"46a38212-99bb-413b-8dba-5fa212a94f95"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
sum_{i=1}^{r} sum_{j=1}^{c} [ ij * (r + 1 - i) * (c + 1 - j) ]\
\>", "WolframAlphaLong",
 CellChangeTimes->{
  3.885745542513734*^9, {3.885745653452345*^9, 3.885745671747319*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b824ad0e-7017-4b02-ac21-222f4e3b0f74"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "sum_{i=1}^{r} sum_{j=1}^{c} [ ij * (r + 1 - i) * (c + 1 - j) ]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Sum", "scanner" -> "Sum", "id" -> "Result", "position" -> 
     "100", "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Sum[Sum[i j ((r + 1 - i) (c + 1 - j)), {j, 1, c}], {i, 1, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"i", "=", "1"}], "r"], 
                RowBox[{"(", 
                  FormBox[
                   TagBox[
                    StyleBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "c"], 
                    RowBox[{"i", " ", "j", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"r", "+", "1", "-", "i"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"c", "+", "1", "-", "j"}], ")"}]}], ")"}]}]}], 
                    ScriptLevel -> 0, StripOnInput -> False], HoldForm], 
                   TraditionalForm], ")"}]}], "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox["1", "36"], " ", "c", " ", 
                 RowBox[{"(", 
                   RowBox[{"c", "+", "1"}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{"c", "+", "2"}], ")"}], " ", "r", " ", 
                 RowBox[{"(", 
                   RowBox[{"r", "+", "1"}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{"r", "+", "2"}], ")"}]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot3D[(c (1 + c) (2 + c) r (1 + r) (2 + r))/36, {c, -2.4419, \
0.441903}, {r, -2.4419, 0.441903}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            Graphics3DBox[{
              GraphicsComplex3DBox[CompressedData["
1:eJy1nAu0jtXa/ldEJUnSQUkOSYQiFtXSq3QQOumIUmvFQpTzMcmxnHcpqi2y
k7YOqi3JYe3eVTnLdi4hOS1JKkQbafff33qu3/X+zTWe0TDG9zUa4x3vz72e
dz7XM5973vOe95wVsjo3b1soLS2tfZG0tML//fyy5bUDTh5ROJfPCjlH3k9M
H52ovLV2p8t2nFSA92hbrWWzBmnm9U6fXfTbKtmJZ9Y3em5rzd+T8Dp/jB/T
tuOzyUvyr3PEvN7sLl0v3TU6+dmeCo27vPRrAf7IoZKXzGn6i/ms9ZNundBz
UPLYH//z38/m5T7Zt+VY+V4Z9c/Z8vFf2n9vvjiyT/SoltP54tXbk2H7M5+u
c0fr7hsK8Fl3b3vqt+GLUjxqf2LVvNrn1HhzcgK+LrrfZPtCNT9/pva/EmH7
P/xy4/5KjTcX4HxH11BnPn//PKvE0hrDrTN8+henn1z4+ebWGd5nd/0S5ad0
t87whya8XrTlvf2tM/yXv/30TfrDfa0z/IEaU19Ia/S4dYaXaT3j3utGZVln
/25kb53hx6LrW2d4q6g91hneLmq/dYZfviL/fq0z/NwF+fpYZ3ioM/rRP7GD
/1168p3PUa+OLdx/SFnrDH93e96TX1e6zjrDHxm87+CHn95kneFD3n0ke9ST
jawzvHvfa6Zf2SfdOsOP9Zp9xZR+1a2z2xPZW2f4yOj61hneOmqPdYaPi9pv
neH3TMq/X+sMnxfpY53h16j/ozM68b6jM7y3+id/D58hPfnOZ9s6szb+uunh
BDrDt4/Km5D9R3YCneE/dT1c9bSX2yTQGV626fKizXLvT6AzvMncp5r1v+D2
HHSG143sk+gMPxRdP4nO8K1Re5LoDG8atT+JzvBBOyL90Rk+Sv0fneH15X/Q
GT3o5+gMf1DvOzrDM9U/uS4cPfnO57wbWjZZ/0oX6wxf22fhthvmP26d4Z+W
mvHo2ZUzrTN8+N1lR+2fd6919nUie+sM3xJd3zrD50Ttsc7wldIfneFH1f/R
Gd5X/ged4fhhdOa+Q53hB+Q/0Rk+VO87OsN/VP/k9+DoyXc+y6xMbp392mPW
Gf7KrA+6T53V2jrD973ee+NTPe+2zvB5kb11hleKrm+d4aulPzrDN6v/ozP8
jBmR/0FnePHXI/+PzvBQZ+6P8R2d4fdrPLKfFcd/ojP8Qr3v6Aynf9IOOHry
nc+qOdvabZt1l3WGn/XBbaPrdr3ZOsMzInvrDH9D+qMzPKn+j87wU+V/0Ble
ql/k/9EZ3lPjLzrDZyv+QWfug3jJ47T4+RrfPQ6J/67xCJ3h+E90hvO+ozOc
/kn74OjJdz7LLu763/8zrkZneNXIPgOd4f+Orp+Bzvb3UXsy0BleK2p/BjrD
F/XOv98cdIZfHumTg87wCpGeOehMe4k/0Rnem3hJOsNHa3y33xdPV39AZ/g6
9R90hs9Xf0NnOP2TdsPRk+983qH+j87wRXpf0Bm+Ru8XOsMr6n1EZ/jlUX92
vAEfr/cdneHL5B8c16ldYfwM/03xp+M68VGKlxzXiTO+O64TZzxyXCeO/3Rc
J8777rhOnP7puE58ofR0XKfP6vL/juvEN2m8cFwnvlPji+M68dKRf07FdeLn
RP45FdeJh/Ezvx/qDG+h8RSd4Q9r/EVnOPGS4xJxxnd0hjMeoTM8V/0fnR2X
6X1HZzj9k/uEb5aefOfzY8U/6AxfoXgJneGHFV+hM7y34jF0hoc68zvMN9EZ
zvwIneEvKp5HZzjxJzrDiZfQGf6N+r/HY3HGI3SG4z/RGc77js5w+if3D0dP
vvv6iv/RGd4hip+tM/xJzS/Q2XGi5iPozPWYv6MznPkmOsPv0/wIneGDFc+j
M/w39X90hpdQvITO8LM1vqMzfLHGI3R2O+U/0Rl+jt53dIYfUf9EFzh68p3P
iydH8190hl8X6eN4A/6V5tfozN+F8TO8tObv6AxnvonOcOZH6AzvI/+DzvDT
FX+is/2fxl90hlfT+I7O8BeJP6Wz2y//ic7wXnrf0RneT/0TveANpCff+awR
6WOd4WH8zL+HOoccneHM39HZ9vI/6Aznd9E55OgMJ/5EZ9srXkJn+FKN7+gc
th+dQ47Ons/pfUdn5+HUP9ExbD/fQz7gono9z51dKJfPUP+QH/xhzlsffrDe
fxfmA0POd/4uHBdCznc+w9+Na3+Y58Q+zE9iH+rM9/B3q2XM7Tvm4sK5fMLv
2bZ0RcdjG/zvXIfv/Duc73yGOsddP2w/dnHtD6+PfagP9mH7sYtrf6g/7+PK
hv9aM+jCVD/he5gHHvZjr/6Jw2kF2tN8wLTFh7v+ViBPznu6ZE/x80ZcXDCv
fmDGmp5H2qV4h1W3L/tnRsF8+6EmHRa3eHNHgXw472NuxfWHqmcVzJ9/0jgv
9/4LUnzCkrHvv/j96gLXKfLJr0cG3Zws8Lx4H4u/cXDm6HKp9+Kx8tNeantw
VWxeF53C57Xvo5Vn1jmaZnt0CfNmXAddw36y+bay6/467DfHvXtuqnbKJ2s2
FMgXoW+YLyp27lvvtTtrU2zeg+cQ/u7Qlk3Lrq2eskf3cL7DdXhuoQ41Hs7q
OPSZHb7+qM7j31ue2FQgzuf5hXH+jfe1m9P4v/05Ll7lOYe/+4+ij20rW3+N
7XmuYTzAdYqqX4Q6TP/gm7E/n5L0e9StaLcJJTavKjAO0j/oL1yHfhD6AZ4f
z5Pr8LzjxjueJ5znFNp7nim9+V2eR9y4dpP0hqNjaM/9owe/i15hezaMKPzd
uqMn5fIJr130ppl5RU7K3TnwtgWfvpPyS8svTav1W7kjyWr/+dvWHy9Nvaf7
Gze5bmWbX5M/jrjjyIed/7/xosusEX2rbE8+0GnuyRNbp973Lv3G9Jk4eX2y
fr/sSp1qpvgO/R6/D/9k9VUXZnb/OpH1t80VWrx81P2KdnyhdvG7y7OWV95w
cGMiZ3HlaxvtTb0vtI/2Yp99R/9lrz21KXHhEx2HZKan3gvazX1wnTv3n1mk
c72vEwvb/HHt2UM32Z774f6wv+CUThVLtF6fqPnonZe0ap1r/bkf7g9Ou7/Q
fcBpH+3ld2kH7YLze/y+ddhYqvhnn65MzKjxafmyx1L+k+8/6d/hAyfV73L7
jJUJPv9sPIrrP3HjXVw/jBsH4/x8XP850fExrp+f6LgZ916c6Hga9x6d6Dgb
996d6Pgb13/ixtk/G6/DcTZuXI573+PG2bjxNM4PxI3vcf4nbtyP8z9x4/if
xQPhOB437sf5q7hxPG68jvNjcfFDnP+Miyvi/GdcnPBn8UYYJ8TFFXH+7UTj
hLg4JM7Px8UncX71RMfxOD8fF7fEjTtx8U/ceHSi8U9cnBM3rsXFS3Hj3YnG
S3syh80fcV/B+iU4/WJY2uPrnts5MHFs9eT9FzX+j/tddvN7do0e/mQSjv2G
Fw5mvF2qXbLk17trTj3nmO3HbTy4++LtI82xv2BF0cyrnu2VrP9d/7dmfPDv
AuMIHPtPG69v+GOrfslmPy3aVXvAIfNak//y7hvLeiZ7HGuZ2aDMfl/nsm5r
ine/pZ059l8s6ZSVNvjuZMlTmjQYtuJH2/eP7BNw7M9emm+feKRSt9p/LZxn
+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
+2tuOz7vh/3uEsfno7Bfecb+qqdOaOH3GvtVr+4f+uW71/u9xr531rQXik66
y+819ttVhxzmowYF+SiuM1/PBZ25Toe2ZbKfOa2D+/df89+Lo8lnNpfanGg4
yDqj3xr1T66L/aGMOvdsu/RB68znLw369Nv6flvrjH2NpyuXe6N/Kn+C/ci/
12nwcddHrTP2E4K8H/bVg3wU9kuenfbS2MUp/4n90hXbXv9+eXvrjP161Wmj
s/MW0j/MRx0I8lFcZ/aQ+0bfOTSVj+K+S8sfoud7+f3/cPL8c1utzfwwld/D
nn5IO7AfPmxYyyLXdbCefG4/Pafsqas7WU/s33yi17pb9rW3ntjvDvJ72DcK
8lEe3/JKfLy+V0pP7Ddqv4Dnm7KfI53RE/s9ByrUf/WxVgXyUScH+Siuc6n8
D3p+ub/jsENtDia7txi8peG+p6wn911V/tDrSrKfUu3GjNHVb7We2I9Qf/M6
kez7tamyuFnlNtbTeb4Blas0+bCN9cS+UKXj83vYXxHko7B/R/tW0BP7d6Uz
emI/ecKw2zauzbSe2L8pfxLmo9KCfBTXKT74tXv/VqGt/QDXYTz1/J3+onHZ
49rhjz7rV/tAMhpfHrXO2NsfMq7JPjf//b3DOmNPP/S4Jvsz8vW8xzrzuT3I
+2H/uvJUnr/LfonyKh7XZF8yur51xn6P5rMe12Q/L2p/MsxHpeX/l+58FNfZ
2zQaZz2u6Tq7I91S+f8SL/YrNvGH5KlLI25/q/u7WeO18/+y36/22N/Kvqb8
ofP/sq+p+7W/lT390/l/2acpv2d/q8/SQT4K+9p6Xva3sr9KeQDn/2Wfp/5g
fyv777WOFuajqgb5qMq6TvFIN8cPzuuo3zqPrfZWVz+33yh72aHS6d8li+q9
cNwre8Zr+w3Z/0Pvo+Ne2eMn7Tdk/yH7gol7Zb8kyPthnxHko/hcJ/9jvyH7
UfJXjntlj3+z35D90/KHYT7qzCAflanr3CC/ip7XdJ2y7u4Nm5PNvnqmcIcR
Q6wn7SJuRM+rZV/ql8j/oyf2SzReoCf26zW+oCf2M6QzemJ/rOLx+T3sawX5
KOxnaXzEjs8fNZ6iJ/b9Nf6iJ/anabxGzyzlnX4K8lHoVlPjPnpm6Xeu0TwF
PUeOWbK0fYl1ycmKK9CTdvVSfOL4SfYbFc+gJ/ZzpTN6Yj9H8RJ6Yr83yO9h
f1aQj8Ke/oYuI2RfXfEednxuVXyInlx/ueJJ9Jwdk4/K5jqKS/EDw3WdkYpj
0fmBWoumjF83NVlecS86F9PvP684GZ2xv0pxNTpj31r6ozP2bRTPozP2jNfo
jH1ukPfD/sdmx+ejsJ9yKJqPoPOpsi+ifoi+2O/7PJrvoDOfn2t+hM583hnk
ox7RdbLPjeZZ6FxE13lA8zJ0nkO+UPM4dC7V639ufG6iiObX6Ix9UvqjM/b7
NN90fCn7KvIz6Iz9XZrPojP2O5sen/fDvmSQp8K+kfweOpeW/VrNx9EZ++3q
hx7XZL9gXDTfR99s5Z2uDfJUfF6pvAF6btv5RKeaO74qUGd1mp7DdOmMnltk
P1b5DfTB/nKNg+iD/SdBHg/7xzWecr/Yf6n8D/d7quwfVn/gfmcqv7QyyDtt
1nXC/Nurys+4nlPXJW8T1gvxd2G9EO0J7fkMr78laA+8wP475iNB/RU8rK9G
f+zHRvnAVJxP/XWUx0vF7TH1UcxD92s9CO5zUbTu5jof6v5UFwFnfeRn1Z/Q
/rDOk/4W5iF5T+Evqf2Oh8Qn634dj+kzrA+Me+6OvzQ+wplX3qM4xPMaxTnj
NE/0uEB9iubj8PP0nl6oPJ79vP69qX4X/0M/aa98I/cLv0x5TscHuk7FIA8w
6r2Bv9fsXahA//nh4n/92vDnZQX67Z0D7r7uwXKLEqFu5ef/umjpspR/sJ9c
1HTDwHap+lLac22jL35Z9tDGAvbth/dtPbdpqr+5zrDPaRfua5bq5/TPrK+2
1G9xpOB7t6te3ud5mScVeI6/b+t05sH3UnV9XOe2HkX29p67tsB9xekTXv9/
q/1x7Yx7LnH6xz2vuPs90eflc3uC98jn/ATc5/mIN1T9pM/zEafez+fziFP/
4/N5xKlXcf2EOPUVPm9HnPVWn7cjzvqgz9sJ/Dn3i97UD7suk3y71su4L/g/
tV7pemzxGVoXxm/Cn2L9XTrAXe8kHVxfpvocdHCdlOpJ8L/wIap/wP/CVe9n
3eCsR6MbnPVTdINP0Dog/hce6km8QH21zy8Spx7b5xSJl9I6ps8pEqf+0+cU
iVOv6HOKxPurLsLnFIlnqC7F5xSJ71e9k88pEqc+x+cUiQ9TPYnPKRJfqLoI
n1Mk/qbW931OkfhftB7tc4rEWVf1OUXirA+iM+NJGa1jul5ZnDpk9EzVIUbr
9egJp84TPeHUK6In/HvV/6Cn1/GoE5Oe8CKqa0JPOHU4riMh/6R6EvR0XKC6
CK9bi1fVOj56wq/UejR6wokrfL6T/GWu1ot9HpR4eA4DvJLW633uk/iLqpfw
uU/i1M363Cdx6j997pM4dYw+94nfVd2dz30ir646MZ/7RD2O6pp87pM49Tk+
90l8sOpMfO6T+D9UF+Fzn8Q3aX3f5z6Jh/sKiVuv1Ho9OsOJY9EZ/oPq5NEZ
XlH1KuhsrrogdIZTT4vOcOpC0RlOHSM6w113J53h1ImhM7y86p3QGV5adTvo
7Dop1ZmgM/xm1Uv4vCzNt9gn4vO1xL2vhH0F5L+VB3DduTj18D5HS5z6bZ+j
JU4dss/REqee1udoiVP/6XO0mC8qb+lztMSpr/M5WuTtlUfyOVri1Dv5HC3x
xqrP8Tky4tSZ+Bwtceoo7G+Z36t+AJ3h7MexHxbfpv0a9sPiF2h/gf2weD3l
2+2HxV3XjR8Wpz7Zflicelr7YXHqP+2HxW9Vfth+WJy6O/thcerH7IfFqXey
Hxa/VPkQ+2Hxgeqfjj8177mWuiDiTPGD2ufiOJM8vN4jnxspzj4CnxspTj28
41LW0/ReOy4Vpw7Zcan4L9STc26kOHWePjdSvIb8kuNYceruHMeKUyfmOFa8
ufynz40UZ16MnsT7C+Wf6bfwMJ6HV5GfR2c4+1x8Pqw4+zLQGc7+AnSGv6xx
yudO8ruq60Zn+DyNg+gMb6dxE51dB6pxFp3h1DGiM/wjjePoDN+qeMB1UeJh
3Eve5QzFG+gMJw+DznD2YaGz8+qKc7zvRZx9LugMZ78GOsM3ad8BOsOpk0dn
OHXd6AyvpzgQneHU06IznLpQdIaXVx0jOnsdT3EsepL/Yz8gnPwf+wHRGXv2
G8KxZ78h+mPPfjc49s2C8+KwZ98W3OtdwTly2LP/CI79weB8Oeyba34Bx/7k
4Nw57ItpngLHvnhwHh327IPwPhDZ5wTn1GFPPT/c+gfn12FPXbrPSaA9wbl2
2FN37XMhZb8vOO8Oe+qK4dg/GJyDhz31sauC9YjSwfl42C/WvBWOfXpwbh72
1EPCXYcbnFdPnuZlzaPpn/BwfgFnfyX9Dc5+QPqV911pvk//gT/HPizOF2Y9
lv0p6g/wLdr/wnOH91a+gucLn6D8Bs8R/qnyITwv+OfKn7juWTxP+Rb0h78V
5GfIh7HPFH3gG5QXQh84+W3vixcnv+39V+Lsq0If+AjtA0If+FzltdAHTp4c
feA/KU+OPvBc5c3QB15Cddr0t3Dd4T3VQZLv+n5UlH+mnsz7cbWOSR0P/Anl
t6mrgBdTPUl9rTfDmyhPznpSmGejLpM8xgeqU6U9cOr9aA98muoKaI/zJKpX
oT3w0qoHIG8OH6d1K9rD/HS61t1oD7ym1pdpD7yv6iJoj+1VD0N7XP+legN+
1/MXzdf4Xfh4zb/4XTj1YPyuOXG+fhd+VHUL6ADP0XyH9hA3VtX6pvsJ9SRa
x3c/cTwc1Z+4n4hTt+N+wrqN6iLmsf4rfrPWQ2kP8cBirc/SHvg61SHQHjj1
bLQHvkt1QdRbwJ9S3QXrrPAdWm9FN6+naV0yjEPKBufNwtOC+AEenjcbFw/A
iwbjvuOBYHz37+b/VzcnHK+rBuM1vKTG5axg/D1AnUkwzj6gcTY7GB8zND7O
DMbBNRoHeb74c+q0XefKerXqUni+cOoMqdMyV70WdTDw6qqHYT0YHq4H4T+p
D3d9hTj1XWdSR0G9s+atrC+G6yOelwX+kPVmrhOuB4WcOCHk9M/Q/3v+q+tx
DoDnv6yzaDzyvFV8kMZBz1vFt2rcpD3oF64TkV/lHBV0QFf2rXhdSX6A80mw
570bHlwnfI68j6E+xA+hPugfth89ve6nddhvGdfUzmpah31W80Cvn2sdlnVf
OOu/rCOG+WTWEcP5OOt54f2O1Ppl2H7W+cK8K+t84bx1t9Y7C6ybaz0y7LcX
aT0yXPeJu6+49sTdb1w7WU8N42TWU8PnfpfWR8Pn/qDqjVwnq3ot9i1wXwu0
78P15eJl5E+ou4XnqW6Z+gA49Z/Un8GnyL9Rx2N7jSO0k7iltsYL+i3vF/uk
aD+cfSi033WRGu9cr8x6kMZH2g+nHpX2w6kDpP3wnzRe036/R6pbo/34gTJ6
j2g/vIv2xdB+16UrfqD9cOq6aT98puIT2g+nLpH2w+9U/EP7iZcWKp9s/TUO
1FUe2PpTPy576y/OPgjrL06dufUXb6B4z/qLUydJ3Rhc5z65/+CvclXXR/ud
N5N/834k8dV6Xt4fIv614lja77ps6sDVfvhoxcnUa8IvV1xN++HrFYfzfuL/
2WfnOkhx6g+5L+bj7L/jvYKPUx0g9wvfsf34Okyfz6E6THRw/b72m9Bv4NNV
h4k+cOr8eU5w6tLRDU4dNbrAqQemP8Cpa6U/w6kPpF7N9xXUVeJXZwb1fvAc
6cb77Hp51UnynsDZp0D/g1+vOJ/6Wvi3irepB3UdrupCeV7483bU2Upn+Hfa
B0GdrufpmueeTL5M/D7pwPOF3635LM8F/rzmxXHj5omOUyc6zsaNa3HxQFz8
4H1o+t3H1t3fttMrT7t/enyUf3O/4X7vWl5x7MQebh/9pWnnfZuefOo+jxPw
dROr73ilS2r/I3z3gSHba2c3t/+Ca13J/gK+YtuQnx9a1cL93v208P2XzslK
93OCNw7aSf9t0rlHl3dmd0uduyK+rX96+q4u7d1Oj1+jelQt811qPzX8Bvlz
n5ci/ur4z9NLz+zkdsInq/0+50R875Cz15xxemq/A+/TV+y35dwS8UnKD/h8
EvaPBudBef00/7+rr/Z5I8fbu53B+m/qPDfxFcobuA5J7/ewEQ/NWdikU6pf
ifcbNvv9VfPb2E96vj+octlyZR9N9Tf2g2i883lK4n2kv/uh+Ar1n9lBPoF9
Ja7jFX/7vX3PdvhsoOMwr3dMHn51g0ld3H74zfMzt9zwRqr98GzdF+2Hn6px
2eth4hvVr2g/fLrei9lB/iHcdwDvpPeU99B58rzjz8FwPj84BwM+LjgHw/tQ
g3Mw4G8H52A43x6cgwG/LDgHAx6eg+G69eAcDPh7wTkY8PODczDgbZTnR094
XnDeBfzU4LwL/q52v5/q/CO9u987eKnXon6CDvDx9H/dL/wCxWPcl+tD5X9o
P/xy+U/a6fWCO85bMO6sgvmKd2LyFTWVrygZ5CseD85/gFfSvLV4MD62C+rt
6Xf7gnMdaVc/tZP+5vpG3Rf9Ct5UOnifpPiGJcfvm/A5kdKZ/gA/qveXdsLn
qP+jI7yunq/3Xaq9nA/DffH8GR+xg6/X+8t9wRlHuC/4ayWO398Ex09yX/Bb
5H+cpxOvqPeU+/K+lteO18H5bb2/3Bf95a/yh9wXPE9+lb/3eS3yw9wX/PeK
x+8rdJ2S/Dz3Bcd/ep1VvIX8CfcFf0nP3eus1DXJz/h5qb9XUtzi5yVeSHGF
n5c447ifF/UtGjf9vI63dz90vY38v5+X+Ez5PT8v8XLyD36/9Dtt5Q+5L97X
XYoTuC/4csUV3JfPL1Ecwn3B/1Px+P348L56vs67Me9Tf6ad3i8p/8x9wR/V
ex3O49iHaH8tXkb+HHv8UBhnwsP9dPajigPj5nHoAyceC+dxfw/205kH++ng
W4P9dHDik7h5HPfv+aP8idfLxbOCcQ1eLRgvfI7R//H8buefzO/axMzvvO+S
6wTnKnMfN+m587vwlYo/uT4c/8z14SdrfI/LqzuO1b8/qvHL8ar4y/KTjkvJ
q+t9RDeuTzyPPnDiT+4fzvj+/wDt6pwQ
               "], {{{
                  EdgeForm[], 
                  Directive[
                   Specularity[
                    GrayLevel[1], 3], 
                   RGBColor[0.880722, 0.611041, 0.142051], Lighting -> 
                   "Neutral"], 
                  GraphicsGroup3DBox[
                   TagBox[{
                    Polygon3DBox[CompressedData["
1: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
S+c0HavB3x7NHFfVGI/Ai5WvGS/CL+geS9c2q+DfGT9GjuuVrD/Soavhw+HD
OX5Vsq+Qv+gNN4AP5fgVyR5DXmNtYU+sPK58XlNrxzq2T/a3ej5DIqdLD+5K
1hzpuvLwMYor6Wc8H2l2n/jtWotOoZPSeD3f6rpOXF/xU5/v7R/rKF/RIf9/
qGeDOecCju8MH1R4PepzrLXyH3wQ3AYekHwP8ifySqoHV8lXRwxIq26K5yMN
viHZY2tNe8nrZM5lt0dsyBfdETEj3RqWrKXyL/+JZ6s8eHM8Q2nwrfGcpbv9
4jkrh94S6y5PdROjnZ5Faa1THjyYz4OT9XZ4rFGdWBd5Pd3nw8p9yesiD6AY
rhfxrLXeJ+JcMVY31lqxp/iU39AzrPpX3CbnSuUoxW31iPl/RQzL53SPZy7/
c3lyvaO4uiR5jyieVT+rPq3F/DKf+8NbMA+M/SJPvS///wXlEeYDCu/x66UD
/G09fJ7us7C2HFjYU6i+WMI1P+Cc4XAj5l9y14+H6HdErlfO78v/aSFt4nk2
Ye4nX6nnV7i2PTb5d9WLmOwez+ovTasbWqc6WrW/eg5f5+4/qHehmlp9DPVJ
vszdB1B/oFHcWwPFXXLNq1r4HcVH5vpXNay8/Q8V1+Dqe6hPomd1beYafF3u
mrdKbo+rWuPHimtq5abv4G9y92rUM1FPRv2QHXL73GHwzsw/FL6WfO/LyfW4
eierk+to9S2mwudm9njqAUnDW1Xcz1EPZLvcfRvV/lvl9uXqdeyUuzei9d0y
dw9HfZttcvcZ1AtSX0g9AfU9flFc5O4zqB+i79Y9qK6Xl1SOaJk7T4iv1L1w
fAHcOLeXVM/kxNzrp3VsldtXqn/SLrf/VQ+hTW79Gw/Xzd0bGZe5f/UzY0Lm
nsM2nP8kfAy8FfyE4lO5Bn4KbpI75yyGm8GN5c3hFvCbuXsg6m+oX6Q+lfoh
6pOo56O+lp61nrn6GGty9zTUu3gz+bnp+b2eu3+iHteruXti6pXtErnguNw9
MfXQ1GMZqDqBv3Untr/L3WdTz+2H3L049eWUN9QLOkTfC/8Xfkixn7wWWpOF
yV5Lfvwp+LLMtcCiZN8i/7IAvjRzHbEcviJzXTM22fvJN42DT81cQ41K1lh5
+cXwv7OoKULH5KEmwKdnrrPGwCdnriU/LtzHUU36ZLJvVA29JDnmFfuqWRWr
6yqu4ZQTD83tN6SN8h6qd6+Cf+Kcrwr3DlT/PpbsA1W7z072kKqzH072fvKb
S+HLM9dx86URmeumWcleUd5wbnJvQT2G8cn1i7zkg8k1rPzpzGSvKD/7SbKG
SEu+St4X2h/r4IHScK7/RbIOSA8+S9YWaczbyXtKe2tt8h7UXuxdWCukGe8n
7/fZ8o/JsacYfCE5ZhQ7LybHp+L0HeUV+BHOX5+8x7XXN8BD4FmF+wT6jZ/K
A3P87Mw147Tk3KQcNSO5pyGPPxE+M3O9/HTy81dtOym5lpQHXxUaWJV5Y7Je
SbeWJeuhdPFd+C5dk/+7KXnPau9+Fnt2b+b2pfun8o0jkmsN1aw1wwt1Zv61
8N44sfD6KrabRN3aks+r5YEL78nWzD8X1vd28sKxL7R2vxTW2RPknwtrfdvC
nkdxe7S8WOwXxc+3hffz8cyrYu1ei7XQWreMNdJ+bBFxpT3SFH4+1ldr92Ph
/HGd7qtwD+s4xUnhPlEz3UvhXlvzwuurNdX3Do29+Zcf095syPHNhfNQG3mh
iFv5tHtijfQMq4f3Pk8eMrkWOAPesrAG/oP53cJ9SfVttgrfLo8qH66644Lw
S1oX+SvVFKpxOoTnkT+UL/qusIa2kp8vXRfJu17BmMM5pzAPjz0lfzUiYqxR
Yd8lDTkGLgvXEefIPxfW7XOZK4Xrl7OY/wydPxNOhXPK2YU9W4vM3uzn5Dri
NN1vch9bOvlNYV3W2m0qnMO0dqrX1mTut6yOuFUsvRU+Vb5lTex96fxnhXuI
isPtSue2TvB7hfuniqWyzP5vrHXPr8QeeSv0+YbQ6iqcU0m+/9fDb2hNF8Te
Xxr6Jh1TnDye7B+ke3Nir0n3Hg1dlaY9EXlBmjYPviZzvL2anOvXhjb2Cx1e
Hv5hZeh838gX8uqq7+SNE/f5R+74eb9w37Zh+BDpjNa9RtTL7RVL0fs6H34p
dEl69UfhnH0y83ORN6V7vxXOeScxf1S479+Y+cPCvWbFydala2/FZAH/mTsG
toDL5HjetrQP6Kg4KewpFXufF+7Pam/mnPM7fDqcwb/CpyrG4N9yx0xVOE+O
w21K+wnFfHW4SN5T1eCUHJ8fFO5fK4a3YyzL/Nt/DR+i7/ohuW+g7xoXeUo5
9+3C7zBUM46JXKPcejufD0Ozr2W+N7nXoVp7Q+H3BKqFty/tb6STJ8TvUk+g
XfwW9QTaxm9U32B94XcJqotPjDVVz2F05ALl+m0K+yKt45fJPYpvI9+ptyAd
/jq5/lXuU75Tv0K6OjFysfKmeg7qgWgt1B9QjaA9Mj38gHLNO4XfnaiGnRn+
5NjCeapr5Jp1hd/TqJ49KdZdvZRTYu+oT9Kx9Ds29VvOiHhQTX16rJfq9E6l
axLV16fF2qlPUrtwjSOP1qH0+zn1W7qWrj9V+6vGWZe559kt6hD1ebrAnXLX
rRPCV8g/tCj9PlX5Vz2c1zP3V88v/Z5P/ZBTI8bU/zk5tEJ9oU8Kv+PUurcs
/b5WObRZ6fem8n7NS7/fld9oVfrdmzzDcaXf18oP3Kbviz7fHXD3ivvtysXq
OWiv9WccVXGtI08lT6gctKbwOzP1Oj5N7k3J81zM9Zsm13qXF+7jzQpfpH6U
8qk8j/pdyr+fJ/e7NoUfGBc+YWT4EO1xeZUx4Vs+LfwORjHwXXL/R1ohn3N/
eKdvkv3w5vBdo8NH/Q9SPPzD
                    "]], 
                    Polygon3DBox[CompressedData["
1:eJwtmnngVlMax9977nktaRPZyr4WKnulkmyF7Dst9l3DMAyGGJM1KXtIFFlL
WqU9aU+JSMg2I5X2pjDDfD/zff643fu5z/m973vvPef7fJ/ntvsl3c64IVUq
lYb6J2s/Sf+8q/0h4rOrlcoA8XniL4tK5VDxQ2Wl0l7cW/FG4usU/118gOJd
dO5JcRPxu+K9FJ+q8feJZyl2pPh18ZXiIeJDxI01fol4N52/WPyUuJl4uP5+
b/EB4nrih8WXiseLB4ub6O9PFz8nbimeoPj+4sniYeJDFT9HPFj7LxRbXPj7
vtD39FX8G51vK35NfIX4bfHB4lHiv4jHiw8T9xAfK+4p3lc8W/uN+qxN2lqJ
u+n7Sh031Xa5Yh9q/D80fk5yfJDiN4hXK95c3Ej8tXgXjesq/kT7J7i/Gt9G
/Gb29/+i8a3FE8RDxE0VP0M8LHv89uLjxa+KrxOv1PgjuB7xn8RrxS243+Kb
xOvFLcUP6PuOF/fS3+8nfkPxm8X/Lvx8pohHiA9T/FzxRPE74mbiM8WPixuK
+2v8HuKv9Xn9xD8o3k48V/Hp4hPEV4j7aD9OY8drayx+WvGDFR8p3offr7+/
TPymxh0kfljcQfx48vhH4/n31PiGzCfxe+IWip8vfkTjTxQ/kfz8Zyk+U9xB
3EX8jPhQ8ejCz+9Z8eHiMYWv/0Px++IjNf4C8Uzxh+LjxJ3FT2p/kcZeqG2S
ttmKz1W8Y/LzG6jvv0T8uriZ+CPFZ4tPEl8pni6eID6KzxH3Fu8gfkaftav4
PfHr4kaKnyweK36L9SQ+VfyBeJT4CPF54peZN+JB4qbivoo3F48tvB5Zgydo
zB86d71iX+r4eR1/p/NH8zx0bifxcxq/G89f8avE7ySv73GKvy0+UHya+H3x
m+L9xaeI79P4dqzH5Oc3TdxDPDd5vo7W+NfE+4lPYj2JB4n3FZ8oHil+VbyP
uIO4l3hb9ES/Z2fxGPEb4saKdxT31+d3Fr8ibiJ+TPHteN4avwvfLx4nbq34
heI5Gn+X+FPxWrRC20PimrHe/6T9G8w9nbtaYy8qrXuddf5zHXQWbyG+RLxI
fFuylqFpNyl2k/gt5o74WvGt4qHiA8TdxIvRH/RAfKP4W/FE1pb4LrQhWavQ
rL+JnxbPF58ifkx8e7L2oYF/Fi9hfrK2xbeLb9a2h47v0Lgv0RLWg+KH6dxt
pb9zNx3/Nfm3PB3rvZ/4X9ljuPa7k/+Wzxihvz+o4s/unrw2WCN/RQu17cVv
1fmvNPbe5LnGnLtDse917mPxqTxD8bOKLxCfJu4j3lXxyTpupeNtyR+Kf6B4
W527V+fqKz5ax7V0XEfx7cVjxHXEdcWttb9b4+8i/+j4Af39ZB230Zju4kfQ
3MJzkrn5Is9NfA5rTPyoeHphDUfL12kbqONfdf4Pfddj2s8sfI/Qxj11boaO
G+h4O33/3uJZ4p3F25NvNP5TjT+DOahzDRQfr+NtdFxP8R/Enyh+OhqmczuK
x+p4ax1vrfh34nmKd9S5R3XuBX3eZ+KzxE+J91V8jo7b6ngHjT+KOaP4fTxj
Hf9T8YU6PlNjnmSuJ2sbGnereIiOB2u7WedviWc2itxX8bO8M1l70eBbSv8G
7uVTyb+NZ8izeSb52b6q/TeF1yBrcSDzRnyR+AVxc20HiWuxRnT8Gp9TWKPQ
qsdDL/om35sV2tYpfiMeQbHRybmKnDVUPAeNLZw3yAFv8HeFNRatfYt5XDhn
kDveFa8QXyN+q/Q94Vk/n3yvhmq/vLDGoXU/6dzP4mvJOaXXJGu3R/JaHZ6c
S8mpbyu2XOfWiLuhkeJl4lXi68WDxSOTczs5foh4THKuJecOE3+crD1o0Ezx
dB0nbd3Fk9BeHdfScVV/04FcqM9fJD47ef7V0LmpaAFzXMcTkr0BHgGv8mno
b0vtN/LbtP2q+K3kPJ2brPH/Ed9OzhP/q7QeryBPVK0Jnyt+dsVasVq8lWIP
imeIX072fnjAvuKfFd8g/rN4uHhssnfAQ4woPSeYGwN0/kB9/mfiZ8Rfi4+q
WsPQznuSte0j7bdMvoZpoac763hzfeZJ4g/FlWRNnyB+LvJ9C+2X6u8/UOx3
jb1T58bp3B06dz/rOdbPTMWztnsVn6JzaxSvJX5YPEs8H39U2PPgfeppG6nj
rRSrXfX94vf/rL/ZRKKo2hsxfiO5o2ovgif5r7gUN0/WtN9KawxeFE+K9qzS
1l/HG3gueOdsr43nXsv9DT+1Tud+U2xtshfAE6xQ7EhtR+j3bo9mo82K7ant
J23LmFtVewU8wy+Kr9dnbCPuLZ5fes7zfIYlr4UvtN9WWx+d+1ixf2d7Szwm
3vQnfc/Swj4az06x8FrhnHCl4oW+7/Dke7ZB/Eu2l8HT/FT6npH7mXPcy1+z
vQSeYrn4cx3X0/aYeF7pc/iVNclj+Qz8+qrkz75I2xTxMaybqq+JZ7so+VpZ
U6ytacn+lznD3Jma7L+nxPgZyX74Hf3No+K6yf51aPZv4TcdU/WaYe1MEh8u
HqL4I+LayX6Ke4Tf/yr53jEHmYtTkv34R/F7PhOvU3xz7TdLriPmxDPGa+G5
ePYrk70THmpp6TnK5y1InrvMGWoBagLm0vrkWoiaaKX4Oh2/WtgjXM7zTPbu
ePjVpdc01zM/ea2vTvZaeK5l6Gn2XGBOHFu1h6qj454VeyuuYWtxr4qvbUuN
aZOcAzfP9jR4m/uYl4ptUbU3w6NVuX5xq+ScWGbn+PbJOZfcf23ow43J/vh6
cWP0L9mvsqZZ2z0K50py6onJOZpce4Ni+1ec+3avOg/209gXC3O30Pu/JNcv
rHk0tl1oAXOKuTVZY+qQy5OfNc98dmjCscmajFbUFLcTTxLXyvYwx4unVext
PtF2nr77wIq1rUbVtQA1wZbcD33m0eK22rZS7OLS9dWV4p3EC5PnJnN0rmJd
0VX8A/Vu6ZqT2vNMPCj+gPuWrCHUZt+jp8lrilqgqs9smeyx/sDTaDtNPE+8
S3aOI3ePSs5932rfIHkNUjuT8/ACI5Jz4RLtd0zWSLT+R+57ssZ9UzrHX6Lj
95JzPzmD3P1+ci7ZrOraixqsEC/gXOEcQG7Eo+NXuyX7/U48i8KeHe+OBqFF
1yfXD8x55v61yfXipaX98NVcR9U5ES8wMTlX4tlOTvZceDk0eADamazNeL5z
dfxFxV6wU9XPa1LcL2qEp9DjimuHnclprJ/S9R49iiaxXjfLrqkOjPWas2u8
A2L9p+waa//Qey4SDVsbfgltoyZqHPr5e2lNWx3+BK2jhmwU6/k/pWuufUNP
NpWukVrHeuV6L4j7PzbWDzU+ejFUXCO759A09GOL7Jpuv9D3X0vXcPuEvq+P
a2Z+T6z4XlDvvBP1EV7rx+x+zLniZ0vX4GOivsF/49ffi/rj/tI1++iob/Dv
+P1R4Xf/UboGHRn+Fv9PfTEi/O3fS9crbxfWkDtL18jULy0q7mXRYxoe9Q/1
CP54UOQ3/DL++vWoF6mdqI/ejPoPL0OP692o96hHqE+GRf12T+n64v2olx4s
7VdWhV8cL34l27viYckv54efGBN6iL7vFusJvccP7BLrm3yBfjeM9b088sdO
sV7JndS8+M+HY/3SMyK/Pyn+IfzVmvDfE1kbip+jfRs8VXaOqx36/2XoC/pP
jlxSOkeSK3vHeieH1o38gP6gD/hJ/O+i0npSK/R0cehTndC3r8LTNdX+/Iq9
Hv4QP3ubeHrpHsMv4W+nRX7bQ9vL4jWle374reHk9Oz6hLoEz0iviJ4mfgs/
Vju7p4JfGh16jd4WyTmb/DZPx7+Ff54RfqVM9hB4D/xTNbnHuaB0Dw0/fEvF
vU/8/rqoByaX9hzrwz/jRfCnG8I/f1C6Xvhv+FlyP/nnj8IehvxLTiY3Py7+
LvJ9r8I9lCvE1yT3SumZXUauq7qmoqeGf99GfEqyRrE+6bGNj34EvTdqdGr1
Fjp3t+Ltq/aYaCLaSD9sUtTf1I70SPGI9HSpR/D8H0V9Sy1AvTgv+hsvlq7n
Fka9+0rpevGTqKcHlO5pLYj6mfqR+vPj6Ce8VLoHND/6Df/vDVXdqyPf7p7d
g/s06mPqRXq+i6N+ofdMT7BD+AX0HE+ANyDn4h3o2W6K+opeLj3pUyM/0qs+
S3xwsl+vGfmbcxyT//E81OB4ELwQNdYOkR/xv+QgclF7jemenb/J2zUV76r9
jopfkNwjpld8nHi7ZD/+fekeMR4Sz4n3pKaqkVyvkX/pl9AnWRj3Aw/xQuEa
E29BjqTXVr/i3EnP9bOo/6in6Z/MKtzjR5/xSP0jH+Od8FODQ0/xZngyeokN
gumP9S3cY7yO9ZHtvxrE9X2T3Q9uEXpMz5Z+2JGxPvF89EZ3rNgL0q8jv9Iz
vaZ0TqcXvE3FuZ5+2Svhd+lf0TeYHb8ffade6VO4Z3hVaQ/xRORrvAX9vQGF
PQK9M+rduYX1Av2hvv82+hl4I/p1Uwr3SOiV8M5gUeQz3iXQn6Cepv80qHR/
Z0bh/hL1Nf2jaYV7FPQq6JdNLdwjoVdCPf1j4XcSI0v3I5YU9lx4L+r/ZdHP
wMtQY6yMfgS1Bz1c6nX0k34H/ZGvCtd81H70W74v7MnwZvQr/lnYk+HN6Bf8
HP2PsaVz0orol1AL4e+oJ6kRvi3tH/G/kyvu9aExrLWXkrXn/GyvS41ArXBe
tvfAg1AbXJDtFfAMeOOO2V4Dz0Gtc3K2V8IzUSudlO2N8EjUh2g+2r8R3czW
ND6vfmjdxdn9ejweXq9R+LNdY611yX5fQA1CLdI5+/0FHh4v3yn7fQCeH+9/
Yfa1cs14f3I+Wnh/shc4Mdt74cGoVy/XtrhiD4mX7Jr9foCahdrllOxcRE7C
b56bXStRI1ErnZ3tjfHseHd6PM1K5296P22zcws5Bn9NH2DPyIfkB/oF9AkG
VpzvD832TngoeoMHZ3sVPAv94sOyvRcejP7wBm31I9+Q3/Ak1Gq1S3uVQ7K9
Fp6LXvLR2bmMnIa/PyfbW+Ix8fqnZudmcjS9kbOyvQ6eh17KGdm5mJxML+P0
7F4GPQZ6DRfzWwr36PHbeDbW4oPJXu607F4EPRp6NUeIW1Xcg6e/txn3I1nD
0W1yPrmjZmkvQM3RP/IBeokHQvupkfBG5NeBoRfUFvsp/kDhnhO9pxezcxU5
jFzWLzv3kbPIXf2zcx05qlnUMz0jX1+oz7s0Wf/Quy6lr/eJ0K9OpWsOfs92
pWsRchi1ScPIbWg+2r9T5MaXs7UIjUKrXsrOvWg+2t+T3FO4h4tX4h1Ir9BX
6qt+2uqKu2h7QbEfxTugB9qGZ9cQ1E71StcWC/EQ+HU8k2Ltsr0bHm5VzE/m
EzmN3IbGoXXjxCuzcxxeY1nEf4i5uzzZu34X631psheiBp9acQ3P+8pjsr0m
npP+Rofs2ocaiF4UHrU/uTjZux6X7T3xoPQ62mevLTwy/RzmPN5ucfJaOCFb
+9BA+k17aOte+B0Fuff4bG+MR6ZXcmy218Xz0r/BQ+EdNiV7K2ouvEjd0rUY
OZHc+vfkXHlmdm+RniK9Ra6Ruc0c59qbZM8Nctxl1JbZXpBnyLNEE5nv1HNo
JX7jucjPvLtumj3XyLHUss1jvuLZeB/AO86O4RfRzhYxv/FkvB/oGt7liuRc
zzv6jjp3TOF397wD5V0oc4R+DT0Oeh1o9FbiNtm1EDUR/YTW2bmHHER/kjnJ
2mUN9wx/gzaj0dx79A09rK8xD2a/c+bdMxrFuxz6lksjn5Kf+c4aoQP8lqOy
ax9qIPodzbLvDR7m8qr7dPTrmAP4+Vaxnsjx9M7xSHiN/sm1LXN4Y/h/5jbv
Y3uHP+f/SvCM+oT/4v1sy9ADPDDvRw7PrhWpGemP47fx05209eB6Y/3ioXm/
wW/sG37pBvH/ADBIOPk=
                    "]], 
                    Polygon3DBox[CompressedData["
1:eJwt1nn011Mex/Hv9/f7ftvIWh1aVLKTvRk1aVGmXxEpe5K0mhl1RgcncZJU
nOzTtGnRJElSTUPSgrQQsp04aVKWUXYOKaPF4+3eP17fe9/P9/vez+d77/u+
P7fp9UO6D64oFAoTqUzzS4XCR8ARdEOxULiHXUVb2DVojJiNlYXC09hmdjWq
Tm0Mbo1N119vXCdxk8T1xTbqN8Y6suuKm4rNFLcZ+5C2s1+juvzt8PbUS9wT
2Cv6e8UMN8dy/n9h87HtWH9sDtYKm4KtxTpg47E/YVOxV7HzsQnYYKyCfSr1
4+vvGY9hc/U/xfqImyXuWWwX1oyOoSpx/8H+WkxrEmvTCVukPU38wTEf3STm
V/b/aan+Pv5KcbP0F+p/KWagZ8zlfwgbgs3FjsUGYeOxu7GV2AraVkr7MSjG
US2+tuZrhy3V/wzra+xiYzti72H7sDuwN7DzsJewr+K9saXYbVgrbU18LPZ+
7JE5x4k5lN1RO0rMLG1jdg1tVYwX3wF/R7sn78d6Y4dhLbWnUm18LLs9LRP3
ed6jZ/laYpOw1Vh77BFsWjwH24L1xKbHPNh12Mn61bFe2rmRH7GWNBJbhR2P
jTFuNLVlD/QfnsJeF1OmUeJW4/OwDTl3R2NrsQexG9lzjG2GDcA6Y99gR9Jk
bAf2JLaOXaQR2EvYhdiP7MY0A/s2r2kLc9Wl09m7Ir9pnpj/5T2ajc/A5mAf
Y72xmdj92MCYC5se54H9Vin9pxa0Wdxxca5otritYnphM/geiJzEZmNNsX7Y
bOxl7FdsGLYMuwD7AWtE07CvsX5YA21VnFfsGHYH/Vf0Gxrbklrzv4k31l7E
dzH1sc6PYyv0d4j5glpgzbC79EdSG/EDsBux/eZrXkx72g/rgn2n34Ae5ftS
7NsVKbcjxwfQ0FJ6xkpsN3sXfcvuT43Ed8HfyOsSZ3U3+0w6I2pFKdWcI+NM
RE0Q16SUas5jMc5cb9Ip3mUOtgbbn8/MSmPOxRZjH+V1np/ztHfY9BY1N7ZN
PFvctryXC8T9Qrvpeb69fBXidrF/pueiNlSkIlvWL8X/o0q+GlhN/RpxXqmM
1SqnejDKmGc8Y0HkKnYadj32T3ZN0/UWu5f20Aux3nwlcWv1D4m8zvt7BLs6
VaMX4/lRA8T15Z9ormIx1caokZVRJ2OPo41zKO6Pcd7ELor/b74R+BrsIG2n
qLNYvTgHNIL9lLjjsWH8RaxAy6nIrma+hfqfiTsq5+QW/A/YSPbTxp6IDcf2
0z5aFnNoy8Yu0P9EXMOcQ5vx67BDta2xFVh99sP0d/a8/C5/4b8sz3NROb1T
vNt6qo/1qEjfqsiXevyXxTegmPI68rtb3sPOfD+J31mZvlv1KtPZiDNyON+G
UjoD59Odxh7NvoT28HcppxyJXFmHHRbnM+dzvPOrVAfrim2Isxg1jRpil2Ob
8lmtY54OWCPzvxPfV+zKnE+XlNM+x37H+W2C9TT26qhvfLfH+xl3O2019iT2
pTl3upbTese6nxI1Qcx5xd+XrNDTz1U5d7qXU75G3l6e9/XicsqbyJ+oawPM
N9XYaVSf74qcT93KKf/jHCyiz8U1yfV0K/9q7MBYv3x+67CHU7uov3ldTmB3
pZ3spjQT+57/TGwY+/FcE4fGPNjGOHu5jm/AemEHRM5hS/Iz3qWbjVtTSPUj
7irXxH+Mtdc/JHKslO4+/zWuHtWlnaWUC5ETS/I+F/Od4Wv94+gJc27n/zP2
QdSG/C17G3sEG8qen/P+b1hbbAn2Sb6XLIpzhm2K852/b+9i/8BuYS8UdzI2
GDsHm4Ctim8j9hDWBztc2wZ/MefVIO/YrSLlzwli78O659p1QTndY+I+0zNq
U5wd7CD9g6lHKd1vLiyn2hM16PRSuldV6Veabwj7Wqod74QvzTUi7gxnFdO9
Ke5PO9jP0DYx9fP3dxP+b2wH++i8vx/HHSNyg17O73Sg50/Wf1DMa/muN7Yy
vWO866q8f7XF9Y53128ldlmuiY/S+MgpYztj4/jPxu7Ansx3s1uxSZHT2Lp8
xxyNNYjvWexpvjv1jboi7hdxx0YOYj9iU6IWsV/P9+J7satzne9hjlqRi7SY
vspjZ4n7lH8iNo69Jt+bRmETsHvjW533dyR2VpyRyLN8p7kZ+w3hZGbU
                    "]], 
                    
                    Polygon3DBox[{{1069, 606, 398, 253, 254, 1132}, {1103, 
                    762, 817, 279, 368, 1140}, {1173, 647, 449, 347, 346, 
                    1137}, {1228, 798, 601, 295, 392, 1064}}]}, 
                    Annotation[#, "Charting`Private`Tag$5154197#1"]& ]]}, {
                  EdgeForm[], 
                  Opacity[0.25], 
                  GraphicsGroup3DBox[{
                    Polygon3DBox[CompressedData["
1:eJwtkb1OQkEQRmcBTcQEChuVhIQIVFqAlPIAKjHhoiY2FLfxJwra8ARaqD09
JL6Jb6CldogFJJhoAqVnMlN898zOzH53d7YQd6NOQkS2URId8+kFkV34CD/J
leERWiYWeIdeCDdgTN8pvE+J/JD7RmN0Ta4Pb+AatRx8gvtwifxBsP4/9Ib2
WH/AEpzBX5RFRfxHsMLey5R5X8Atz2u97Oeswx61PHz2/hL1mB/OxXzV81x7
3FNzX2JeV6xf3f+WfSv4PBCnYZ38Kiz6OfW8bdQgrsEW/ZuwCrs+H52T3k/v
OUVNaifkdmDVPdW75j6ZYPfKEA+CzU5n2Ak2Dz3rBC3cU+e2Tv87jBKWW/gb
ROTP2DcMNmud+aH+x99R33PqPmP3nvssJr7WmfwDfzVCaA==
                    "], VertexColors -> None], 
                    Polygon3DBox[CompressedData["
1:eJwtj60OwkAQhLflQNZgCIKEUB6AehI8TUgqoNgaKKJ1OAwvAAoPCW+EBMeP
gIfg2+yJyc7s7c7s9Ys6q0IRaQMHjoFIi5pSZw2RC3UJFiBGjxjqifVV79EV
/ETvhc7BGP1A56F5TNFN733Qd3gC3znbuaLrwLwKBjv03vRKZxmaPQeFz39q
Flg5y7jD48CyE9CFT8AQfqZ+xXYG6Iz5n5i/5mzxuHmu2Wtnbx+wcZYZ+V29
RW+O8EzF/vIHdaoifQ==
                    "], VertexColors -> None], 
                    
                    Polygon3DBox[{{1163, 852, 819, 212, 1142}, {1378, 805, 
                    320, 286, 1142}, {1162, 851, 818, 196, 1043}, {1156, 849, 
                    813, 14, 866}, {1157, 850, 418, 30, 880}, {1128, 196, 818,
                     805, 1129}}, VertexColors -> None]}]}, {
                  EdgeForm[], 
                  Opacity[0.25], 
                  GraphicsGroup3DBox[{
                    Polygon3DBox[CompressedData["
1:eJwtkb8vg1EUhu/t14mlSMy+Dn516YQwmYlqU4PGwCcMJFhERUwW8Q/4t0RC
jbRLK9Hkk5Bg8Zycd3j7vPft/e4599w0O22cFEIIVZSgeX7+4AZ8KIbwi9/G
n+FL+DY8iiHc45eiy/wkzOEXekMd9rXJMvjJeoh6aJ+sBQ9gA43im7CMXvAr
8JhvHvEVeKi6LXp4wl/x/wXchCPk9eh7uvgF9qTommwdTsEO+TI815nWzy7r
NfyeavXx04nL/EziZ9mZZbiIKuxdTfyOP2hg9chu4Xh0mZ+Ifje741j0GlYr
g8/UqkafYU8z6ao/6zOFs9R4VQ83monNJlW+U/B+7M3uyOfkrc865pJsC1/T
fGxOVsfeIGrWNvNi9Hvkeq8P+b7eMFf2rT6jsoH2WPau/ofaZ+t/EQJKTQ==

                    "], VertexColors -> None], 
                    Polygon3DBox[CompressedData["
1:eJwtkL1Kw2AUhk+Sb9KlU3E0HdQ2i1McvAAHFxOEYnBKoUuh7VISFQW30hsQ
wavqYsZSFyt4A9Whz+n5hpfvOee85yeJy0k+DkXkCDl0F4lseXuBSArXJM/h
KzSFT8idohWeivgGzqgdEL/7Hu390xlwiacmrtDMWb2DQr9rQf4fTngvIpv/
CD+gDFNB/EV9jYb035L7hI+p9/0srf2gLpzg+YW/0QhuyM3hFP+Ls5ufAtuh
u3TGJdyIzd7fj1p+3wdcwAM8r86+8ZA4D+zb7+npws8o9vfr3Uu/X/+V3rJB
Z5Hd0Mb7JnabziyJr8V27QAHByqX
                    "], VertexColors -> None], 
                    
                    Polygon3DBox[{{1144, 16, 810, 846, 1238}, {1143, 224, 801,
                     844, 1237}, {857, 2, 823, 833, 1232}, {1122, 210, 593, 
                    853, 1239}}, VertexColors -> None]}]}, {}, {}}, {{
                  GrayLevel[0], 
                  
                  Line3DBox[{246, 1, 242, 227, 858, 16, 1136, 327, 304, 1238, 
                   846, 251, 298, 250, 1232, 833, 299, 252, 394, 2, 809, 234, 
                   246}, VertexColors -> None], 
                  Line3DBox[CompressedData["
1:eJwt0s1LVGEYhvHjZE1B4gRFLowhXBg4Y0QOEYSSpWnhJvFrphAkSgv6mhEU
wjFNR8HahLgpoU2rlrkQl23cajmggi39D2yV+XuhxcV1P8+5mfOeM+fi0Iv7
zyuiKPqCBeEYt/ItdBmmK6PottyGdty1m7TrkE8iqf/arpFf2WftcniAWfND
HkQCy3o5vW/8lNd4nPN6j11/gmHMmUf4GWqwr/dV74D/YCXc035Dr9WclwsY
xWY4r11S3tLrjkVRmZvsJuyKmAzPY37LU6hDj962Xi/vcB/vckbvnesz4XnC
OzCXwhlRjwG9Pb0s5/BbfmPfjF7dBee5JN/EhfBe7Yp21+Va/NA/Y07gu1zg
l/bncQ3z5nOcwVmUw/311nmMV3kkvA+9R65X4ypK5iq+gtN4r3dDr8hp7rf7
pXPPHJdbcAI/7TrtjstVep/5U/gNOWXfLV8O3wk6wv/OMVRgCaf0FsO3wR85
zg16XXIa/8x3zCn5UP6LD3Ll/+/vCMscQnM=
                   "], VertexColors -> None], 
                  
                  Line3DBox[{400, 5, 329, 330, 331, 847, 332, 334, 256, 6, 
                   400}, VertexColors -> None], 
                  
                  Line3DBox[{409, 10, 335, 336, 337, 848, 338, 340, 260, 11, 
                   409}, VertexColors -> None], 
                  
                  Line3DBox[{417, 14, 813, 341, 849, 1156, 342, 343, 345, 850,
                    1157, 265, 880, 30, 1127, 229, 247, 15, 243, 235, 417}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{267, 61, 911, 76, 350, 308, 270, 1149, 306, 266, 
                   267}, VertexColors -> None], 
                  
                  Line3DBox[{924, 75, 352, 353, 354, 1153, 355, 357, 273, 90, 
                   924}, VertexColors -> None], 
                  
                  Line3DBox[{275, 136, 984, 151, 362, 312, 278, 1150, 310, 
                   274, 275}, VertexColors -> None], 
                  
                  Line3DBox[{997, 150, 364, 365, 366, 1154, 367, 369, 281, 
                   165, 997}, VertexColors -> None], 
                  
                  Line3DBox[{1043, 196, 1130, 231, 248, 211, 244, 236, 594, 
                   212, 819, 374, 852, 1163, 286, 320, 282, 851, 1162, 283, 
                   1043}, VertexColors -> None], 
                  
                  Line3DBox[{289, 215, 596, 216, 387, 290, 315, 855, 288, 314,
                    289}, VertexColors -> None], 
                  
                  Line3DBox[{293, 220, 600, 221, 393, 294, 317, 856, 292, 316,
                    293}, VertexColors -> None], 
                  
                  Line3DBox[{604, 224, 808, 233, 249, 225, 245, 237, 1067, 
                   210, 1141, 375, 376, 1239, 853, 377, 378, 379, 1237, 844, 
                   381, 297, 604}, VertexColors -> None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{31, 419, 32, 420, 33, 421, 34, 422, 35, 423, 36, 
                   424, 37, 425, 38, 426, 39, 427, 40, 428, 41, 429, 42, 430, 
                   431}, VertexColors -> None], 
                  
                  Line3DBox[{882, 632, 881, 1243, 1074, 883, 634, 884, 1244, 
                   1075, 885, 636, 886, 1245, 1076, 887, 638, 888, 1246, 1077,
                    889, 640, 890, 1247, 1078, 891, 642, 892, 1248, 1172, 
                   1315, 893, 645, 894, 1249, 1079, 895}, VertexColors -> 
                   None], 
                  Line3DBox[{45, 433, 44, 432, 43}, VertexColors -> None], 
                  
                  Line3DBox[{909, 824, 908, 1323, 1179, 907, 1322, 658, 906, 
                   1321, 1178, 905, 656, 904, 1320, 1177, 903, 654, 902, 1319,
                    1176, 901, 652, 900, 1318, 1175, 899, 650, 898, 1317, 
                   1174, 897, 648, 896, 1316, 1173, 1137}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{91, 477, 92, 478, 93, 479, 94, 480, 95, 481, 96, 
                   482, 97, 483, 98, 484, 99, 485, 100, 486, 101, 487, 102, 
                   488, 489}, VertexColors -> None], 
                  
                  Line3DBox[{926, 1181, 1325, 925, 676, 927, 1182, 1326, 928, 
                   678, 929, 1183, 1327, 930, 680, 931, 1184, 1328, 932, 682, 
                   933, 1185, 1329, 934, 684, 935, 1186, 1330, 936, 686, 1331,
                    937, 1187, 1332, 938, 689, 1138}, VertexColors -> None], 
                  
                  Line3DBox[{940, 690, 939, 1257, 1085, 941, 692, 942, 1258, 
                   1086, 943, 694, 944, 1259, 1087, 945, 696, 946, 1260, 1088,
                    947, 698, 948, 1261, 1089, 949, 700, 950, 1262, 1188, 
                   1333, 951, 703, 952, 1263, 1090, 953}, VertexColors -> 
                   None], 
                  Line3DBox[{105, 491, 104, 490, 103}, VertexColors -> None], 
                  
                  Line3DBox[{121, 507, 122, 508, 123, 509, 124, 510, 125, 511,
                    126, 512, 127, 513, 128, 514, 129, 515, 130, 516, 131, 
                   517, 132, 518, 519}, VertexColors -> None], 
                  
                  Line3DBox[{955, 1189, 1334, 954, 706, 956, 1190, 1335, 957, 
                   708, 958, 1191, 1336, 959, 710, 960, 1192, 1337, 961, 712, 
                   962, 1193, 1338, 963, 714, 964, 1194, 1339, 965, 716, 1340,
                    966, 1195, 1341, 967, 719, 968}, VertexColors -> None], 
                  Line3DBox[{135, 521, 134, 520, 133}, VertexColors -> None], 
                  
                  Line3DBox[{982, 1146, 1271, 981, 1096, 1270, 980, 1342, 
                   1196, 1269, 979, 730, 978, 1095, 1268, 977, 728, 976, 1094,
                    1267, 975, 726, 974, 1093, 1266, 973, 724, 972, 1092, 
                   1265, 971, 722, 970, 1091, 1264, 969, 720, 1139}, 
                   VertexColors -> None], 
                  
                  Line3DBox[{999, 1204, 1351, 998, 1272, 1097, 1000, 750, 
                   1001, 1273, 1098, 1002, 752, 1003, 1274, 1099, 1004, 754, 
                   1005, 1275, 1100, 1006, 756, 1007, 1276, 1101, 1008, 758, 
                   1009, 1277, 1205, 1352, 1010, 1278, 1102, 1011, 1279, 1103,
                    1140}, VertexColors -> None], 
                  
                  Line3DBox[{1015, 1280, 1104, 1013, 1281, 1105, 1017, 1282, 
                   1106, 1019, 1283, 1107, 1021, 1284, 1108, 1023, 1285, 1109,
                    1025, 1286, 1110, 1027, 1287, 1111, 1029, 1288, 1112, 
                   1031, 1289, 1113, 1033, 1290, 1114, 1035, 1291, 775, 1037, 
                   1292, 1115, 1039, 1293, 1116, 1041}, VertexColors -> None], 
                  
                  Line3DBox[{1040, 1366, 1218, 1038, 1365, 1217, 1036, 1364, 
                   774, 1034, 1363, 1216, 1032, 1362, 1215, 1030, 1361, 1214, 
                   1028, 1360, 1213, 1026, 1359, 1212, 1024, 1358, 1211, 1022,
                    1357, 1210, 1020, 1356, 1209, 1018, 1355, 1208, 1016, 
                   1354, 1207, 1012, 1353, 1206, 1014}, VertexColors -> None], 
                  
                  Line3DBox[{347, 449, 62, 450, 63, 451, 64, 452, 65, 453, 66,
                    454, 67, 455, 68, 456, 69, 457, 70, 458, 71, 459, 72, 460,
                    461}, VertexColors -> None], 
                  Line3DBox[{269, 814, 74, 462, 73}, VertexColors -> None], 
                  
                  Line3DBox[{279, 817, 164, 549, 163, 548, 547, 162, 546, 161,
                    545, 160, 544, 159, 543, 158, 542, 157, 541, 156, 540, 
                   155, 539, 154, 538, 153, 537, 152, 536, 361}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1151, 1300, 1055, 791, 1054, 1373, 1225, 1299, 
                   1053, 1372, 1224, 1052, 1121, 1298, 1051, 1371, 1223, 1050,
                    1120, 1297, 1049, 1370, 1222, 1048, 1119, 1296, 1047, 
                   1369, 1221, 1046, 1118, 1295, 1045, 1368, 1220, 1044, 1117,
                    1294, 1042, 1367, 1219, 1233}, VertexColors -> None], 
                  
                  Line3DBox[{1152, 1307, 867, 618, 868, 1166, 1308, 869, 620, 
                   870, 1167, 1309, 871, 622, 872, 1168, 1310, 873, 624, 874, 
                   1169, 1311, 875, 626, 876, 1170, 1312, 877, 628, 1313, 878,
                    1171, 1314, 879, 631, 1236}, VertexColors -> None], 
                  
                  Line3DBox[{1155, 1379, 1068, 859, 605, 860, 1240, 1069, 
                   1132, 607, 1133, 1380, 1070, 861, 609, 862, 1241, 1071, 
                   863, 611, 1134, 1381, 1072, 1135, 613, 864, 1242, 1165, 
                   1306, 865, 616, 1235}, VertexColors -> None], 
                  
                  Line3DBox[{1158, 661, 910, 1250, 1080, 912, 663, 913, 1251, 
                   1081, 914, 665, 915, 1252, 1082, 916, 667, 917, 1253, 1083,
                    918, 669, 919, 1254, 1084, 920, 671, 921, 1255, 1180, 
                   1324, 922, 674, 923, 1256, 1145, 1159}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1160, 1197, 1343, 983, 735, 985, 1198, 1344, 986,
                    737, 987, 1199, 1345, 988, 739, 989, 1200, 1346, 990, 741,
                    991, 1201, 1347, 992, 743, 993, 1202, 1348, 994, 745, 
                   1349, 995, 1203, 1350, 996, 827, 1161}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{1164, 1384, 1148, 1066, 1377, 1229, 1305, 1065, 
                   1376, 1228, 1064, 1147, 1304, 1063, 1383, 1231, 1062, 1125,
                    1303, 1061, 1375, 1227, 1060, 1124, 1302, 1059, 1382, 
                   1230, 1058, 829, 1057, 1374, 1226, 1056, 1123, 1301, 1234},
                    VertexColors -> None]}, {
                  Opacity[0.45], 
                  
                  Line3DBox[{3, 859, 18, 868, 33, 883, 48, 897, 63, 912, 78, 
                   927, 93, 941, 108, 956, 123, 970, 138, 985, 153, 1000, 168,
                    1016, 1017, 183, 1044, 198, 1056, 213}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{396, 605, 397, 1308, 619, 421, 634, 436, 1317, 
                   649, 451, 663, 465, 1326, 677, 479, 692, 494, 1335, 707, 
                   509, 722, 524, 1344, 736, 538, 750, 552, 1355, 765, 1282, 
                   567, 1368, 780, 581, 1374, 794, 595}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{398, 606, 1240, 399, 620, 422, 635, 1244, 437, 
                   650, 452, 664, 1251, 466, 678, 480, 693, 1258, 495, 708, 
                   510, 723, 1265, 525, 737, 539, 751, 1273, 553, 1356, 766, 
                   1283, 568, 781, 1295, 582, 829, 820}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{7, 861, 22, 872, 37, 887, 52, 901, 67, 916, 82, 
                   931, 97, 945, 112, 960, 127, 974, 142, 989, 157, 1004, 172,
                    1024, 1025, 187, 1048, 202, 1060, 217}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{403, 609, 404, 1310, 623, 425, 638, 440, 1319, 
                   653, 455, 667, 469, 1328, 681, 483, 696, 498, 1337, 711, 
                   513, 726, 528, 1346, 740, 542, 754, 556, 1359, 769, 1286, 
                   571, 1370, 784, 585, 1375, 796, 598}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{405, 610, 1241, 406, 624, 426, 639, 1246, 441, 
                   654, 456, 668, 1253, 470, 682, 484, 697, 1260, 499, 712, 
                   514, 727, 1267, 529, 741, 543, 755, 1275, 557, 1360, 770, 
                   1287, 572, 785, 1297, 586, 797, 1303, 599}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{9, 863, 24, 874, 39, 889, 54, 903, 69, 918, 84, 
                   933, 99, 947, 114, 962, 129, 976, 144, 991, 159, 1006, 174,
                    1028, 1029, 189, 1050, 204, 1062, 219}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{407, 611, 408, 1311, 625, 427, 640, 442, 1320, 
                   655, 457, 669, 471, 1329, 683, 485, 698, 500, 1338, 713, 
                   515, 728, 530, 1347, 742, 544, 756, 558, 1361, 771, 1288, 
                   573, 1371, 786, 587, 1383, 831, 821}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{412, 614, 1242, 414, 628, 430, 643, 1248, 445, 
                   658, 460, 672, 1255, 474, 686, 488, 701, 1262, 503, 716, 
                   518, 731, 1269, 533, 745, 547, 759, 1277, 561, 774, 1291, 
                   576, 789, 1299, 590, 799, 1305, 602}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{597, 1302, 795, 584, 1296, 783, 570, 1285, 768, 
                   1358, 555, 1274, 753, 541, 739, 527, 1266, 725, 512, 710, 
                   497, 1259, 695, 482, 680, 468, 1252, 666, 454, 652, 439, 
                   1245, 637, 424, 622, 402, 1380, 608, 811}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{601, 798, 1376, 589, 788, 1372, 575, 1290, 773, 
                   1363, 560, 758, 546, 744, 1348, 532, 730, 517, 715, 1339, 
                   502, 700, 487, 685, 1330, 473, 671, 459, 657, 1321, 444, 
                   642, 429, 627, 1312, 411, 613, 812}, VertexColors -> None], 
                  
                  Line3DBox[{603, 800, 1377, 591, 790, 1373, 577, 775, 1364, 
                   562, 760, 1352, 548, 746, 1349, 534, 732, 1342, 519, 717, 
                   1340, 504, 702, 1333, 489, 687, 1331, 475, 673, 1324, 461, 
                   659, 1322, 446, 644, 1315, 431, 629, 1313, 415, 615, 1306, 
                   413}, VertexColors -> None], 
                  
                  Line3DBox[{834, 778, 1367, 565, 1280, 763, 1353, 550, 748, 
                   1351, 536, 734, 1343, 522, 720, 507, 705, 1334, 492, 690, 
                   477, 675, 1325, 463, 661, 449, 647, 1316, 434, 632, 419, 
                   617, 1307, 842}, VertexColors -> None], 
                  
                  Line3DBox[{836, 1301, 793, 580, 1294, 779, 566, 1281, 764, 
                   1354, 551, 1272, 749, 537, 735, 523, 1264, 721, 508, 706, 
                   493, 1257, 691, 478, 676, 464, 1250, 662, 450, 648, 435, 
                   1243, 633, 420, 618, 395, 1379, 845}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{837, 830, 1382, 583, 782, 1369, 569, 1284, 767, 
                   1357, 554, 752, 540, 738, 1345, 526, 724, 511, 709, 1336, 
                   496, 694, 481, 679, 1327, 467, 665, 453, 651, 1318, 438, 
                   636, 423, 621, 1309, 401, 607, 839}, VertexColors -> None], 
                  
                  Line3DBox[{838, 1304, 832, 588, 1298, 787, 574, 1289, 772, 
                   1362, 559, 1276, 757, 545, 743, 531, 1268, 729, 516, 714, 
                   501, 1261, 699, 486, 684, 472, 1254, 670, 458, 656, 443, 
                   1247, 641, 428, 626, 410, 1381, 612, 840}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{392, 1064, 206, 1052, 191, 1033, 1032, 176, 1008,
                    161, 993, 146, 978, 131, 964, 116, 949, 101, 935, 86, 920,
                    71, 905, 56, 891, 41, 876, 26, 1135, 259}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{254, 1132, 20, 870, 35, 885, 50, 899, 65, 914, 
                   80, 929, 95, 943, 110, 958, 125, 972, 140, 987, 155, 1002, 
                   170, 1020, 1021, 185, 1046, 200, 1058, 384}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{841, 616, 416, 1314, 630, 432, 645, 447, 1323, 
                   660, 462, 674, 476, 1332, 688, 490, 703, 505, 1341, 718, 
                   520, 733, 1270, 535, 1350, 747, 549, 761, 1278, 563, 1365, 
                   776, 1292, 578, 791, 592, 1384, 854}, VertexColors -> 
                   None], 
                  
                  Line3DBox[{843, 631, 433, 646, 1249, 448, 824, 814, 825, 
                   1256, 815, 689, 491, 704, 1263, 506, 719, 521, 826, 1271, 
                   816, 827, 817, 762, 1279, 564, 1366, 777, 1293, 579, 828, 
                   1300, 835}, VertexColors -> None]}, {}, {}}}, 
               VertexColors -> CompressedData["
1:eJztXXlUj3kXj0lIFFLWKNmyZoSyXEuIaQZDhKwlkb2skzVEYuwGKcmSLY2l
sg7KVkQ0pJoUv35rm8ZWktc57tPX3Pfc89P7mnc45/XnPc/5Pc9zn/u993M/
93NjPmHGjxPL6+joeFTQ0flGR/qXD5v9r6U8fpQHV4rAr3C2GrTZByzt1urY
MzXMPTm7rWXlDCjSy3m3aYUCnF2fH3D3vAdFU+1GONnFwPOD69TejWRQ0mzJ
q/V1Y2DvyVsWxqMus/ZXgX1Tkzto4GJqnOURozSQ/WE8M6T31dL7RhjGbtZd
rYQWywM7WsUml9qP6ZfE7C/OgUZ3xi72e5Kl9fk5e/c5DhXDinIhXtOs0+xB
ylL7m6ABb0aZyaHm7iHVDOYmlvm9tN1367GIibr18uBP8yNRx4LFfb38umTe
9VdBZMHmhxfup4LxllrwXX4edKyUZ+TYWQaTLIeGTc24Dh5mDtZLuueA+SHF
b64nMmDpu6q1d7teg8jqo3RMW+RCrEkzP7OsTChv5L+nYda10t+v9rq4XS/n
LChSgefirgml9nD0cyPiZ8dma19ei9LAHr9bu/RtMkvt15LeFXWyzoEaslVK
r/ynpfYe3+i9+HFmDoQ5LE994S8rtW8MGpIRG5kNW5IueO+PfVJqT9vu2Lfz
SgVMrr5/67ZTv0PzSrMq9DVQwIWQapfutksEt4vjl2leXdHqZxqfnD8l+/Qf
zt9O3aOEq5A2fpzho1J7r9NJF4rNlLDB+c7C5qseltpf79qxaEK+Atb0Wxxc
rfBBqX3bk4aPuugooalpkWOVFuL6JpN9AqNslZCSOETH9KGwH0U/1yV+bh9Z
Ze3gB0oY2T5rardfxfNc7urxw21DFVTL6d6o/9iUUvtY39xDBxqq4PD5s7f7
/CzsxlNOTjZ4poTQI5MLWpYXduXd+BGtZyhhWqxLlefzxX2foP990P+S3SD4
Q/z3xfjnznstjM9OGJ/uGJ/a/HnWfN3xuvZq6Jmx+tRvuuml9oUpENmksgZU
M4aPPdpKfMepjuEBFtfU4GjbtInX+seldl/Zjpxa999/34T7XuvD00rth9HP
psTP9+xybf/sqoAFNhMLrz5KKrWr7j3aKe8vB3lcDYfMwsRSe7q9w6ynenKY
YOkf/qaNsO9+WzQvN14OLxtHRG/xvV9qN0X/HyX+34LxH0jivxfmnyTMP1yc
c+ddW3xy/izX+55fUJNsOKw7wmpoqjjXBvG1Ah7HauDxz6py6Q7CXtfjjsub
iWqIWTx6+o+e6f/mZxPiZ7uo6Liqh+XguTK1pFwD4Z/+Q2fvavFdFshvxN9r
l3O71D4s7XTwFLUMYl5UtXYOjS+1P0b/TyL+d8X4jybx3xvzTwTJPzQPc36O
wvx5lcmf3Hnn4pPzZ6864+y7TdfASceI+5FXxXdJf7bNQq+DGmzmtEkwTPpD
azzPb/1M95s0Obxerx9sf0r4uaZe86fxIVmw/feItbcL74g8if7PJ/7PxvjP
IfEfi/nHlOSfG5j/jUn+p37WVt+5esTlT+68c/HJ+fPCkinzkharoGefFbO8
jqdq9fOO4AYRHTYqIP/iqTcZySJPLkD/lxD/d8X4n0Xi/wHmn+Uk/9hg/h9H
8j9Xfw8j/qlN8A+Hl7j6ztUjzg/cedd2PbVz95XsDT7RLr1XwzL+Dve+NYn9
INoNPhF/ct+Lq+9cPeLyJ3feufjk/PAbxn8/Ev8ZeF66kvNSH8/XDXK+uPNo
gec3iZzfinjeE/G8qzA/7MT8kEbyA4efOfzJ4SWuvnP1iMuf3Hnn/Mz50x7z
fyTJ/9WwXmSQeiHVFwdSXzZhPaqP9ego1q8orF/Fhh/q13/ap3B4nsOfHF7i
6jtXj7j8yZ13Lj45f0r45xDBP/MRLykIXnqO+GoR4qtxiMdMEY/5IB7T5meu
3+T6Iw7Pc/iTw0tcfefqERfP3Hnn4pPzZzTifzuC/3tgv7Aa+4Wa2F/YkP5C
t+KHfmQW9iM60z70I9Lv0P5dstN+U7Jz/RGH5zn8yeElrr5z9YjLn/S8c/HJ
+VOyz8T+9ybpf32wX04g/fJo7K83Yn/NxbkV9u+XSf8u/Q7Xb3L9kT3mn3CS
f65j/q9J8j+Ll5j6TusRlz+5887FpzZ/7kb+p6LFX/mfT+1TtOUZ2r9Ldtpv
cvfVZufwJ8VLaqa+l/W9tJ13F4zPDYT/Ket7faq9rM//ufnDv+s5///7/5vv
8rXH1d/9/P/U75f1vp/r+n8qbr92/3/tcf61PP8/9TxfWvx/af7/0r7jl+a3
r/2cfu3++f93+TLtX9r3+n+cfF32r+07pr6uPmiZLAd63j7UxfNgFgSsivRN
X5QDb+KKIqBCJtxwezR2xyox591UEOIWpyuHcVvz9oQ0T4Sg1bE3EsZmgdr5
zwNX9tyEG/PqOo+vcgVWmib+7KKfByuUPb87VOUp1Km96bbP+Ovsc/bzfDdR
lpIDssDz9hmLM2G5fmSD52euQZOF5uan7fPgRMjLhILhTyFqrmnUiWWCR7KT
V03Xf5cFxk+7dLQzFXzO/BPLGtSZr4CLbwsyUgMEn9bMdmH/EiMNBG1YXG9d
Z8GHPJ2qp5+/XQVL9PoGzH8j+KhxE+4+uOuRB30mWfVuMUZVau8+MLowW5YN
rpvuVA+z4ee8kt1eVq6wR98csI9IWf+8seDrzC/ZKoKeZ0PgoHfbarmI33He
fEjWd2wOeAfkpnQeL64vRv7WhPBXl1rJr3SvogHXKEv3R23Fe0m87hTkFU/n
bN34y3oN7Fj48ieXN2lQT0fu3XpO2Xkn6ffdU+T7ZpRXw6w6x3Wzu4k5zmxv
95VJXVVgFDUsIkgh+N4D3ebV7jdACS+LmjfoUlnwjVblL7/1MlTC+rdj0hoO
F3xs5ByHiX8WKSDQ5ycPgzrCXvds97oTayphgtO0bw1dhT1pebls9TQlVCho
c6fxHPH7KwJXdTHbqwTrGvpB7WoKXrfbxP5V9xUrISk83rZPE/Gcew7BlVq1
VLDd74Kuwwxhb9PgeoutOio4oJeyoYO1sEdkGhleuaqELpWNBtVZIn6f489l
h833drivAPPvn5w/vUfw0vn2Ict3VFXAJfUaD48BSVBl4ugl0eY5UMnkRmJM
QAb0UuzpfHaIOI+thluF+67NgrDpv4Y/ni3mcd3CBp4yWqcC3ZMvvluXIuL5
TWWzijdXquGa/9YJu+PFfKF+Ynre/DQ1JMwsKV/rnphTNFxycLjZHDXMvKSv
brpDXO9QLvLXsS+VsHfXiD3f1RB+qGp2b86hOkoI8Hh8q9Jc8V067cm4o94p
h8u92/i2zrsnzu8Phzpt+FYOrpvtpkCkiOcxtaY06uEvh5kLQvWjzovr68/r
7PV6uQLaD+5tfv2YONfcPKLtjdELVq7QwNym+QNmK8S5SNhQtN1ofg6MTFt7
WrVbBhtzjqhMrFUw8eU421fxD2Duo+Jl8qaxUHO1y5CkJ3lQL3iq3a9NZTDZ
6vuLb5NF/tl3dXSoTEcNRseCKvewFfH/49urB15P0sCSkPKhtufFfU/tHmrT
MEsDjQ3cDCMWCB7e/V1YonKgBk4H60y+tV1cf/fh9QfDmqlg4IO0PwMOiPda
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
keJ5bfiT1vd/AUzHAR4=
                "], VertexNormals -> CompressedData["
1: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
+TjgoSTe58x9z9zvTLtUYdgp0z6Zeqxj6JWpT4Eqp4VVTrZ3mb9MO5m5ulUJ
9/9M+0Nm/3v310jj8TXo+JA5/uwk1TtYnl4qD2TKM/vXNU8s/ysqP2TKfz7m
tRhebytdL2Cu99vTxTpYP7epfgBTP5ehvj7W5xaqT8DU5xrJC9ieQXAKxaHi
qRR/5ty+hO0ZHFGYSXBT5T2KlwIYcf26c+MSbM8JjPh+pYrYM8j58eYntmcJ
G2rPIYKs2J7BbFOOVdie166g/lP3JrFnmFk0oo/teUMJtbcBa2qXnr3mi7Cd
NgtT+2TqkalXpj5nj5F+kPlbvp72H3tJ7BkqV5Lx4UgTHT/WgdgzyNEn8kB7
QSpPXhtvOZZ/eTSRH24dpPa8qYzYMxA/8xSvFwRep/bMVkjsGWxqY8f6AQv4
rhL9tPy6he0Z6C9VwvoERcds/4rnH50sJLjzU63/S+yfP2dT/BnylfhnsHUy
xU16DDx2fB+N6+xZbI+xf9YIpP65/Y3DQxyHOMRoXHIbpv5wrSzxz9C2kfrR
t6bUf6rNpftc6KZiNN73GQlUP0y7PPNkjdS/+mf/cuKf4aRW0h8KNtL+TYNP
8vH410bI+HDsMh1fXcMiGPlncI+TyAP/vKTy5Bie78XyXzjIiuWHW8Wof5Y6
twb7ZxA79SReL9g7lfrnxZ3EP4PMrcewfsCl/KG/+ueJ2oX3mxMcn5hw6irG
9VKrKN7whl8J7vxz0+sNxhsG9yjeyF9G8AaQvqLNi3HToS6Kl1YkE5wB2rpp
nDe+SeP7h0VCh/E6RafSuOR+jK5XaGW0DLaz82MP92E/+riW+k/mPg/3Vy3/
V7yxlmGXl5VqcH9wcRG1Tw2eX8p4/FdKFrFYrz6vGeM/JnL8x2/mSSrPpDKC
N4BWiRaWHwhspnhjJIfgDWDC6YlxNxzxoXhD3MsE4w3gdzIY5z1wm8Pf8QYz
z2Tmncx8U/vDKpIXzeu3+Ybx85sSig9vLST4GYhyJDzF+FnzGcXPTNzJxKFM
/Bkzg+BncIyBm/IYeOlIjhvGz1BzE7EjeO23O7GfNkcahxQekX0MAxrp/mX6
TaYfZfrP7JMEP8PqtySOgbm9tH+1HivGz9BIn9pplDC1T6YemXpl6lMnWRbL
DYIvyO7Hv0b5n4j8Gy4Q/AySl8U1Yvy8tI7iZ+02T4yfQY/wIawf+GBWPNGP
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
UzxtaF7I1s+5H80LpfKmkHn/H2i4pRY=
                "]], {}}, 
             Method -> {
              "ShrinkWrap" -> False, "DefaultBoundaryStyle" -> Directive[
                 GrayLevel[0.3]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "RotationControl" -> "Globe"}, {
             DisplayFunction -> Identity, 
              PlotRange -> {Automatic, Automatic, All}, DisplayFunction -> 
              Identity, Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> 
              None, DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
                FormBox[
                 TagBox["c", HoldForm], TraditionalForm], 
                FormBox[
                 TagBox["r", HoldForm], TraditionalForm], None}, 
              AxesOrigin -> {Automatic, Automatic, Automatic}, AxesStyle -> 
              Directive[
                GrayLevel[0.65], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], BaseStyle -> Automatic, BoxRatios -> {1, 1, 0.4}, 
              BoxStyle -> GrayLevel[0, 0.35], DisplayFunction :> Identity, 
              FaceGridsStyle -> Automatic, ImageSize -> 264., Lighting -> 
              "Neutral", Method -> {"DefaultBoundaryStyle" -> Directive[
                  GrayLevel[0.3]], 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "RotationControl" -> "Globe"}, 
              PlotRange -> {{-2.4419031011451393`, 
               0.4419031011451395}, {-2.4419031011451393`, 
               0.4419031011451395}, {-0.014110851609156245`, 
               0.013992784078452005`}}, PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}, 
             Method -> {"ResolveAsTriangles" -> False}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "3DMathPlot"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[(c (1 + c) (2 + c) r (1 + r) (2 + r))/36, {c, -2.4419, \
0.441903}, {r, -2.4419, 0.441903}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max15904$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`max15906$$ = 
                 0.5, CalculateUtilities`GraphicsUtilities`Private`min15903$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min15905$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max15904$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min15905$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max15906$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$6941189$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min15903$\
6941190$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max15904$\
6941191$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`min15905$\
6941192$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max15906$\
6941193$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max15904$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
max15906$$ = 0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min15905$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$6941189$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min15903$\
6941190$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max15904$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max15904$\
6941191$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min15905$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min15905$\
6941192$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max15906$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max15906$\
6941193$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    ContourPlot[
                    Rational[1, 36] $CellContext`c (1 + $CellContext`c) (
                    2 + $CellContext`c) $CellContext`r (1 + $CellContext`r) (
                    2 + $CellContext`r), {$CellContext`c, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$], 
                    (
                    Piecewise[{{-1. + 
                    1.5414594743262002` Tan[1.5040801783846716` #], # < 
                    0}}, -1. + 
                    1.5414594743262002` Tan[1.5040801783846716` #]]& )[
                    
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$], \
-2.441903307131326], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max15904$$]], 
                    (
                    Piecewise[{{-1. + 
                    1.5414594743262002` Tan[1.5040801783846716` #], # < 
                    0}}, -1. + 
                    1.5414594743262002` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max15904$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$ + 
                    0.002883806614262652, 
                    CalculateUtilities`GraphicsUtilities`Private`max15904$$]],
                     0.4419033071313262]}, {$CellContext`r, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min15905$$], 
                    (
                    Piecewise[{{-1. + 
                    1.5414594743262002` Tan[1.5040801783846716` #], # < 
                    0}}, -1. + 
                    1.5414594743262002` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min15905$$], \
-2.441903307131326], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min15905$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max15906$$]], 
                    (
                    Piecewise[{{-1. + 
                    1.5414594743262002` Tan[1.5040801783846716` #], # < 
                    0}}, -1. + 
                    1.5414594743262002` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min15905$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max15906$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min15905$$ + 
                    0.002883806614262652, 
                    CalculateUtilities`GraphicsUtilities`Private`max15906$$]],
                     0.4419033071313262]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["c", TraditionalForm]], 
                    RawBoxes[
                    FormBox["r", TraditionalForm]]}, AspectRatio -> Automatic,
                     ImageSize -> 264., ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min15903$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max15904$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["c", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min15905$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max15906$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["r", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3t/+ARKfkQrTEB+\
QGN0YkwaUpHzvLXESC9cOtrMN/jz47CZp1q5STAdoSj+c6kvz+O6556739FgESb/\
X66nrxnwQLE628PTEmJGY5aLg8f5ZLolSVPDkGj67Y0xI9B5h8IPEznfTmPdCzkC78xt8H1hUMNDkq\
6aMakrU9EBCntFI1Z6xpCfmJ1MmImD0J3m283p7OHy142AwljFoTSRXL9tC5pkERZIeAt0w5h0D/\
s0dH5fHTwVjIfleEB4R9dB4JxJiAyM4MMzH+9arzdQ9TEwDj0HGl06Tleeo7QVKS8rTCZnl+\
MbFZA3bAoNMlePmfsnNOgW58G/hAxHamJzHJm3PlkC/MK4Yfedl9c+5G+\
D5bVt4KU5XE4f57TLkDTQ9IWqZzuet6+QYqbrWRj/\
n6rLmy0aDvHjK1P9LR1Tp5TBetA2DzI5NjVdrbxl+uy28yLHr5+J+\
YMxn5ygBVw2HSnAfRVyweRTNlAdOou3TVblxOIy7Fd8hOn0qWOEEJs6yX2x/\
PKrA600hxNpNNyAdXs+AgOTEuGLL7R5NqR5lICEywPPr+\
mWTTUQdised7WtPeUzNAHOErFue0BwmC3UHHWVf/qi4lVzONRnyfsg1SYlcK/\
rbWB9pyOXxRHhGEuIFTb16c1glNQbpLftBCRLmwClC0l/mY7+5h4uVQKoOJKpLOhYHtjRn/\
kn0ywIfEZ7qrLlje44u77bFbAJxWqsuoEmyOG02x3S/yXTjhuZA9yXBtyT+\
A73bFLpN4a9uCkt7cLcmdGtCtyZ0a0K3Jvy/a4KNGP+VfgM6N7iu"]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "ContourPlot"}, {}], "\n "}]}],
    Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate forms", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[c (r (1/9 + (1/6 + r/18) r) + c (c r (1/18 + (1/12 + \
r/36) r) + r (1/6 + (1/4 + r/12) r))), {c, r}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"c", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c", " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "36"], "+", 
                    FractionBox["1", "12"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "18"]}], ")"}]}], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "12"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "6"]}], ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["r", "18"], "+", 
                    FractionBox["1", "6"]}], ")"}], " ", "r"}], "+", 
                    FractionBox["1", "9"]}], ")"}]}]}], ")"}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "HornerForm[r (c (1/9 + (1/6 + c/18) c) + r (c (1/6 + (1/4 + c/12) c) \
+ c (1/18 + (1/12 + c/36) c) r)), {r, c}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"r", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "36"], "+", 
                    FractionBox["1", "12"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "18"]}], ")"}], " ", "r"}], "+", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "12"], "+", 
                    FractionBox["1", "4"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "6"]}], ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "18"], "+", 
                    FractionBox["1", "6"]}], ")"}], " ", "c"}], "+", 
                    FractionBox["1", "9"]}], ")"}]}]}], ")"}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Simplification", "id" -> 
     "ExpandedForm", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Expand[(c (1 + c) (2 + c) r (1 + r) (2 + r))/36]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", 
                 SuperscriptBox["r", "3"]}], "36"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", 
                 SuperscriptBox["r", "2"]}], "12"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "3"], " ", "r"}], "18"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", 
                 SuperscriptBox["r", "3"]}], "12"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", 
                 SuperscriptBox["r", "2"]}], "4"], "+", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["c", "2"], " ", "r"}], "6"], "+", 
              FractionBox[
               RowBox[{"c", " ", 
                 SuperscriptBox["r", "3"]}], "18"], "+", 
              FractionBox[
               RowBox[{"c", " ", 
                 SuperscriptBox["r", "2"]}], "6"], "+", 
              FractionBox[
               RowBox[{"c", " ", "r"}], "9"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Alternate form assuming c and r are positive", 
     "scanner" -> "Simplification", "id" -> 
     "AlternateFormAssumingAllVariablesAreRealAndPositive", "position" -> 
     "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Simplify[PowerExpand[(c (1 + c) (2 + c) r (1 + r) (2 + r))/36]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox["1", "36"], " ", "c", " ", 
               RowBox[{"(", 
                 RowBox[{
                   SuperscriptBox["c", "2"], "+", 
                   RowBox[{"3", " ", "c"}], "+", "2"}], ")"}], " ", "r", " ", 
               RowBox[{"(", 
                 RowBox[{
                   SuperscriptBox["r", "2"], "+", 
                   RowBox[{"3", " ", "r"}], "+", "2"}], ")"}]}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False, False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "6", "datatypes" -> "Sum", "timedout" -> "Simplification", 
     "timedoutpods" -> "", "timing" -> "3.543", "parsetiming" -> "0.735", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa79191480ah57bd391gia0000665bhh1ga934fbce5481992349747128482", "id" -> 
     "MSP79201480ah57bd391gia00001deach05i89di14g", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "11", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa79211480ah57bd391gia000011107c2542i3hh905481992349747128482", "version" -> 
     "2.6", "inputstring" -> 
     "sum_{i=1}^{r} sum_{j=1}^{c} [ ij * (r + 1 - i) * (c + 1 - j) ]"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "0", "datatypes" -> "Sum", "timedout" -> "Simplification", 
     "timedoutpods" -> "", "timing" -> "2.96", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "6", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "6", "related" -> "", 
     "version" -> "2.6", "inputstring" -> 
     "sum_{i=1}^{r} sum_{j=1}^{c} [ ij * (r + 1 - i) * (c + 1 - j) ]"}}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 2, 18, 16, 47, 56.3303094`9.503316973067172}, "Line" -> 
    2, "SessionID" -> 33418422269014030074}, Typeset`showpods$$ = {1, 2, 3, 4,
    5, 6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
   36}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "sum_{i=1}^{r} sum_{j=1}^{c} [ ij * (r + 1 - i) * (c + 1 - j) ]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
         Typeset`pod36$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{729., {517.3544921875, 522.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
          Typeset`pod36$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa79191480ah57bd391gia0000665bhh1ga934fbce5481992349747128482", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.8857456764163113`*^9},
 Background->GrayLevel[
  0],ExpressionUUID->"4f165ee6-d680-43cb-acb2-74ab33a33efe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
sum_{i=1}^{r} [ ic - ( sum_{k=0}^{i-1} [ kc ] ) ] + sum_{j=1}^{c} [ rj ]\
\>", "WolframAlphaLong",
 CellChangeTimes->{{3.885820878708723*^9, 3.885821031076231*^9}, {
  3.8858212413106575`*^9, 3.8858212600520725`*^9}, {3.885821307500081*^9, 
  3.8858213138285713`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a447c0c3-48c1-437f-b03b-53dd1e9104bf"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "sum_{i=1}^{r} [ ic - ( sum_{k=0}^{i-1} [ kc ] ) ] + sum_{j=1}^{c} [ rj ]",
    Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "false", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "0", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "5.181", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "", "parseidserver" -> "3", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "3", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2023, 2, 19, 13, 48, 39.9048785`9.353600875618795}, "Line" -> 
    18, "SessionID" -> 33418422269014030074}, Typeset`showpods$$ = {}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "sum_{i=1}^{r} [ ic - ( sum_{k=0}^{i-1} [ kc ] ) ] + sum_{j=1}^{c} [ rj \
]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {}, {}, Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, 
        Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{746., {42.8544921875, 48.1455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.885821319912841*^9},ExpressionUUID->"315afd34-99be-4fec-a54a-\
6d1d876e4480"]
}, Open  ]]
},
WindowSize->{810., 1377.75},
WindowMargins->{{-816, Automatic}, {Automatic, -307.5}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d659f4ba-b3dc-43c1-b8c0-a5ae83876921"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 235, 3, 41, "WolframAlphaLong",ExpressionUUID->"830cb9be-4eed-4266-8b4d-8a13d1b7d837"],
Cell[818, 27, 128895, 2247, 1026, "Print",ExpressionUUID->"c7706c48-b780-40fd-acae-12bd0bd39b5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129750, 2279, 206, 2, 41, "WolframAlphaLong",ExpressionUUID->"319dac30-9fa8-47ca-9a15-c818d29f0996"],
Cell[129959, 2283, 128600, 2238, 1026, "Print",ExpressionUUID->"39bdbd7f-361c-443e-bd72-0f4410da7947"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258596, 4526, 270, 3, 41, "WolframAlphaLong",ExpressionUUID->"01c21a51-f68b-4a40-94ff-a90ae90c9fff"],
Cell[258869, 4531, 124600, 2208, 1054, "Print",ExpressionUUID->"55b38ae0-ab3b-4e63-a885-ddb39ca830c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383506, 6744, 262, 5, 41, "WolframAlphaLong",ExpressionUUID->"dbe83878-5ce6-4d87-ba70-dde3490467d8"],
Cell[383771, 6751, 139269, 2454, 1094, "Print",ExpressionUUID->"46a38212-99bb-413b-8dba-5fa212a94f95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523077, 9210, 267, 5, 41, "WolframAlphaLong",ExpressionUUID->"b824ad0e-7017-4b02-ac21-222f4e3b0f74"],
Cell[523347, 9217, 127004, 2250, 1066, "Print",ExpressionUUID->"4f165ee6-d680-43cb-acb2-74ab33a33efe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650388, 11472, 357, 6, 41, "WolframAlphaLong",ExpressionUUID->"a447c0c3-48c1-437f-b03b-53dd1e9104bf"],
Cell[650748, 11480, 2756, 55, 101, "Print",ExpressionUUID->"315afd34-99be-4fec-a54a-6d1d876e4480"]
}, Open  ]]
}
]
*)

